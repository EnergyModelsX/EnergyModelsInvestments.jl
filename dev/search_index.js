var documenterSearchIndex = {"docs":
[{"location":"manual/simple-example/#examples","page":"Example","title":"Examples","text":"","category":"section"},{"location":"manual/simple-example/","page":"Example","title":"Example","text":"For the content of the individual examples, see the examples directory in the project repository.","category":"page"},{"location":"manual/simple-example/#The-package-is-installed-with-]-add","page":"Example","title":"The package is installed with ] add","text":"","category":"section"},{"location":"manual/simple-example/","page":"Example","title":"Example","text":"From the Julia REPL, run","category":"page"},{"location":"manual/simple-example/","page":"Example","title":"Example","text":"# Starts the Julia REPL\nusing EnergyModelsInvestments\n# Get the path of the examples directory\nexdir = joinpath(pkgdir(EnergyModelsInvestments), \"examples\")\n# Include the code into the Julia REPL to run the examples\ninclude(joinpath(exdir, \"sink_source.jl\"))\ninclude(joinpath(exdir, \"network.jl\"))\ninclude(joinpath(exdir, \"geography.jl\"))","category":"page"},{"location":"manual/simple-example/#The-code-was-downloaded-with-git-clone","page":"Example","title":"The code was downloaded with git clone","text":"","category":"section"},{"location":"manual/simple-example/","page":"Example","title":"Example","text":"The examples can be run from the terminal with","category":"page"},{"location":"manual/simple-example/","page":"Example","title":"Example","text":"~/.../energymodelsinvestments.jl/examples $ julia sink_source.jl\n~/.../energymodelsinvestments.jl/examples $ julia network.jl\n~/.../energymodelsinvestments.jl/examples $ julia geography.jl","category":"page"},{"location":"manual/optimization-variables/#optimization_variables","page":"Optimization variables","title":"Optimization variables","text":"","category":"section"},{"location":"manual/optimization-variables/","page":"Optimization variables","title":"Optimization variables","text":"EnergyModelsInvestments adds additional variables to EnergyModelsBase. These variables are required for being able to extend the model with the potential for investments. The current implementation creates different variables for investments in standard Nodes, Storage nodes, and TransmissionModes.","category":"page"},{"location":"manual/optimization-variables/","page":"Optimization variables","title":"Optimization variables","text":"The individual variables can be differentiated in Cost variables, Capacity variables, and Auxiliary variables.","category":"page"},{"location":"manual/optimization-variables/","page":"Optimization variables","title":"Optimization variables","text":"note: Note\nAs it is the case in EnergyModelsBase, we define almost exclusively variables relative to the rate in EnergyModelsInvestments. The only exception is given for investments in the level/capacity of Storage nodes. These variables start with the prefix textttstor or end with it as suffix.","category":"page"},{"location":"manual/optimization-variables/#var_cost","page":"Optimization variables","title":"Cost variables","text":"","category":"section"},{"location":"manual/optimization-variables/","page":"Optimization variables","title":"Optimization variables","text":"EnergyModelsInvestments introduces variables that help extracting the cost of investments in a technology Node or TransmissionMode at each strategic period. The different variables are:","category":"page"},{"location":"manual/optimization-variables/","page":"Optimization variables","title":"Optimization variables","text":"textttcapex_capn_textttinv t_textttinv: Undiscounted total CAPEX of Node n_textttinv with investments in strategic period t_textttinv,\ntextttcapex_raten_textttstorinv t_textttinv: Undiscounted total CAPEX for rate investments of Storage node n_textttstorinv with investments in strategic period t_textttinv,\ntextttcapex_storn_textttstorinv t_textttinv: Undiscounted total CAPEX for level investments of Storage node n_textttstorinv with investments in strategic period t_textttinv, and\ntextttcapex_transm_textttinv t_textttinv: Undiscounted total CAPEX of TransmissionMode m_textttinv with investments in strategic period t_textttinv.","category":"page"},{"location":"manual/optimization-variables/","page":"Optimization variables","title":"Optimization variables","text":"The total CAPEX takes into account the invested capacity to calculate the total costs as well as the end of horizon value of the individual technologies including discounting. The end of horizon value is currently not considered for transmission technologies. It is only defined for nodes with investments. The variable is an absolute cost with a unit of, *e.g., €.","category":"page"},{"location":"manual/optimization-variables/#var_capacity","page":"Optimization variables","title":"Capacity variables","text":"","category":"section"},{"location":"manual/optimization-variables/","page":"Optimization variables","title":"Optimization variables","text":"Capacity variables are variables that manipulate the installed capacity. In general, we can differentiate in installed capacity variables and change of capacity variables. The installed capacity variables are:","category":"page"},{"location":"manual/optimization-variables/","page":"Optimization variables","title":"Optimization variables","text":"textttcap_currentn_textttinv t_textttinv: Installed capacity of Node n_textttinv with investments in strategic period t_textttinv,\ntextttstor_rate_currentn_textttstorinv t_textttinv: Installed rate capacity of Storage node n_textttstorinv with investments in strategic period t_textttinv,\ntextttstor_cap_currentn_textttstorinv t_textttinv: Installed level capacity of Storage node n_textttstorinv with investments in strategic period t_textttinv, and\ntexttttrans_cap_currentm_textttinv t_textttinv: Installed capacity of TransmissionMode m_textttinv with investments in strategic period t_textttinv.","category":"page"},{"location":"manual/optimization-variables/","page":"Optimization variables","title":"Optimization variables","text":"The approach is similar to the Cost variables as variables are created for each of the individual types. It would be also possible to utilize the variable textttcap_inst as introduced in EnergyModelsBase. This variable is however indexed over operational periods t to allow for variations in the demand on an operational level. The introduction of a new variable through textttcap_current for the capacity at a strategic period simplifies the calculations. It is in practice not necessary and in most cases removed by the presolve routines of the optimization solver.","category":"page"},{"location":"manual/optimization-variables/","page":"Optimization variables","title":"Optimization variables","text":"In addition, we introduce variables for investments in a strategic period as:","category":"page"},{"location":"manual/optimization-variables/","page":"Optimization variables","title":"Optimization variables","text":"textttcap_addn_textttinv t_textttinv: Added capacity of Node n_textttinv with investments in the beginning of strategic period t_textttinv,\ntextttstor_rate_addn_textttstorinv t_textttinv: Added rate capacity of Storage node n_textttstorinv with investments in the beginning of strategic period t_textttinv,\ntextttstor_cap_addn_textttstorinv t_textttinv: Added level capacity of Storage node n_textttstorinv with investments in the beginning of strategic period t_textttinv, and\ntexttttrans_cap_addm_textttinv t_textttinv: Added capacity of TransmissionMode m_textttinv with investments in the beginning of strategic period t_textttinv.","category":"page"},{"location":"manual/optimization-variables/","page":"Optimization variables","title":"Optimization variables","text":"These investments are available at the beginning of a strategic period.","category":"page"},{"location":"manual/optimization-variables/","page":"Optimization variables","title":"Optimization variables","text":"The model can also choose to retire technologies at the end of each strategic period through removal variables given as:","category":"page"},{"location":"manual/optimization-variables/","page":"Optimization variables","title":"Optimization variables","text":"textttcap_remn_textttinv t_textttinv: Retired capacity of Node n_textttinv with investments at the end of strategic period t_textttinv,\ntextttstor_rate_remn_textttstorinv t_textttinv: Retired rate capacity of Storage node n_textttstorinv with investments at the end of strategic period t_textttinv,\ntextttstor_cap_remn_textttstorinv t_textttinv: Retired level capacity of Storage node n_textttstorinv with investments at the end of strategic period t_textttinv, and\ntexttttrans_cap_remm_textttinv t_textttinv: Retired capacity of TransmissionMode m_textttinv with investments at the end of strategic period t_textttinv.","category":"page"},{"location":"manual/optimization-variables/","page":"Optimization variables","title":"Optimization variables","text":"The retired capacity corresponds to removal of capacity, either due to the end of lifetime or due to lack of usage. Capacity removal only has a reduced impact on the objective function due to removal of the fixed OPEX. It can however be beneficial for the model to remove unused capacity to avoid fixed OPEX when the technology is not used in the future. Early removal of a technology, that is before the end of its lifetime, does not provide a rest value to the system.","category":"page"},{"location":"manual/optimization-variables/#var_aux","page":"Optimization variables","title":"Auxiliary variables","text":"","category":"section"},{"location":"manual/optimization-variables/","page":"Optimization variables","title":"Optimization variables","text":"Auxiliary variables are variables that are required for certain investment modes. The model creates these variables independent of the investment mode, although the meaning of the auxiliary variables changes depending on the investment mode.","category":"page"},{"location":"manual/optimization-variables/","page":"Optimization variables","title":"Optimization variables","text":"These variables are:","category":"page"},{"location":"manual/optimization-variables/","page":"Optimization variables","title":"Optimization variables","text":"textttcap_invest_bn_textttinv t_textttinv and textttcap_remove_bn_textttinv t_textttinv ,\ntextttstor_rate_invest_bn_textttstorinv t_textttinv and textttstor_rate_remove_bn_textttstorinv t_textttinv,\ntextttstor_cap_invest_bn_textttstorinv t_textttinv and textttstor_cap_remove_bn_textttstorinv t_textttinv, and\ntexttttrans_cap_invest_bm_textttinv t_textttinv and texttttrans_cap_remove_bm_textttinv t_textttinv.","category":"page"},{"location":"manual/optimization-variables/#[ContinuousInvestment](@ref)","page":"Optimization variables","title":"ContinuousInvestment","text":"","category":"section"},{"location":"manual/optimization-variables/","page":"Optimization variables","title":"Optimization variables","text":"The variable textttcap_invest_b has a lower bound of 0, but is not included in any constraint. The variable textttcap_remove_b is not included in any constraint.","category":"page"},{"location":"manual/optimization-variables/#[BinaryInvestment](@ref)","page":"Optimization variables","title":"BinaryInvestment","text":"","category":"section"},{"location":"manual/optimization-variables/","page":"Optimization variables","title":"Optimization variables","text":"The variable textttcap_invest_b is a binary and used in calculating the current capacity. The variable textttcap_remove_b is not included in any constraint.","category":"page"},{"location":"manual/optimization-variables/#[DiscreteInvestment](@ref)","page":"Optimization variables","title":"DiscreteInvestment","text":"","category":"section"},{"location":"manual/optimization-variables/","page":"Optimization variables","title":"Optimization variables","text":"The variable textttcap_invest_b is an integer and used in calculating the added capacity. The variable textttcap_remove_b is an integer and used in calculating the removed capacity.","category":"page"},{"location":"manual/optimization-variables/#[SemiContiInvestment](@ref)","page":"Optimization variables","title":"SemiContiInvestment","text":"","category":"section"},{"location":"manual/optimization-variables/","page":"Optimization variables","title":"Optimization variables","text":"The variable textttcap_invest_b is a binary and used in calculating the added capacity by providing a lower bound as well as in the CAPEX calculation in the case of SemiContinuousOffsetInvestment. The variable textttcap_remove_b is not included in any constraint.","category":"page"},{"location":"manual/optimization-variables/#[FixedInvestment](@ref)","page":"Optimization variables","title":"FixedInvestment","text":"","category":"section"},{"location":"manual/optimization-variables/","page":"Optimization variables","title":"Optimization variables","text":"The variable textttcap_invest_b is fixed to 1 and used in calculating the current capacity. The variable textttcap_remove_b is not included in any constraint.","category":"page"},{"location":"manual/philosophy/#Philosophy","page":"Philosophy","title":"Philosophy","text":"","category":"section"},{"location":"manual/philosophy/#General-design-philosophy","page":"Philosophy","title":"General design philosophy","text":"","category":"section"},{"location":"manual/philosophy/","page":"Philosophy","title":"Philosophy","text":"EnergyModelsInvestments provides EnergyModelsBase with the potential for investments. The extension is achieved through providing a new InvestmentModel which is subsequently used for dispatching on several core functions within EnergyModelsBase. Hence, its application does not require any changes to the model itself. This corresponds to the 3ʳᵈ bullet point in the list of Extensions to the model.","category":"page"},{"location":"manual/philosophy/","page":"Philosophy","title":"Philosophy","text":"The aim in the package development is to provide maximum flexibility to the user, similarly to EnergyModelsBase. In the case of investments, the flexibility is required for selecting:","category":"page"},{"location":"manual/philosophy/","page":"Philosophy","title":"Philosophy","text":"the investment mode for a given technology in a given region and\nthe lifetime description for a given technology in a given region.","category":"page"},{"location":"manual/philosophy/","page":"Philosophy","title":"Philosophy","text":"The model is also compatible with EnergyModelsGeography to extend its concept to investment in TransmissionModes.","category":"page"},{"location":"manual/philosophy/#Investment-modes","page":"Philosophy","title":"Investment modes","text":"","category":"section"},{"location":"manual/philosophy/","page":"Philosophy","title":"Philosophy","text":"Investment modes are different approaches for implementing investments in technologies. They are explained in detail in Investment Types. EnergyModelsInvestments allows for different investment modes for technologies, both for different technologies, but also for the same technology implemented through different instances.","category":"page"},{"location":"manual/philosophy/","page":"Philosophy","title":"Philosophy","text":"Different technologies require different descriptions of the investments. Consider as an example a wind turbine within a model describing a country as single region. An onshore wind turbine has a maximum capacity of around 6 MW, depending on the available infrastructure for transporting the blades. If the total investments in wind turbines are in the GW scale, it is possible to model the wind turbines as continuous investments. A natural gas reforming plant with CCS behaves in this situation differently. Chemical processes experience in practice significant economy of scales up to a maximum capacity. Hence, it is in this situation beneficial to use discrete or semi-continuous investments for a natural gas reforming plant.","category":"page"},{"location":"manual/philosophy/","page":"Philosophy","title":"Philosophy","text":"It can however be also useful to use differing investment modes for the same technology in different regions. Consider again the wind turbine. If a second region allows as well for wind turbine investments, however at significantly reduced size, it can be beneficial in this region to apply discrete investments or alternatively, if the region corresponds to an offshore field, semi-continuous investments to account for economy of scales and minimum invested capacities.","category":"page"},{"location":"manual/philosophy/","page":"Philosophy","title":"Philosophy","text":"Allowing for differing investment modes results in a reduction in the computational demand while simultaneously allowing for improved description of certain technologies.","category":"page"},{"location":"manual/philosophy/#Lifetime-modes","page":"Philosophy","title":"Lifetime modes","text":"","category":"section"},{"location":"manual/philosophy/","page":"Philosophy","title":"Philosophy","text":"Lifetime modes can be used for describing how the lifetime of a technology should be handled. In practice, models either do not consider the lifetime, include annualized costs for each year, or use the total costs with a potential final value, if the technology still has a remaining lifetime at the end of the optimizaztion horizon. EnergyModelsInvestments allows to choose as well differing lifetime modes for the individual technologies.","category":"page"},{"location":"library/internals/#Internals","page":"Internals","title":"Internals","text":"","category":"section"},{"location":"library/internals/#Index","page":"Internals","title":"Index","text":"","category":"section"},{"location":"library/internals/","page":"Internals","title":"Internals","text":"Pages = [\"internals.md\"]","category":"page"},{"location":"library/internals/#Types","page":"Internals","title":"Types","text":"","category":"section"},{"location":"library/internals/","page":"Internals","title":"Internals","text":"Modules = [\n    EMI,\n    isdefined(Base, :get_extension) ?\n    Base.get_extension(EMI, :EMIGeoExt) :\n    EMI.EMIGeoExt,\n]\nPublic = false\nOrder = [:type]","category":"page"},{"location":"library/internals/#Methods","page":"Internals","title":"Methods","text":"","category":"section"},{"location":"library/internals/","page":"Internals","title":"Internals","text":"Modules = [\n    EMI,\n    isdefined(Base, :get_extension) ?\n    Base.get_extension(EMI, :EMIGeoExt) :\n    EMI.EMIGeoExt,\n]\nPublic = false\nOrder = [:function]","category":"page"},{"location":"library/internals/#EnergyModelsBase.check_node_data-Tuple{EnergyModelsBase.Node, InvestmentData, Any, AbstractInvestmentModel}","page":"Internals","title":"EnergyModelsBase.check_node_data","text":"EMB.check_node_data(n::EMB.Node, data::InvestmentData, 𝒯, modeltype::AbstractInvestmentModel)\n\nPerforms various checks on investment data for standard nodes.\n\nChecks\n\nEach node can only have a single InvestmentData.\nFor each field with TimeProfile:\nIf the TimeProfile is a StrategicProfile, it will check that the profile is in accordance with the TimeStructure\nTimeProfiles in InvestmentData cannot include OperationalProfile, RepresentativeProfile, or ScenarioProfile as this is not allowed through indexing on the TimeProfile.\nThe field :cap_min_add has to be less than :cap_max_add in InvestmentData.\nExisting capacity cannot be larger than :cap_max_inst capacity in the beginning. If cap_start is nothing, it also checks that the the field :cap of the node n is not including OperationalProfile, RepresentativeProfile, or ScenarioProfile.\n\n\n\n\n\n","category":"method"},{"location":"library/internals/#EnergyModelsBase.check_node_data-Tuple{EnergyModelsBase.Storage, InvestmentData, Any, AbstractInvestmentModel}","page":"Internals","title":"EnergyModelsBase.check_node_data","text":"EMB.check_node_data(n::Storage, data::InvestmentData, 𝒯, modeltype::AbstractInvestmentModel)\n\nPerforms various checks on investment data for standard nodes. It is similar to the standard check nodes functions, but adds checks on\n\nChecks\n\nEach node can only have a single InvestmentData.\nThe InvestmentData must be InvDataStorage.\nFor each field with TimeProfile:\nIf the TimeProfile is a StrategicProfile, it will check that the profile is in accordance with the TimeStructure\nTimeProfiles in InvestmentData cannot include OperationalProfile, RepresentativeProfile, or ScenarioProfile as this is not allowed through indexing on the TimeProfile.\nThe field :rate_min_add has to be less than :rate_max_add in InvDataStorage.\nThe field :stor_min_add has to be less than :stor_max_add in InvDataStorage.\nExisting capacity cannot be larger than :rate_max_inst capacity in the beginning. If rate_start is nothing, it also checks that the the field :stor_rate of the node n is not including OperationalProfile, RepresentativeProfile, or ScenarioProfile.\nExisting capacity cannot be larger than :stor_max_inst capacity in the beginning. If stor_start is nothing, it also checks that the the field :stor_cap of the node n is not including OperationalProfile, RepresentativeProfile, or ScenarioProfile.\n\n\n\n\n\n","category":"method"},{"location":"library/internals/#EnergyModelsBase.constraints_capacity_installed-Tuple{Any, EnergyModelsBase.Node, TimeStruct.TimeStructure, AbstractInvestmentModel}","page":"Internals","title":"EnergyModelsBase.constraints_capacity_installed","text":"EMB.constraints_capacity_installed(m, n::EMB.Node, 𝒯, modeltype::AbstractInvestmentModel\n\nSet capacity-related constraints for nodes 𝒩 for investment time structure 𝒯:\n\nbounds\nbinary for BinaryInvestment\nlink capacity variables\n\n\n\n\n\n","category":"method"},{"location":"library/internals/#EnergyModelsBase.constraints_capacity_installed-Tuple{Any, EnergyModelsBase.Storage, TimeStruct.TimeStructure, AbstractInvestmentModel}","page":"Internals","title":"EnergyModelsBase.constraints_capacity_installed","text":"constraints_capacity_installed(m, n::Storage, 𝒯::TimeStructure, modeltype::AbstractInvestmentModel)\n\nSet storage-related constraints for nodes 𝒩ˢᵗᵒʳ for investment time structure 𝒯:\n\nbounds\nbinary for BinaryInvestment\nlink storage variables\n\n\n\n\n\n","category":"method"},{"location":"library/internals/#EnergyModelsBase.objective-Tuple{Any, Any, Any, Any, AbstractInvestmentModel}","page":"Internals","title":"EnergyModelsBase.objective","text":"EMB.objective(m, 𝒩, 𝒯, modeltype::AbstractInvestmentModel)\n\nCreate objective function overloading the default from EMB for AbstractInvestmentModel.\n\nMaximize Net Present Value from investments (CAPEX) and operations (OPEX and emission costs)\n\nTODO:\n\nConsider adding contributions from\n\nrevenue (as positive variable, adding positive)\nmaintenance based on usage (as positive variable, adding negative)\n\nThese variables would need to be introduced through the package SparsVariables.\n\nBoth are not necessary, as it is possible to include them through the OPEX values, but it would be beneficial for a better separation and simpler calculations from the results.\n\n\n\n\n\n","category":"method"},{"location":"library/internals/#EnergyModelsBase.variables_capex-Tuple{Any, Any, Any, Any, AbstractInvestmentModel}","page":"Internals","title":"EnergyModelsBase.variables_capex","text":"EMB.variables_capex(m, 𝒩, 𝒯, 𝒫, modeltype::AbstractInvestmentModel)\n\nCreate variables for the capital costs for the invesments in storage and technology nodes.\n\nAdditional variables for investment in capacity:\n\n:capex_cap - CAPEX costs for a technology\n:cap_invest_b - binary variable whether investments in capacity are happening\n:cap_remove_b - binary variable whether investments in capacity are removed\n:cap_current - installed capacity for storage in each strategic period\n:cap_add - added capacity\n:cap_rem - removed capacity\n\nAdditional variables for investment in storage:\n\n:capex_stor - CAPEX costs for increases in the capacity of a storage\n:stor_cap_invest_b - binary variable whether investments in capacity are happening\n:stor_cap_remove_b - binary variable whether investments in capacity are removed\n:stor_cap_current - installed capacity for storage in each strategic period\n:stor_cap_add - added capacity\n:stor_cap_rem - removed capacity\n\n:capex_rate - CAPEX costs for increases in the rate of a storage\n:stor_rate_invest_b - binary variable whether investments in rate are happening\n:stor_rate_remove_b - binary variable whether investments in rate are removed\n:stor_rate_current - installed rate for storage in each strategic period\n:stor_rate_add - added rate\n:stor_rate_rem - removed rate\n\n\n\n\n\n","category":"method"},{"location":"library/internals/#EnergyModelsInvestments.capex-Tuple{EnergyModelsBase.Node, Any}","page":"Internals","title":"EnergyModelsInvestments.capex","text":"capex(n::EMB.Node, t_inv)\n\nReturns the CAPEX of a node n in investment period t_inv.\n\n\n\n\n\n","category":"method"},{"location":"library/internals/#EnergyModelsInvestments.capex-Tuple{EnergyModelsBase.Node}","page":"Internals","title":"EnergyModelsInvestments.capex","text":"capex(n::EMB.Node)\n\nReturns the CAPEX of a node n as TimeProfile.\n\n\n\n\n\n","category":"method"},{"location":"library/internals/#EnergyModelsInvestments.capex-Tuple{EnergyModelsBase.Storage, Any}","page":"Internals","title":"EnergyModelsInvestments.capex","text":"capex(n::Storage, t_inv)\n\nReturns the CAPEX of a Storage node n in investment period t_inv.\n\n\n\n\n\n","category":"method"},{"location":"library/internals/#EnergyModelsInvestments.capex-Tuple{EnergyModelsBase.Storage}","page":"Internals","title":"EnergyModelsInvestments.capex","text":"capex(n::Storage)\n\nReturns the CAPEX of a Storage node n as TimeProfile.\n\n\n\n\n\n","category":"method"},{"location":"library/internals/#EnergyModelsInvestments.capex_offset-Tuple{EnergyModelsBase.Node, Any}","page":"Internals","title":"EnergyModelsInvestments.capex_offset","text":"capex_offset(n::Node, t_inv)\n\nReturns the offset of the CAPEX of node n in investment period t_inv.\n\n\n\n\n\n","category":"method"},{"location":"library/internals/#EnergyModelsInvestments.check_invest_profile-Tuple{Any, Any}","page":"Internals","title":"EnergyModelsInvestments.check_invest_profile","text":"check_invest_profile(time_profile, message)\n\nFunction for checking that and individual TimeProfile does not include the wrong type for the indexing within EnergyModelsInvestments\n\nChecks\n\nTimeProfiles in InvestmentData cannot include OperationalProfile, RepresentativeProfile, or ScenarioProfile as this is not allowed through indexing on the TimeProfile.\n\n\n\n\n\n","category":"method"},{"location":"library/internals/#EnergyModelsInvestments.discount_rate-Tuple{AbstractInvestmentModel}","page":"Internals","title":"EnergyModelsInvestments.discount_rate","text":"discount_rate(modeltype::AbstractInvestmentModel)\n\nReturns the discount rate of EnergyModel modeltype\n\n\n\n\n\n","category":"method"},{"location":"library/internals/#EnergyModelsInvestments.has_investment-Tuple{EnergyModelsBase.Node}","page":"Internals","title":"EnergyModelsInvestments.has_investment","text":"has_investment(n::EMB.Node)\n\nFor a given Node, checks that it contains the required investment data.\n\n\n\n\n\n","category":"method"},{"location":"library/internals/#EnergyModelsInvestments.increment-Tuple{EnergyModelsBase.Node, Any}","page":"Internals","title":"EnergyModelsInvestments.increment","text":"increment(n::EMB.Node, t_inv)\n\nReturns the capacity increment of node n in investment period t_inv.\n\n\n\n\n\n","category":"method"},{"location":"library/internals/#EnergyModelsInvestments.increment-Tuple{EnergyModelsBase.Node}","page":"Internals","title":"EnergyModelsInvestments.increment","text":"increment(n::EMB.Node)\n\nReturns the capacity increment of node n as TimeProfile.\n\n\n\n\n\n","category":"method"},{"location":"library/internals/#EnergyModelsInvestments.increment-Tuple{EnergyModelsBase.Storage, Any}","page":"Internals","title":"EnergyModelsInvestments.increment","text":"increment(n::Storage, t_inv)\n\nReturns the capacity increment of Storage node n in investment period t_inv.\n\n\n\n\n\n","category":"method"},{"location":"library/internals/#EnergyModelsInvestments.increment-Tuple{EnergyModelsBase.Storage}","page":"Internals","title":"EnergyModelsInvestments.increment","text":"increment(n::Storage)\n\nReturns the capacity increment of Storage node n as TimeProfile.\n\n\n\n\n\n","category":"method"},{"location":"library/internals/#EnergyModelsInvestments.investment_data-Tuple{Any}","page":"Internals","title":"EnergyModelsInvestments.investment_data","text":"investment_data(type)\n\nReturn the investment data of the type type.\n\n\n\n\n\n","category":"method"},{"location":"library/internals/#EnergyModelsInvestments.investment_mode-Tuple{Any}","page":"Internals","title":"EnergyModelsInvestments.investment_mode","text":"investment_mode(type)\n\nReturn the investment mode of the type type. By default, all investments are continuous.\n\n\n\n\n\n","category":"method"},{"location":"library/internals/#EnergyModelsInvestments.lifetime-Tuple{Any, Any}","page":"Internals","title":"EnergyModelsInvestments.lifetime","text":"lifetime(type, t)\n\nReturn the lifetime of the type type in period t.\n\n\n\n\n\n","category":"method"},{"location":"library/internals/#EnergyModelsInvestments.lifetime-Tuple{Any}","page":"Internals","title":"EnergyModelsInvestments.lifetime","text":"lifetime(type)\n\nReturn the lifetime of the type type as TimeProfile.\n\n\n\n\n\n","category":"method"},{"location":"library/internals/#EnergyModelsInvestments.lifetime_mode-Tuple{Any}","page":"Internals","title":"EnergyModelsInvestments.lifetime_mode","text":"lifetime_mode(type)\n\nReturn the lifetime mode of the type type. By default, all investments are unlimited.\n\n\n\n\n\n","category":"method"},{"location":"library/internals/#EnergyModelsInvestments.max_add-Tuple{EnergyModelsBase.Node, Any}","page":"Internals","title":"EnergyModelsInvestments.max_add","text":"max_add(n::EMB.Node, t_inv)\n\nReturns the maximum allowed added capacity of Node n in investment period t_inv.\n\n\n\n\n\n","category":"method"},{"location":"library/internals/#EnergyModelsInvestments.max_add-Tuple{EnergyModelsBase.Node}","page":"Internals","title":"EnergyModelsInvestments.max_add","text":"max_add(n::EMB.Node)\n\nReturns the maximum allowed added capacity of Node n as TimeProfile.\n\n\n\n\n\n","category":"method"},{"location":"library/internals/#EnergyModelsInvestments.max_add-Tuple{EnergyModelsBase.Storage, Any}","page":"Internals","title":"EnergyModelsInvestments.max_add","text":"max_add(n::Storage, t_inv)\n\nReturns the maximum allowed added capacity of Storage node n in investment period t_inv.\n\n\n\n\n\n","category":"method"},{"location":"library/internals/#EnergyModelsInvestments.max_add-Tuple{EnergyModelsBase.Storage}","page":"Internals","title":"EnergyModelsInvestments.max_add","text":"max_add(n::Storage)\n\nReturns the maximum allowed added capacity of Storage node n as TimeProfile.\n\n\n\n\n\n","category":"method"},{"location":"library/internals/#EnergyModelsInvestments.max_installed-Tuple{EnergyModelsBase.Node, Any}","page":"Internals","title":"EnergyModelsInvestments.max_installed","text":"max_installed(n::EMB.Node, t_inv)\n\nReturns the maximum allowed installed capacity of node n in investment period t_inv.\n\n\n\n\n\n","category":"method"},{"location":"library/internals/#EnergyModelsInvestments.max_installed-Tuple{EnergyModelsBase.Node}","page":"Internals","title":"EnergyModelsInvestments.max_installed","text":"max_installed(n::EMB.Node)\n\nReturns the maximum allowed installed capacity of node n as TimeProfile.\n\n\n\n\n\n","category":"method"},{"location":"library/internals/#EnergyModelsInvestments.max_installed-Tuple{EnergyModelsBase.Storage, Any}","page":"Internals","title":"EnergyModelsInvestments.max_installed","text":"max_installed(n::Storage, t_inv)\n\nReturns the maximum allowed installed capacity of Storage node n in investment period t_inv.\n\n\n\n\n\n","category":"method"},{"location":"library/internals/#EnergyModelsInvestments.max_installed-Tuple{EnergyModelsBase.Storage}","page":"Internals","title":"EnergyModelsInvestments.max_installed","text":"max_installed(n::Storage)\n\nReturns the maximum allowed installed capacity of Storage node n as TimeProfile.\n\n\n\n\n\n","category":"method"},{"location":"library/internals/#EnergyModelsInvestments.min_add-Tuple{EnergyModelsBase.Node, Any}","page":"Internals","title":"EnergyModelsInvestments.min_add","text":"min_add(n::EMB.Node, t_inv)\n\nReturns the minimum allowed added capacity of node n in investment period t_inv.\n\n\n\n\n\n","category":"method"},{"location":"library/internals/#EnergyModelsInvestments.min_add-Tuple{EnergyModelsBase.Node}","page":"Internals","title":"EnergyModelsInvestments.min_add","text":"min_add(n::EMB.Node)\n\nReturns the minimum allowed added capacity of node n as TimeProfile.\n\n\n\n\n\n","category":"method"},{"location":"library/internals/#EnergyModelsInvestments.min_add-Tuple{EnergyModelsBase.Storage, Any}","page":"Internals","title":"EnergyModelsInvestments.min_add","text":"min_add(n::Storage, t_inv)\n\nReturns the minimum allowed added capacity of Storage node n in investment period t_inv.\n\n\n\n\n\n","category":"method"},{"location":"library/internals/#EnergyModelsInvestments.min_add-Tuple{EnergyModelsBase.Storage}","page":"Internals","title":"EnergyModelsInvestments.min_add","text":"min_add(n::Storage)\n\nReturns the minimum allowed added capacity of Storage node n as TimeProfile.\n\n\n\n\n\n","category":"method"},{"location":"library/internals/#EnergyModelsInvestments.nodes_investment-Tuple{Vector{<:EnergyModelsBase.Node}}","page":"Internals","title":"EnergyModelsInvestments.nodes_investment","text":"nodes_investment(𝒩::Vector{<:EMB.Node})\n\nFor a given Vector{<:Node}, return all Nodes with investments.\n\n\n\n\n\n","category":"method"},{"location":"library/internals/#EnergyModelsInvestments.set_capacity_cost-NTuple{5, Any}","page":"Internals","title":"EnergyModelsInvestments.set_capacity_cost","text":"set_capacity_cost(m, n, 𝒯, t_inv, modeltype)\n\nSet the capex_cost based on the technology investment cost, and strategic period length to include the needs for reinvestments and the rest value. It implements different versions of the lifetime implementation:\n\nUnlimitedLife:    The investment life is not limited. The investment costs do not consider any reinvestment or rest value.\nStudyLife:        The investment last for the whole study period with adequate reinvestments at end of lifetime and rest value.\nPeriodLife:       The investment is considered to last only for the strategic period. the excess lifetime is considered in the rest value.\nRollingLife:      The investment is rolling to the next strategic periods and it is retired at the end of its lifetime or the end of the previous sp if its lifetime ends between two sp.\n\n\n\n\n\n","category":"method"},{"location":"library/internals/#EnergyModelsInvestments.set_capacity_installation-Tuple{Any, Any, Any}","page":"Internals","title":"EnergyModelsInvestments.set_capacity_installation","text":"set_capacity_installation(m, n, 𝒯ᴵⁿᵛ)\n\nAdd constraints related to capacity installation depending on investment mode of node n\n\n\n\n\n\n","category":"method"},{"location":"library/internals/#EnergyModelsInvestments.set_capex_value-Tuple{Any, Any, Any}","page":"Internals","title":"EnergyModelsInvestments.set_capex_value","text":"set_capex_value(years, lifetime, r)\n\nCalculate the discounted values used in the lifetime calculations, when the LifetimeMode is given by PeriodLife and StudyLife.\n\nArguments\n\nyears:: the remaining years for calculating the discounted value. The years are\n\ndepending on the considered LifetimeMode, using remaining(t_inv, 𝒯) for StudyLife and duration(t_inv) for PeriodLife.\n\nlifetime: the lifetime of the node.\nr: the discount rate.\n\n\n\n\n\n","category":"method"},{"location":"library/internals/#EnergyModelsInvestments.set_investment_properties-Tuple{Any, Any}","page":"Internals","title":"EnergyModelsInvestments.set_investment_properties","text":"set_investment_properties(n, var)\n\nSet investment properties for variable var for type n, e.g., set to binary for BinaryInvestment, bounds, etc.\n\n\n\n\n\n","category":"method"},{"location":"library/internals/#EnergyModelsInvestments.set_storage_installation-Tuple{Any, Any, Any}","page":"Internals","title":"EnergyModelsInvestments.set_storage_installation","text":"set_storage_installation(m, n, 𝒯ᴵⁿᵛ)\n\nAdd constraints related to storage installation depending on investment mode of node n\n\n\n\n\n\n","category":"method"},{"location":"library/internals/#EnergyModelsInvestments.start_cap-Tuple{Any, Any, Any, Any, EnergyModelsBase.EnergyModel}","page":"Internals","title":"EnergyModelsInvestments.start_cap","text":"start_cap(m, n, t, stcap, modeltype)\n\nReturns the starting capacity of the node in the first investment period. If no starting capacity is provided in InvestmentData (default = Nothing), then use the provided capacity from the field Cap.\n\n\n\n\n\n","category":"method"},{"location":"library/internals/#EMIGeoExt.constraints_transmission_invest-Tuple{Any, Any, Any, AbstractInvestmentModel}","page":"Internals","title":"EMIGeoExt.constraints_transmission_invest","text":"constraints_transmission_invest(m, 𝒯, ℳ, modeltype::EMI.AbstractInvestmentModel)\n\nSet capacity-related constraints for TransmissionModes ℳ for investment time structure 𝒯:\n\nbounds\nbinary for BinaryInvestment\nlink capacity variables\n\n\n\n\n\n","category":"method"},{"location":"library/internals/#EMIGeoExt.set_capacity_cost-Tuple{Any, TransmissionMode, Any, Any, Any}","page":"Internals","title":"EMIGeoExt.set_capacity_cost","text":"set_capacity_cost(m, tm::TransmissionMode, 𝒯, t_inv, modeltype)\n\nSet capex_trans based on the technology investment cost to include the potential for either semi continuous costs with offsets or piecewise linear costs. It implements different versions of cost calculations:\n\nInvestment: The cost is linear dependent on the installed capacity. This is the default\n\nfor all invcestment options\n\nSemiContinuousOffsetInvestment: The cost is linear dependent on the added capacity with a\n\ngiven offset\n\n\n\n\n\n","category":"method"},{"location":"library/internals/#EMIGeoExt.set_trans_cap_installation-Tuple{Any, Any, Any}","page":"Internals","title":"EMIGeoExt.set_trans_cap_installation","text":"set_trans_cap_installation(m, tm, 𝒯ᴵⁿᵛ, investment_mode)\n\nAdd constraints related to capacity installation depending on investment mode of TransmissionMode tm.\n\n\n\n\n\n","category":"method"},{"location":"library/internals/#EnergyModelsGeography.update_objective-Tuple{Any, Any, Any, AbstractInvestmentModel}","page":"Internals","title":"EnergyModelsGeography.update_objective","text":"EMG.update_objective(m, 𝒩, 𝒯, 𝒫, ℒᵗʳᵃⁿˢ, modeltype::EMI.AbstractInvestmentModel)\n\nCreate objective function overloading the default from EMB for EMI.AbstractInvestmentModel.\n\nMaximize Net Present Value from revenues, investments (CAPEX) and operations (OPEX)\n\nTODO:\n\n* consider passing expression around for updating\n\n* consider reading objective and adding terms/coefficients (from model object m)\n\n\n\n\n\n","category":"method"},{"location":"library/internals/#EnergyModelsGeography.variables_trans_capacity-Tuple{Any, Any, Any, AbstractInvestmentModel}","page":"Internals","title":"EnergyModelsGeography.variables_trans_capacity","text":"EMG.variables_trans_capacity(m, 𝒯, ℳ, modeltype::EMI.AbstractInvestmentModel)\n\nCreate variables to track how much of installed transmision capacity is used for all time periods t ∈ 𝒯 and how much energy is lossed. Introduction of the additional constraints for investments.\n\nAdditional variables for investment in capacity:\n\n:trans_cap_invest_b - binary variable whether investments in capacity are happening\n:trans_cap_remove_b - binary variable whether investments in capacity are removed\n:trans_cap_current - installed capacity for storage in each strategic period\n:trans_cap_add - added capacity\n:trans_cap_rem - removed capacity\n\n\n\n\n\n","category":"method"},{"location":"library/internals/#EnergyModelsGeography.variables_trans_capex-Tuple{Any, Any, Any, AbstractInvestmentModel}","page":"Internals","title":"EnergyModelsGeography.variables_trans_capex","text":"EMG.variables_trans_capex(m, 𝒯, ℳ,, modeltype::EMI.AbstractInvestmentModel)\n\nCreate variables for the capital costs for the investments in transmission.\n\n\n\n\n\n","category":"method"},{"location":"library/internals/#EnergyModelsInvestments.capex-Tuple{TransmissionMode, Any}","page":"Internals","title":"EnergyModelsInvestments.capex","text":"EMI.capex(n::TransmissionMode, t_inv)\n\nReturns the CAPEX of TransmissionMode tm in investment period t_inv.\n\n\n\n\n\n","category":"method"},{"location":"library/internals/#EnergyModelsInvestments.capex-Tuple{TransmissionMode}","page":"Internals","title":"EnergyModelsInvestments.capex","text":"EMI.capex(n::TransmissionMode)\n\nReturns the CAPEX of TransmissionMode tm as TimeProfile.\n\n\n\n\n\n","category":"method"},{"location":"library/internals/#EnergyModelsInvestments.capex_offset-Tuple{TransmissionMode, Any}","page":"Internals","title":"EnergyModelsInvestments.capex_offset","text":"capex_offset(n::TransmissionMode, t_inv)\n\nReturns the offset of the CAPEX of TransmissionMode tm in investment period t_inv.\n\n\n\n\n\n","category":"method"},{"location":"library/internals/#EnergyModelsInvestments.capex_offset-Tuple{TransmissionMode}","page":"Internals","title":"EnergyModelsInvestments.capex_offset","text":"capex_offset(n::TransmissionMode)\n\nReturns the offset of the CAPEX of TransmissionMode tm as TimeProfile.\n\n\n\n\n\n","category":"method"},{"location":"library/internals/#EnergyModelsInvestments.has_investment-Tuple{TransmissionMode}","page":"Internals","title":"EnergyModelsInvestments.has_investment","text":"EMI.has_investment(tm::TransmissionMode)\n\nFor a given TransmissionMode, checks that it contains ithe required investment data.\n\n\n\n\n\n","category":"method"},{"location":"library/internals/#EnergyModelsInvestments.increment-Tuple{TransmissionMode, Any}","page":"Internals","title":"EnergyModelsInvestments.increment","text":"EMI.increment(tm::TransmissionMode, t_inv)\n\nReturns the minimum added capacity of TransmissionMode tm in investment period t_inv.\n\n\n\n\n\n","category":"method"},{"location":"library/internals/#EnergyModelsInvestments.increment-Tuple{TransmissionMode}","page":"Internals","title":"EnergyModelsInvestments.increment","text":"EMI.increment(tm::TransmissionMode)\n\nReturns the minimum added capacity of TransmissionMode tm as TimeProfile.\n\n\n\n\n\n","category":"method"},{"location":"library/internals/#EnergyModelsInvestments.max_add-Tuple{TransmissionMode, Any}","page":"Internals","title":"EnergyModelsInvestments.max_add","text":"EMI.max_add(n::TransmissionMode, t_inv)\n\nReturns the maximum allowed added capacity of TransmissionMode tm in investment period t_inv.\n\n\n\n\n\n","category":"method"},{"location":"library/internals/#EnergyModelsInvestments.max_add-Tuple{TransmissionMode}","page":"Internals","title":"EnergyModelsInvestments.max_add","text":"EMI.max_add(n::TransmissionMode)\n\nReturns the maximum allowed added capacity of TransmissionMode tm as TimeProfile.\n\n\n\n\n\n","category":"method"},{"location":"library/internals/#EnergyModelsInvestments.max_installed-Tuple{TransmissionMode, Any}","page":"Internals","title":"EnergyModelsInvestments.max_installed","text":"EMI.max_installed(n::TransmissionMode, t_inv)\n\nReturns the maximum allowed installed capacity of TransmissionMode tm in investment period t_inv.\n\n\n\n\n\n","category":"method"},{"location":"library/internals/#EnergyModelsInvestments.max_installed-Tuple{TransmissionMode}","page":"Internals","title":"EnergyModelsInvestments.max_installed","text":"EMI.max_installed(n::TransmissionMode)\n\nReturns the maximum allowed installed capacity of TransmissionMode tm as TimeProfile.\n\n\n\n\n\n","category":"method"},{"location":"library/internals/#EnergyModelsInvestments.min_add-Tuple{TransmissionMode, Any}","page":"Internals","title":"EnergyModelsInvestments.min_add","text":"EMI.min_add(n::TransmissionMode, t_inv)\n\nReturns the minimum allowed added capacity of TransmissionMode tm in investment period t_inv.\n\n\n\n\n\n","category":"method"},{"location":"library/internals/#EnergyModelsInvestments.min_add-Tuple{TransmissionMode}","page":"Internals","title":"EnergyModelsInvestments.min_add","text":"EMI.min_add(n::TransmissionMode)\n\nReturns the minimum allowed added capacity of TransmissionMode tm as TimeProfile.\n\n\n\n\n\n","category":"method"},{"location":"library/internals/#EnergyModelsInvestments.nodes_investment-Tuple{Vector{<:TransmissionMode}}","page":"Internals","title":"EnergyModelsInvestments.nodes_investment","text":"EMI.has_investment(ℳ::Vector{<:TransmissionMode})\n\nFor a given Vector{<:TransmissionMode}, return all TransmissionModes with investments.\n\n\n\n\n\n","category":"method"},{"location":"library/internals/#EnergyModelsInvestments.start_cap-Tuple{Any, TransmissionMode, Any, Nothing, EnergyModelsBase.EnergyModel}","page":"Internals","title":"EnergyModelsInvestments.start_cap","text":"EMI.start_cap(m, tm, t, stcap, modeltype)\n\nReturns the starting capacity of the TransmissionMode tm in the first investment period. If no starting capacity is provided in InvestmentData (default = Nothing), then use the provided capacity from the field trans_Cap.\n\n\n\n\n\n","category":"method"},{"location":"manual/NEWS/#Release-notes","page":"Release notes","title":"Release notes","text":"","category":"section"},{"location":"manual/NEWS/#Version-0.5.3-(2024-03-06)","page":"Release notes","title":"Version 0.5.3 (2024-03-06)","text":"","category":"section"},{"location":"manual/NEWS/#Bugfix","page":"Release notes","title":"Bugfix","text":"","category":"section"},{"location":"manual/NEWS/","page":"Release notes","title":"Release notes","text":"Fixed a bug for the function startcap in EMIGeoExt, where there could be ambiguity with the function startcap in EnergyModelsInvestments.","category":"page"},{"location":"manual/NEWS/#Examples","page":"Release notes","title":"Examples","text":"","category":"section"},{"location":"manual/NEWS/","page":"Release notes","title":"Release notes","text":"Fixed a bug when running the examples from a non-cloned version of EnergyModelsInvestments.\nThis was achieved through a separate Project.toml in the examples.","category":"page"},{"location":"manual/NEWS/#Bugfixes","page":"Release notes","title":"Bugfixes","text":"","category":"section"},{"location":"manual/NEWS/","page":"Release notes","title":"Release notes","text":"Fixed a bug for semi-continuous investments for Storage nodes. Now it is possible using this InvestmentMode to only invest in storage capacity or storage rate.\nFixed a bug for method ambiguity when Storage nodes use DiscreteInvestment.","category":"page"},{"location":"manual/NEWS/#Checks","page":"Release notes","title":"Checks","text":"","category":"section"},{"location":"manual/NEWS/","page":"Release notes","title":"Release notes","text":"Updated the check systems based on changes introduced in EnergyModelsBase v 0.6.6.\nIncluded tests for all checks to be certain that the checks are providing the required output.","category":"page"},{"location":"manual/NEWS/#Tests","page":"Release notes","title":"Tests","text":"","category":"section"},{"location":"manual/NEWS/","page":"Release notes","title":"Release notes","text":"Restructured the test folder and the individual tests.\nAdded tests for Storage investment.","category":"page"},{"location":"manual/NEWS/#Minor-changes","page":"Release notes","title":"Minor changes","text":"","category":"section"},{"location":"manual/NEWS/","page":"Release notes","title":"Release notes","text":"Moved EMIGeoExt to a separate folder within the extension folder.","category":"page"},{"location":"manual/NEWS/#Version-0.5.2-(2024-02-15)","page":"Release notes","title":"Version 0.5.2 (2024-02-15)","text":"","category":"section"},{"location":"manual/NEWS/#Bugfix-2","page":"Release notes","title":"Bugfix","text":"","category":"section"},{"location":"manual/NEWS/","page":"Release notes","title":"Release notes","text":"Fixed the function for extracting the field capex_trans_offset in TransInvData.","category":"page"},{"location":"manual/NEWS/#Version-0.5.1-(2024-01-17)","page":"Release notes","title":"Version 0.5.1 (2024-01-17)","text":"","category":"section"},{"location":"manual/NEWS/#Feature","page":"Release notes","title":"Feature","text":"","category":"section"},{"location":"manual/NEWS/","page":"Release notes","title":"Release notes","text":"Added the JuMP model m and modeltype as arguments to the start-capacity methods.","category":"page"},{"location":"manual/NEWS/#Version-0.5.0-(2023-12-19)","page":"Release notes","title":"Version 0.5.0 (2023-12-19)","text":"","category":"section"},{"location":"manual/NEWS/#Adjustment","page":"Release notes","title":"Adjustment","text":"","category":"section"},{"location":"manual/NEWS/","page":"Release notes","title":"Release notes","text":"Adjusted to changes in EnergyModelsBase v0.6. These changes are mainly:","category":"page"},{"location":"manual/NEWS/","page":"Release notes","title":"Release notes","text":"All fields of composite types are now lower case.\nAn extensive number of functions to access the individual fields were included, allowing for differing definitions of the individual nodes.","category":"page"},{"location":"manual/NEWS/","page":"Release notes","title":"Release notes","text":"In addition this version includes:","category":"page"},{"location":"manual/NEWS/","page":"Release notes","title":"Release notes","text":"A rewriting of the calculation of the objective function.","category":"page"},{"location":"manual/NEWS/#Version-0.4.6-(2023-11-23)","page":"Release notes","title":"Version 0.4.6 (2023-11-23)","text":"","category":"section"},{"location":"manual/NEWS/#Bugfix-3","page":"Release notes","title":"Bugfix","text":"","category":"section"},{"location":"manual/NEWS/","page":"Release notes","title":"Release notes","text":"Added strategic period duration multiplication for emissions prices","category":"page"},{"location":"manual/NEWS/#Version-0.4.5-(2023-10-24)","page":"Release notes","title":"Version 0.4.5 (2023-10-24)","text":"","category":"section"},{"location":"manual/NEWS/#Bugfix-4","page":"Release notes","title":"Bugfix","text":"","category":"section"},{"location":"manual/NEWS/","page":"Release notes","title":"Release notes","text":"Include opex for transmission modes without investments.","category":"page"},{"location":"manual/NEWS/#Version-0.4.4-(2023-09-15)","page":"Release notes","title":"Version 0.4.4 (2023-09-15)","text":"","category":"section"},{"location":"manual/NEWS/#Bugfix-5","page":"Release notes","title":"Bugfix","text":"","category":"section"},{"location":"manual/NEWS/","page":"Release notes","title":"Release notes","text":"Use correct index on parameter values.","category":"page"},{"location":"manual/NEWS/#Version-0.4.3-(2023-09-08)","page":"Release notes","title":"Version 0.4.3 (2023-09-08)","text":"","category":"section"},{"location":"manual/NEWS/#Bugfix-6","page":"Release notes","title":"Bugfix","text":"","category":"section"},{"location":"manual/NEWS/","page":"Release notes","title":"Release notes","text":"Bugfix from v0.4.1 RollingLife was reverted due to rebasing in v0.4.2. This was fixed","category":"page"},{"location":"manual/NEWS/#Version-0.4.2-(2023-08-24)","page":"Release notes","title":"Version 0.4.2 (2023-08-24)","text":"","category":"section"},{"location":"manual/NEWS/#Changes-in-discounting","page":"Release notes","title":"Changes in discounting","text":"","category":"section"},{"location":"manual/NEWS/","page":"Release notes","title":"Release notes","text":"Previously, strategic periods were discounted using the start year for both OPEX and CAPEX\nThis was changed for OPEX and emission cost calculations to account for longer strategic periods","category":"page"},{"location":"manual/NEWS/#Version-0.4.1-(2023-08-02)","page":"Release notes","title":"Version 0.4.1 (2023-08-02)","text":"","category":"section"},{"location":"manual/NEWS/#Bugfix-7","page":"Release notes","title":"Bugfix","text":"","category":"section"},{"location":"manual/NEWS/","page":"Release notes","title":"Release notes","text":"Included calling of strategic_periods in ::RollingLife which was missing","category":"page"},{"location":"manual/NEWS/#Version-0.4.0-(2023-06-06)","page":"Release notes","title":"Version 0.4.0 (2023-06-06)","text":"","category":"section"},{"location":"manual/NEWS/#Switch-to-TimeStruct.jl","page":"Release notes","title":"Switch to TimeStruct.jl","text":"","category":"section"},{"location":"manual/NEWS/","page":"Release notes","title":"Release notes","text":"Switched the time structure representation to TimeStruct.jl\nTimeStruct.jl is implemented with only the basis features that were available in TimesStructures.jl. This implies that neither operational nor strategic uncertainty is included in the model","category":"page"},{"location":"manual/NEWS/#Version-0.3.2-(2023-06-01)","page":"Release notes","title":"Version 0.3.2 (2023-06-01)","text":"","category":"section"},{"location":"manual/NEWS/","page":"Release notes","title":"Release notes","text":"Bugfix related to FixedInvestment","category":"page"},{"location":"manual/NEWS/#Version-0.3.1-(2023-06-01)","page":"Release notes","title":"Version 0.3.1 (2023-06-01)","text":"","category":"section"},{"location":"manual/NEWS/","page":"Release notes","title":"Release notes","text":"Added dispatch on EMI.has_investment in the extension instead of defining a new, local function","category":"page"},{"location":"manual/NEWS/#Version-0.3.0-(2023-05-xx)","page":"Release notes","title":"Version 0.3.0 (2023-05-xx)","text":"","category":"section"},{"location":"manual/NEWS/","page":"Release notes","title":"Release notes","text":"Adjustment to changes in EnergyModelsBase v0.4.0 and EnergyModelsGeography v 0.6.0\nThe new filter method for data can be used as example for subsequent usage of Array{Data}\nMigrate from Requires.jl to support for weak dependencies in julia v1.9.","category":"page"},{"location":"manual/NEWS/#Version-0.2.8-(2023-05-15)","page":"Release notes","title":"Version 0.2.8 (2023-05-15)","text":"","category":"section"},{"location":"manual/NEWS/","page":"Release notes","title":"Release notes","text":"Fixed a bug that could lead to method ambiguity errors when a subtype of Storage required additional variables. This solution results in significant changes regarding where and how variables and constraints are declared.","category":"page"},{"location":"manual/NEWS/#Version-0.2.7-(2023-04-27)","page":"Release notes","title":"Version 0.2.7 (2023-04-27)","text":"","category":"section"},{"location":"manual/NEWS/","page":"Release notes","title":"Release notes","text":"Requirements changed to ^0.5.0 for EnergyModelsGeography","category":"page"},{"location":"manual/NEWS/#Version-0.2.6-(2023-04-24)","page":"Release notes","title":"Version 0.2.6 (2023-04-24)","text":"","category":"section"},{"location":"manual/NEWS/","page":"Release notes","title":"Release notes","text":"Introduction of abstract type InvestmentData as subtype of Data to dispatch specifically on data related to investments\nChanges in the individual utility functions for improved utilization of the multiple dispatch","category":"page"},{"location":"manual/NEWS/#Version-0.2.5-(2023-04-18)","page":"Release notes","title":"Version 0.2.5 (2023-04-18)","text":"","category":"section"},{"location":"manual/NEWS/","page":"Release notes","title":"Release notes","text":"Bugfix related to constraint on cap_use,  stor_rate_use, and stor_level:\nThe variables are constrained using the function constraints_capacity and in addition in constraints_capacity_invest and constraints_storage_invest with the latter constraint being inconsistent for Sink nodes.\nThe constraint in EnergyModelsInvestments was therefore removed","category":"page"},{"location":"manual/NEWS/#Version-0.2.4-(2023-03-31)","page":"Release notes","title":"Version 0.2.4 (2023-03-31)","text":"","category":"section"},{"location":"manual/NEWS/","page":"Release notes","title":"Release notes","text":"Removal of type ContinuousFixedInvestment as this can be represented with ContinuousInvestment and Cap_max_add limited to a given period\nIntroduction of abstract type SemiContiInvestment and composite type SemiContinuousOffsetInvestment to introduce semi-continuous investments in which the cost function has an offset. This is only included for Transmission in the first step","category":"page"},{"location":"manual/NEWS/#Version-0.2.3-(2023-03-20)","page":"Release notes","title":"Version 0.2.3 (2023-03-20)","text":"","category":"section"},{"location":"manual/NEWS/","page":"Release notes","title":"Release notes","text":"Adjustments in tests and functions to changes introduced in EnergyModelsGeography version 0.4.0","category":"page"},{"location":"manual/NEWS/#Version-0.2.2-(2023-02-17)","page":"Release notes","title":"Version 0.2.2 (2023-02-17)","text":"","category":"section"},{"location":"manual/NEWS/","page":"Release notes","title":"Release notes","text":"Adjustments in tests and functions to changes introduced in EnergyModelsGeography version 0.3.1","category":"page"},{"location":"manual/NEWS/#Version-0.2.1-(2023-02-06)","page":"Release notes","title":"Version 0.2.1 (2023-02-06)","text":"","category":"section"},{"location":"manual/NEWS/","page":"Release notes","title":"Release notes","text":"Renaming of investment modes:\nRename DiscreteInvestment to BinaryInvestment\nRename IntegerInvestment to DiscreteInvestment","category":"page"},{"location":"manual/NEWS/#Version-0.2.0-(2023-02-03)","page":"Release notes","title":"Version 0.2.0 (2023-02-03)","text":"","category":"section"},{"location":"manual/NEWS/#Adjustmends-to-updates-in-EnergyModelsBase","page":"Release notes","title":"Adjustmends to updates in EnergyModelsBase","text":"","category":"section"},{"location":"manual/NEWS/","page":"Release notes","title":"Release notes","text":"Adjustment to version 0.3.0, namely:","category":"page"},{"location":"manual/NEWS/","page":"Release notes","title":"Release notes","text":"Changed type (Node) calls in tests to be consistent with version 0.3.0\nChanged call of function for the creation of Storage variables\nRemoval of the type GlobalData and replacement with fields in the type InvestmentModel in all tests","category":"page"},{"location":"manual/NEWS/#Version-0.1.5-(2022-12-12)","page":"Release notes","title":"Version 0.1.5 (2022-12-12)","text":"","category":"section"},{"location":"manual/NEWS/#Internal-release","page":"Release notes","title":"Internal release","text":"","category":"section"},{"location":"manual/NEWS/","page":"Release notes","title":"Release notes","text":"Update Readme","category":"page"},{"location":"manual/NEWS/#Version-0.1.4-(2022-12-09)","page":"Release notes","title":"Version 0.1.4 (2022-12-09)","text":"","category":"section"},{"location":"manual/NEWS/#Changes-in-naming","page":"Release notes","title":"Changes in naming","text":"","category":"section"},{"location":"manual/NEWS/","page":"Release notes","title":"Release notes","text":"Renamed dictionary keys from EnergyModelsInvestments to Investments","category":"page"},{"location":"manual/NEWS/#Version-0.1.3-(2022-30-11)","page":"Release notes","title":"Version 0.1.3 (2022-30-11)","text":"","category":"section"},{"location":"manual/NEWS/#Renamed-to-EnergyModelsInvestments","page":"Release notes","title":"Renamed to EnergyModelsInvestments","text":"","category":"section"},{"location":"manual/NEWS/","page":"Release notes","title":"Release notes","text":"Renamed for more internally consistent package names","category":"page"},{"location":"manual/NEWS/#Version-0.1.2-(2021-09-07)","page":"Release notes","title":"Version 0.1.2 (2021-09-07)","text":"","category":"section"},{"location":"manual/NEWS/#Changes-in-naming-2","page":"Release notes","title":"Changes in naming","text":"","category":"section"},{"location":"manual/NEWS/","page":"Release notes","title":"Release notes","text":"Major changes in both variable and parameter naming, check the commit message for an overview","category":"page"},{"location":"manual/NEWS/#Version-0.1.1-(2021-08-20)","page":"Release notes","title":"Version 0.1.1 (2021-08-20)","text":"","category":"section"},{"location":"manual/NEWS/","page":"Release notes","title":"Release notes","text":"Inclusion for investment in storage (energy)\nChanges to the datastructures","category":"page"},{"location":"manual/NEWS/#Version-0.1.0-(2021-07-06)","page":"Release notes","title":"Version 0.1.0 (2021-07-06)","text":"","category":"section"},{"location":"manual/NEWS/","page":"Release notes","title":"Release notes","text":"Initial version\nInclusion of discounting","category":"page"},{"location":"#EnergyModelsInvestments.jl","page":"Home","title":"EnergyModelsInvestments.jl","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"This Julia package provides investment options for the operational, multi carrier energy model EnergyModelsBase. It furthermore adds investment options for the transmission modes introduced in EnergyModelsGeography, if the package is loaded.","category":"page"},{"location":"","page":"Home","title":"Home","text":"EnergyModelsInvestments","category":"page"},{"location":"#EnergyModelsInvestments","page":"Home","title":"EnergyModelsInvestments","text":"Main module for EnergyModelsInvestments.\n\nThis module implements functionalities allowing to run investment analysis.\n\nIt is in its current version extending EnergyModelsBase and cannot be used as a stand-alone module.\n\nThe extension EMIGeoExt includes furthermore the investment options for transmission modes as described in EnergyModelsGeography.\n\n\n\n\n\n","category":"module"},{"location":"","page":"Home","title":"Home","text":"EnergyModelsInvestments follows the same philosophy with respect to extendibility as EnergyModelsBase. Its aim is to allow the user to come up with new ideas to include investments without major changes to the core structure.","category":"page"},{"location":"#Manual-outline","page":"Home","title":"Manual outline","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Pages = [\n    \"manual/quick-start.md\",\n    \"manual/philosophy.md\",\n    \"manual/optimization-variables.md\",\n    \"manual/simple-example.md\",\n]","category":"page"},{"location":"#Library-outline","page":"Home","title":"Library outline","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Pages = [\n    \"library/public.md\",\n    \"library/internals.md\"\n]","category":"page"},{"location":"library/public/#sec_lib_public","page":"Public","title":"Public interface","text":"","category":"section"},{"location":"library/public/#InvestmentModel","page":"Public","title":"InvestmentModel","text":"","category":"section"},{"location":"library/public/","page":"Public","title":"Public","text":"An AbstractInvestmentModel is a subtype of an EnergyModel as declared in EnergyModelsBase This new type allows for the introduction of investment options to the energy system model.","category":"page"},{"location":"library/public/","page":"Public","title":"Public","text":"The composite type InvestmentModel contains some key information for the model such as the emissions limits and penalties for each ResourceEmit, as well as the ResourceEmit instance of CO₂. It uses hence the same fields as an OperationalModel as declared in EnergyModelsBase. In addition, it takes as input the discount_rate. The discount_rate is an important element of investment analysis needed to represent the present value of future cash flows. It is provided to the model as a value between 0 and 1 (e.g. a discount rate of 5 % is 0.05).","category":"page"},{"location":"library/public/","page":"Public","title":"Public","text":"AbstractInvestmentModel\nInvestmentModel","category":"page"},{"location":"library/public/#EnergyModelsInvestments.AbstractInvestmentModel","page":"Public","title":"EnergyModelsInvestments.AbstractInvestmentModel","text":"An abstract investment model type.\n\nThis abstract model type should be used when creating additional EnergyModel types that should utilize investments. An example for additional types is given by the inclusion of, e.g., SDDP.\n\n\n\n\n\n","category":"type"},{"location":"library/public/#EnergyModelsInvestments.InvestmentModel","page":"Public","title":"EnergyModelsInvestments.InvestmentModel","text":"A concrete basic investment model type based on the standard OperationalModel as declared in EnergyModelsBase. The concrete basic investment model is similar to an OperationalModel, but allows for investments and additional discounting of future years.\n\nFields\n\nemission_limit::Dict{<:ResourceEmit, <:TimeProfile} are the emission caps for the different emissions types considered.\nemission_price::Dict{<:ResourceEmit, <:TimeProfile} are the prices for the different emissions types considered.\nco2_instance is a ResourceEmit and corresponds to the type used for CO₂.\nr is the discount rate in the investment optimization.\n\n\n\n\n\n","category":"type"},{"location":"library/public/#Additional-Data-for-Investments","page":"Public","title":"Additional Data for Investments","text":"","category":"section"},{"location":"library/public/","page":"Public","title":"Public","text":"Additional data for investment is specified when creating the nodes through subtypes of the type InvestmentData.","category":"page"},{"location":"library/public/","page":"Public","title":"Public","text":"InvestmentData","category":"page"},{"location":"library/public/#EnergyModelsInvestments.InvestmentData","page":"Public","title":"EnergyModelsInvestments.InvestmentData","text":"Abstract type for the extra data for investing in technologies.\n\n\n\n\n\n","category":"type"},{"location":"library/public/","page":"Public","title":"Public","text":"This additional data is node specific, not technology specific. It is hence possible to provide different values for the same technology through different instances of said technology.","category":"page"},{"location":"library/public/","page":"Public","title":"Public","text":"Two types are used to define the parameters necessary for production technologies (InvData) and storages (InvDataStorage), while one is used for transmission modes (TransInvData) through the EMIGeoExt extension. The different types are required as the required parameters differ. It is also possible for the user to define new subtypes of InvestmentData if they require additional parameters for including investments in technologies.","category":"page"},{"location":"library/public/","page":"Public","title":"Public","text":"note: Note\nDepending on the chosen investment mode, not all parameters are necessary. It is however possible to set parameters even if they will not be used. This allows for a simple change of the investment mode.The required parameters will be described in Investment Types for each investment option. All InvestmentData types use Base.@kwdef to simplify the creation of constructors. Hence, it is necessary to specify the the name of the parameters when creating instances of the types.","category":"page"},{"location":"library/public/","page":"Public","title":"Public","text":"note: Note\nIt is planned in a future iteration to revamp how we provide the investment data. A key change is related to the approach for Storage and TransmissionMode investments to reduce repetitions in the functions.","category":"page"},{"location":"library/public/#InvData","page":"Public","title":"InvData","text":"","category":"section"},{"location":"library/public/","page":"Public","title":"Public","text":"InvData is used to add the required investment data to the individual technology nodes. It is used for almost all technology nodes, except for Storage nodes.","category":"page"},{"location":"library/public/","page":"Public","title":"Public","text":"The following fields have to be added as keyword arguments:","category":"page"},{"location":"library/public/","page":"Public","title":"Public","text":"capex_cap::TimeProfile: Capital expenditures (CAPEX) of the Node. The capital expenditures are relative costs. Hence, it is important to consider the unit for both costs and the energy of the technology. The total contribution to the objective function y is then given through the equation y = textttcapex_cap times x where x corresponds to the invested capacity.\ncap_max_inst::TimeProfile: Maximum installed capacity of the Node. The maximum installed capacity is limiting the total installed capacity of the Node. It is possible to have different values for different Nodes representing the same technology. This can be useful for, e.g., the potential for wind power in different regions.\ncap_max_add::TimeProfile: The maximum added capacity in a strategic period. The maximum added capacity is providing the limit on how fast we can expend a given technology in a strategic period. In general, this value is dependent on the potential construction time and how fast it is possible to build a technology.\ncap_min_add::TimeProfile: The minimum added capacity in a strategic period. The minimum added capacity is providing the lower limit on investments in a strategic period. Its meaning changes, dependent on the chosen investment mode, as outlined in Investment types.","category":"page"},{"location":"library/public/","page":"Public","title":"Public","text":"In addition, there are also parameters with a default value. These values do not have to be provided, but can be provided, if desired. The following parameter can be modified:","category":"page"},{"location":"library/public/","page":"Public","title":"Public","text":"inv_mode::Investment: Investment mode of the Node. The individual investment modes are explained in detail in Investment types. The default investment mode is ContinuousInvestment.\ncap_start::Union{Real, Nothing}: Starting capacity of the Node in the first strategic period. The starting capacity is only valid for the first strategic period. This capacity will remain present in the simulation horizon, except if retiring is desired by the model. It is not possible to provide a reducing capacity over time for the initial capacity. The model extracts alternatively the value of the capacity in the first strategic period, if no value is provided. This is the default value.\ncap_increment::TimeProfile: Increment in the case of DiscreteInvestment. The increment corresponds to the potential increase in the case of DiscreteInvestment. Its usage will be explained further in Investment types. The default value is 0 corresponding to no investment possibility.\nlife_mode::LifetimeMode: Lifetime mode of the Node. The lifetime mode is describing how the lifetime of the node is implemented. This includes as well final values and retiring of the individual technologies. The default value is UnlimitedLife. More information can be found in LifetimeMode.\nlifetime::TimeProfile: Lifetime of the Node. The lifetime corresponds to the lifetime of the invested Node. Its requirement is dependent on the chosen LifetimeMode. The default value is 0 corresponding to no lifetime.","category":"page"},{"location":"library/public/","page":"Public","title":"Public","text":"warning: Warning\nAll fields that are provided as TimeProfile are accessed in strategic periods. This implies that the provided TimeProfiles are not allowed to have any variations below strategic periods through, e.g. the application of OperationalProfile or RepresentativeProfile.","category":"page"},{"location":"library/public/","page":"Public","title":"Public","text":"InvData","category":"page"},{"location":"library/public/#EnergyModelsInvestments.InvData","page":"Public","title":"EnergyModelsInvestments.InvData","text":"Extra data for investing in technologies.\n\nDefine the structure for the additional parameters passed to the technology structures defined in other packages. It uses the macro Base.@kwdef to use keyword arguments and default values. Hence, the name of the parameters have to be specified.\n\nFields\n\ncapex_cap::TimeProfile Capital expenditure for the capacity in a strategic period.\ncap_max_inst::TimeProfile Maximum possible installed capacity of the technology in a strategic period.\ncap_max_add::TimeProfile Maximum capacity addition in a strategic period.\ncap_min_add::TimeProfile Minimum capacity addition in a strategic period.\ninv_mode::Investment = ContinuousInvestment() Type of the investment: BinaryInvestment, DiscreteInvestment, ContinuousInvestment, SemiContinuousInvestment,  or FixedInvestment.\ncap_start::Union{Real, Nothing} = nothing Starting capacity in first period. If nothing is given, it is set by start_cap() to the capacity cap of the node in the first strategic period.\ncap_increment::TimeProfile = FixedProfile(0) Capacity increment used in the case of DiscreteInvestment.\nlife_mode::LifetimeMode = UnlimitedLife() Type of handling of the lifetime: UnlimitedLife, StudyLife, PeriodLife or RollingLife\nlifetime::TimeProfile = FixedProfile(0) Duration/lifetime of the technology invested in each period.\n\n\n\n\n\n","category":"type"},{"location":"library/public/#InvDataStorage","page":"Public","title":"InvDataStorage","text":"","category":"section"},{"location":"library/public/","page":"Public","title":"Public","text":"InvDataStorage is required as Storage nodes behave differently compared to the other nodes. In Storage nodes, it is possible to invest both in the rate for storing energy as well as in the storage capacity, that is the level of a Storage node. Correspondingly, it is necessary to have individual parameters for both the rate and the level. Storage nodes have in general the same fields with a slightly different naming to account for both rate and level investments:","category":"page"},{"location":"library/public/","page":"Public","title":"Public","text":"capex_cap is provided for both the rate (capex_rate) and the level (capex_stor),\ncap_max_inst is provided for both the rate (rate_max_inst) and the level (stor_max_inst),\ncap_max_add is provided for both the rate (rate_max_add) and the level (stor_max_add),\ncap_min_add is provided for both the rate (rate_min_add) and the level (stor_min_add),\ncap_start is provided for both the rate (rate_start) and the level (stor_start), and\ncap_increment is provided for both the rate (rate_increment) and the level (stor_increment).","category":"page"},{"location":"library/public/","page":"Public","title":"Public","text":"Both the Investment mode and LifetimeMode are the same for investments in rate and storage level. The same holds as well for the lifetime of the technology.","category":"page"},{"location":"library/public/","page":"Public","title":"Public","text":"The required fields are the same as in InvData.","category":"page"},{"location":"library/public/","page":"Public","title":"Public","text":"InvDataStorage","category":"page"},{"location":"library/public/#EnergyModelsInvestments.InvDataStorage","page":"Public","title":"EnergyModelsInvestments.InvDataStorage","text":"Extra data for investing in storages.\n\nDefine the structure for the additional parameters passed to the technology structures defined in other packages. It uses the macro Base.@kwdef to use keyword arguments and default values. Hence, the name of the parameters have to be specified.\n\nThe parameters are separated between rate_ and stor_. The rate_ parameters refer to rate components (power, flow, ...) for instance, charging and discharging power of batteries, while the stor_ refers to a volumetric component (energy, volume, mass...), for instance storage capacity of a battery.\n\nFields\n\ncapex_rate::TimeProfile Capital expenditure for storage rate, here investment costs of the technology rate in each period.\nrate_max_inst::TimeProfile Maximum possible installed rate of the technology in each period.\nrate_max_add::TimeProfile Maximum rate addition in a strategic period.\nrate_min_add::TimeProfile Minimum rate addition in a strategic period.\ncapex_stor::TimeProfile Capital expenditure, here investment costs of the technology storage volume in each strategic period.\nstor_max_inst::TimeProfile Maximum possible installed storage volume of the  technology in each strategic period.\nstor_max_add::TimeProfile Maximum storage volume addition in one period from the previous.\nstor_min_add::TimeProfile Minimum storage volume addition in one period from the previous.\ninv_mode::Investment = ContinuousInvestment() Type of the investment: BinaryInvestment, DiscreteInvestment, ContinuousInvestment, SemiContinuousInvestment or FixedInvestment.\nrate_start::Union{Real, Nothing} = nothing Starting rate in first period. If nothing is given, it is set by start_cap() to the capacity rate_cap of the node in the first strategic period.\nstor_start::Union{Real, Nothing} = nothing Starting storage volume in first period. If nothing is provided, it is set by start_cap() to the capacity stor_cap of the node in the first strategic period.\nrate_increment::TimeProfile = FixedProfile(0) Rate increment used in the case of DiscreteInvestment\nstor_increment::TimeProfile = FixedProfile(0) Storage volume increment used in the case of DiscreteInvestment\nlife_mode::LifetimeMode = UnlimitedLife() Type of handling of the lifetime: UnlimitedLife, StudyLife, PeriodLife, or RollingLife\nlifetime::TimeProfile = FixedProfile(0) Duration/lifetime of the technology invested in each period.\n\n\n\n\n\n","category":"type"},{"location":"library/public/#TransInvData","page":"Public","title":"TransInvData","text":"","category":"section"},{"location":"library/public/","page":"Public","title":"Public","text":"Similarly as for InvData, this type defines additional parameters necessary for handling the investment in transmission between geographical areas. This type is used in combination with EnergyModelsGeography to add investments in transmission.","category":"page"},{"location":"library/public/","page":"Public","title":"Public","text":"There are in general not too many changes compared to InvData. The individual fields have however different names:","category":"page"},{"location":"library/public/","page":"Public","title":"Public","text":"capex_cap is called capex_trans,\ncap_max_inst is called trans_max_inst,\ncap_max_add is called trans_max_add,\ncap_min_add is called trans_min_add,\ncap_start is called trans_start, and\ncap_increment is called trans_increment.","category":"page"},{"location":"library/public/","page":"Public","title":"Public","text":"In addition, the following field is added:","category":"page"},{"location":"library/public/","page":"Public","title":"Public","text":"capex_trans_offset::TimeProfile: The offset is a special parameter only required for the SemiContinuousOffsetInvestment mode. The offset can be best described with the equation y = textttcapex_trans times x + textttcapex_trans_offset where x corresponds to the invested capacity and y to the total capital cost.","category":"page"},{"location":"library/public/","page":"Public","title":"Public","text":"TransInvData","category":"page"},{"location":"library/public/#EnergyModelsInvestments.TransInvData","page":"Public","title":"EnergyModelsInvestments.TransInvData","text":"Extra data for investing in transmission.\n\nDefine the structure for the additional parameters passed to the technology structures defined in other packages. It uses the macro Base.@kwdef to use keyword arguments and default values. Hence, the name of the parameters have to be specified.\n\nFields\n\ncapex_trans::TimeProfile Capital expenditure for the transmission capacity, here investment costs of the transmission in each period.\ntrans_max_inst::TimeProfile Maximum possible installed transmission capacity in each period.\ntrans_max_add::TimeProfile Maximum transmission capacity addition in one period from the previous.\ntrans_min_add::TimeProfile Minimum transmission capacity addition in one period from the previous.\ninv_mode::Investment = ContinuousInvestment() Type of the investment: BinaryInvestment, DiscreteInvestment, ContinuousInvestment, SemiContinuousInvestment or FixedInvestment.\ntrans_start::Union{Real, Nothing} = nothing Starting transmission capacity in first period. If nothing is given, it is set by getstartcap() to the capacity trans_cap of the transmission.\ntrans_increment::TimeProfile = FixedProfile(0) Transmission capacity increment used in the case of DiscreteInvestment\n\n\n\n\n\n","category":"type"},{"location":"library/public/#sec_types_inv_mode","page":"Public","title":"Investment modes","text":"","category":"section"},{"location":"library/public/","page":"Public","title":"Public","text":"Different investment modes are available to help represent different situations. The investment mode is included in the field inv_mode in InvData, InvDataStorage, and TransInvData. The investment mode determines which other parameters are relevant in the investment and how these are treated.","category":"page"},{"location":"library/public/#Investment","page":"Public","title":"Investment","text":"","category":"section"},{"location":"library/public/","page":"Public","title":"Public","text":"Investment is the abstract supertype for all investment modes. It is used to allow for a simple extension of the potential investment modes. It is also possible for the user to define new investment modes without major changes to the core structure through specifying a new subtype of Investment.","category":"page"},{"location":"library/public/","page":"Public","title":"Public","text":"Investment","category":"page"},{"location":"library/public/#EnergyModelsInvestments.Investment","page":"Public","title":"EnergyModelsInvestments.Investment","text":"Investment type traits for nodes.\n\nThe investment type corresponds to the chosen investment mode.\n\n\n\n\n\n","category":"type"},{"location":"library/public/#ContinuousInvestment","page":"Public","title":"ContinuousInvestment","text":"","category":"section"},{"location":"library/public/","page":"Public","title":"Public","text":"ContinuousInvestment is the default investment option for all investments, if no alternative is chosen. Continuous investments implies that you can invest in any capacity specified between cap_min_add and cap_max_add. This implies as well that, if cap_min_add is specified, it is necessary to invest in every strategic period in at least this capacity. This approach is the standard approach in large energy system models as it avoids binary variables. However, it can lead to, e.g., investments into a 10~MW nuclear power plant.","category":"page"},{"location":"library/public/","page":"Public","title":"Public","text":"Fields without a meaning in ContinuousInvestment:","category":"page"},{"location":"library/public/","page":"Public","title":"Public","text":"cap_increment\n(trans_capex_offset if using TransInvData)","category":"page"},{"location":"library/public/","page":"Public","title":"Public","text":"warning: Warning\nDefining cap_min_add::TimeProfile for this mode of investment will lead to a forced investment of at least cap_min_add in each period.","category":"page"},{"location":"library/public/","page":"Public","title":"Public","text":"ContinuousInvestment","category":"page"},{"location":"library/public/#EnergyModelsInvestments.ContinuousInvestment","page":"Public","title":"EnergyModelsInvestments.ContinuousInvestment","text":"Continuous investment between a minimum and a maximum value. \n\n\n\n\n\n","category":"type"},{"location":"library/public/#BinaryInvestment","page":"Public","title":"BinaryInvestment","text":"","category":"section"},{"location":"library/public/","page":"Public","title":"Public","text":"BinaryInvestment implies that one can choose to invest in the specified capacity (field cap of the node) in the given strategic period, or not. The capacity of the investment cannot be adjusted by the optimization. This implies that the meaning of the capacity of a Node, cap, is redefined. Hence, it is important to specify cap_start to avoid issues in the first strategic period.","category":"page"},{"location":"library/public/","page":"Public","title":"Public","text":"Fields without a meaning in BinaryInvestment:","category":"page"},{"location":"library/public/","page":"Public","title":"Public","text":"cap_min_add\ncap_max_add\ncap_increment\n(trans_capex_offset if using TransInvData)","category":"page"},{"location":"library/public/","page":"Public","title":"Public","text":"warning: Warning\nThis investment type leads to the addition of binary variables. The number of binary variables is equal to the number of strategic periods times the number of Nodes with the BinaryInvestment mode.","category":"page"},{"location":"library/public/","page":"Public","title":"Public","text":"BinaryInvestment","category":"page"},{"location":"library/public/#EnergyModelsInvestments.BinaryInvestment","page":"Public","title":"EnergyModelsInvestments.BinaryInvestment","text":"Binary investment in given capacity with binary variables. Requires specification of cap_start in InvData for proper analyses.\n\n\n\n\n\n","category":"type"},{"location":"library/public/#DiscreteInvestment","page":"Public","title":"DiscreteInvestment","text":"","category":"section"},{"location":"library/public/","page":"Public","title":"Public","text":"DiscreteInvestment allow for only a discrete increase in the capacity. This increase is specified through the field cap_increment. Hence, it can be also dependent on the strategic period.","category":"page"},{"location":"library/public/","page":"Public","title":"Public","text":"DiscreteInvestment can for example be used to represent investment in modular technologies that can be scaled by adding several modules together. In addition, it is beneficial to include for technologies that experience significant economy of scale. In this situation, several instances with different cap_increment and capex_cap can be used","category":"page"},{"location":"library/public/","page":"Public","title":"Public","text":"Fields without a meaning in DiscreteInvestment:","category":"page"},{"location":"library/public/","page":"Public","title":"Public","text":"cap_min_add\ncap_max_add\n(trans_capex_offset if using TransInvData)","category":"page"},{"location":"library/public/","page":"Public","title":"Public","text":"note: Note\nThis investment type leads to the addition of integer variables. The number of integer variables is equal to the number of strategic periods times the number of Nodes with the DiscreteInvestment mode.","category":"page"},{"location":"library/public/","page":"Public","title":"Public","text":"DiscreteInvestment","category":"page"},{"location":"library/public/#EnergyModelsInvestments.DiscreteInvestment","page":"Public","title":"EnergyModelsInvestments.DiscreteInvestment","text":"Investment in fixed increments with integer variables. \n\n\n\n\n\n","category":"type"},{"location":"library/public/#SemiContiInvestment","page":"Public","title":"SemiContiInvestment","text":"","category":"section"},{"location":"library/public/","page":"Public","title":"Public","text":"SemiContiInvestment is an abstract type used for two investment modes:","category":"page"},{"location":"library/public/","page":"Public","title":"Public","text":"SemiContinuousInvestment and\nSemiContinuousOffsetInvestment.","category":"page"},{"location":"library/public/","page":"Public","title":"Public","text":"These investment modes are similar with respect to how you can increase the capacity. They differ however on how the overall cost is calculated. Both investment modes are in general similar to ContinuousInvestment, but the investment is either 0 or between a minimum and maximum value. This means you can define the field cap_min_add::TimeProfile without forcing investment in the technology. Instead, the value determines that if the model decides to invest, then it has to at leas invest in the value provided through `capminadd`. This can be also described as:","category":"page"},{"location":"library/public/","page":"Public","title":"Public","text":"x = 0 lor textttcap_min_add leq x leq textttcap_max_add","category":"page"},{"location":"library/public/","page":"Public","title":"Public","text":"with x corresponding to the invested capacity","category":"page"},{"location":"library/public/","page":"Public","title":"Public","text":"Fields without a meaning in SemiContiInvestment:","category":"page"},{"location":"library/public/","page":"Public","title":"Public","text":"cap_increment","category":"page"},{"location":"library/public/","page":"Public","title":"Public","text":"SemiContiInvestment","category":"page"},{"location":"library/public/#EnergyModelsInvestments.SemiContiInvestment","page":"Public","title":"EnergyModelsInvestments.SemiContiInvestment","text":"Semi-continuous investment, either zero or between a minimum and a maximum value, involves a binary variable. \n\n\n\n\n\n","category":"type"},{"location":"library/public/","page":"Public","title":"Public","text":"note: Note\nThese investment modes leads to the addition of binary variables. The number of binary variables is equal to the number of strategic periods times the number of Nodes with the SemiContinuousInvestment and SemiContinuousOffsetInvestment mode.","category":"page"},{"location":"library/public/#SemiContinuousInvestment","page":"Public","title":"SemiContinuousInvestment","text":"","category":"section"},{"location":"library/public/","page":"Public","title":"Public","text":"The cost function in SemiContinuousInvestment is calculated in the same way as in ContinuousInvestment. The total contribution of invested capacity x to the objective function y is given through the equation","category":"page"},{"location":"library/public/","page":"Public","title":"Public","text":"y = textttcapex_cap times x.","category":"page"},{"location":"library/public/","page":"Public","title":"Public","text":"Fields without a meaning in SemiContinuousInvestment:","category":"page"},{"location":"library/public/","page":"Public","title":"Public","text":"(trans_capex_offset if using TransInvData)","category":"page"},{"location":"library/public/","page":"Public","title":"Public","text":"SemiContinuousInvestment","category":"page"},{"location":"library/public/#EnergyModelsInvestments.SemiContinuousInvestment","page":"Public","title":"EnergyModelsInvestments.SemiContinuousInvestment","text":"Semi-continuous investment where the cost is going through the origin. \n\n\n\n\n\n","category":"type"},{"location":"library/public/#SemiContinuousOffsetInvestment","page":"Public","title":"SemiContinuousOffsetInvestment","text":"","category":"section"},{"location":"library/public/","page":"Public","title":"Public","text":"SemiContinuousOffsetInvestment is a type of investment similar to SemiContinuousInvestment and implemented for investments in transmission infrastructure. It does differ with respect to how the costs are calculated. A SemiContinuousOffsetInvestment has an offset in the cost implemented through the the field Capex_trans_offset. This offset corresponds to the theoretical cost at an invested capacity of 0.","category":"page"},{"location":"library/public/","page":"Public","title":"Public","text":"While  SemiContinuousInvestmentutilizes the same relative cost, even if a lower limit is specified, SemiContinuousOffsetInvestment allows for the specification of an offset in the cost through the field trans_capex_offset. This offset is an absolute cost. It corresponds to the theoretical cost at an invested capacity of 0. This changes the contribution to the cost function from","category":"page"},{"location":"library/public/","page":"Public","title":"Public","text":"y = textttcapex_cap times x","category":"page"},{"location":"library/public/","page":"Public","title":"Public","text":"to","category":"page"},{"location":"library/public/","page":"Public","title":"Public","text":"y = textttcapex_trans times x + textttcapex_trans_offset","category":"page"},{"location":"library/public/","page":"Public","title":"Public","text":"where x corresponds to the invested capacity and y to the total capital cost.","category":"page"},{"location":"library/public/","page":"Public","title":"Public","text":"SemiContinuousOffsetInvestment is currently only implemented for investments in TransmissionModes as its implementation would interact with the lifetime calculations.","category":"page"},{"location":"library/public/","page":"Public","title":"Public","text":"SemiContinuousOffsetInvestment","category":"page"},{"location":"library/public/#EnergyModelsInvestments.SemiContinuousOffsetInvestment","page":"Public","title":"EnergyModelsInvestments.SemiContinuousOffsetInvestment","text":"Semi-continuous investment where the cost has an additional offset\n\n\n\n\n\n","category":"type"},{"location":"library/public/#FixedInvestment","page":"Public","title":"FixedInvestment","text":"","category":"section"},{"location":"library/public/","page":"Public","title":"Public","text":"FixedInvestment is a type of investment where an investment in the given capacity is forced. The capacity used is provided through the fields cap, cap_stor, cap_rate, and trans_cap. It allows to account for the investment cost of known investments. In practice, there is however not too much use in including the fixed investment, except if one is interested in the values of the dual variables.","category":"page"},{"location":"library/public/","page":"Public","title":"Public","text":"The fields cap_min_add, cap_max_add, and cap_increment do not have a meaning when using FixedInvestment.","category":"page"},{"location":"library/public/","page":"Public","title":"Public","text":"Fields without a meaning in DiscreteInvestment:","category":"page"},{"location":"library/public/","page":"Public","title":"Public","text":"cap_min_add\ncap_max_add\ncap_increment\n(trans_capex_offset if using TransInvData)","category":"page"},{"location":"library/public/","page":"Public","title":"Public","text":"FixedInvestment","category":"page"},{"location":"library/public/#EnergyModelsInvestments.FixedInvestment","page":"Public","title":"EnergyModelsInvestments.FixedInvestment","text":"Forced investment in given capacity. \n\n\n\n\n\n","category":"type"},{"location":"library/public/#life_mode","page":"Public","title":"LifetimeMode","text":"","category":"section"},{"location":"library/public/","page":"Public","title":"Public","text":"EnergyModelsInvestments allows for differing descriptions for the lifetime of a technology. A key problem is when the lifetime of a technology is not equal to the duration of strategic periods. To this end, several ways to define the lifetime of a technology are available in the package and presented below.","category":"page"},{"location":"library/public/","page":"Public","title":"Public","text":"It is also possible for the user to define new LifetimeModes. In practice, this requires only the introduction of a new subtype to LifetimeMode as well as a single function.","category":"page"},{"location":"library/public/","page":"Public","title":"Public","text":"LifetimeMode","category":"page"},{"location":"library/public/#EnergyModelsInvestments.LifetimeMode","page":"Public","title":"EnergyModelsInvestments.LifetimeMode","text":"Abstract lifetime mode type.\n\n\n\n\n\n","category":"type"},{"location":"library/public/#UnlimitedLife","page":"Public","title":"UnlimitedLife","text":"","category":"section"},{"location":"library/public/","page":"Public","title":"Public","text":"This LifetimeMode is used when the lifetime of a Node is not limited. No reinvestment is considered by the optimization and there is also ne salvage value (or rest value) at the end of the last strategic period. Hence, the costs are the same, independent of if the investments in the Node are happening in the first strategic period (and the technology is used for, e.g, 25 years) or the last strategic period (with a usage of, e.g., 5 years) when excluding discounting effects.","category":"page"},{"location":"library/public/","page":"Public","title":"Public","text":"UnlimitedLife is the default lifetime mode, if no other mode is specified.","category":"page"},{"location":"library/public/","page":"Public","title":"Public","text":"The field Lifetime does not have a meaning when using UnlimitedLife.","category":"page"},{"location":"library/public/","page":"Public","title":"Public","text":"UnlimitedLife","category":"page"},{"location":"library/public/#EnergyModelsInvestments.UnlimitedLife","page":"Public","title":"EnergyModelsInvestments.UnlimitedLife","text":"The investment's life is not limited. The investment costs do not consider any reinvestment or rest value. \n\n\n\n\n\n","category":"type"},{"location":"library/public/#StudyLife","page":"Public","title":"StudyLife","text":"","category":"section"},{"location":"library/public/","page":"Public","title":"Public","text":"StudyLife includes the technology for the full investigated horizon. If the Lifetime is shorter than the remaining horizon, reinvestments are considered. These reinvestments are included in the costs of the investment strategic period, but discounted to their actual value.","category":"page"},{"location":"library/public/","page":"Public","title":"Public","text":"As an example, consider investments with a lifetime of 20 years in 2030, while the study horizon ends in 2055. In this situation, reinvestments are required in 2050 to allow for operation in the last 5 years. The CAPEX are then correspondingly adjusted to account for both discounted reinvestments and final value in 2055.","category":"page"},{"location":"library/public/","page":"Public","title":"Public","text":"StudyLife","category":"page"},{"location":"library/public/#EnergyModelsInvestments.StudyLife","page":"Public","title":"EnergyModelsInvestments.StudyLife","text":"The investment lasts for the whole study period with adequate reinvestments at the end of the lifetime and considering the rest value. \n\n\n\n\n\n","category":"type"},{"location":"library/public/#PeriodLife","page":"Public","title":"PeriodLife","text":"","category":"section"},{"location":"library/public/","page":"Public","title":"Public","text":"PeriodLife is used to define that the investment is only lasting for the strategic period in which it happens. Additional year of lifetime are counted as a rest value. Reinvestment inside the strategic periods are also considered in case the lifetime is shorter than the length of the strategic period.","category":"page"},{"location":"library/public/","page":"Public","title":"Public","text":"PeriodLife","category":"page"},{"location":"library/public/#EnergyModelsInvestments.PeriodLife","page":"Public","title":"EnergyModelsInvestments.PeriodLife","text":"The investment is considered to last only for the strategic period. The excess lifetime is considered in the rest value. If the lifetime is lower than the length of the period, reinvestment is considered as well. \n\n\n\n\n\n","category":"type"},{"location":"library/public/#RollingLife","page":"Public","title":"RollingLife","text":"","category":"section"},{"location":"library/public/","page":"Public","title":"Public","text":"RollingLife corresponds to the classical roll-over of investments from one strategic period to the next until the end of life is reached. In general, three different cases can be differentiated:","category":"page"},{"location":"library/public/","page":"Public","title":"Public","text":"The lifetime is shorter than the duration of the strategic period. In this situation, a PeriodLife is assumed.\nThe lifetime equals the duration of the strategic period. In this situation, the capacity is retired at the end of the strategic period\nThe lifetime is longer than the duration of the strategic period. This leaves however a problem if the lifetime does fall in-between two strategic periods, as it would be the case for a lifetime of, e.g., 8 years and two strategic periods of, e.g, 5 years. In this case, the technology would only be available for the first 3 years of the second strategic period leaving the question on how to handle this situation. EnergyModelsInvestments retires the technology at the last full strategic period and calculates the remaining value for the technology.","category":"page"},{"location":"library/public/","page":"Public","title":"Public","text":"RollingLife","category":"page"},{"location":"library/public/#EnergyModelsInvestments.RollingLife","page":"Public","title":"EnergyModelsInvestments.RollingLife","text":"The investment is rolling to the next strategic periods and it is retired at the end of its lifetime or the end of the previous strategic period if its lifetime ends between two periods.\n\n\n\n\n\n","category":"type"},{"location":"manual/quick-start/#Quick-Start","page":"Quick Start","title":"Quick Start","text":"","category":"section"},{"location":"manual/quick-start/","page":"Quick Start","title":"Quick Start","text":"To start using the package, refer to the installation instructions on the README page from the git repository.","category":"page"},{"location":"manual/quick-start/","page":"Quick Start","title":"Quick Start","text":"Once the package is installed, you can start using the package. You can start by using an existing model from EnergyModelsBase and converting it with investments. To achieve this, the model type has to be changed from OperationalModel to InvestmentModel which requires the addition of a discount rate as parameter. New nodes can then be added including investment or investment can be added to existing nodes. To modify an existing node to an investment option, you must provide extra investment data in the field data of your node. This will take the form of an Array entry of InvData or InvDataStorage in case the technology is a Storage node. You can find information about the different investment parameters that can be provided to InvData in the documentation by following the links.","category":"page"},{"location":"manual/quick-start/","page":"Quick Start","title":"Quick Start","text":"You can check out and run the provided examples to see simple cases including investment in technologies and transmission.","category":"page"}]
}
