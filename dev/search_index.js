var documenterSearchIndex = {"docs":
[{"location":"how-to/contribute/#how_to-con","page":"Contribute to EnergyModelsInvestments","title":"Contribute to EnergyModelsInvestments","text":"","category":"section"},{"location":"how-to/contribute/","page":"Contribute to EnergyModelsInvestments","title":"Contribute to EnergyModelsInvestments","text":"Contributing to EnergyModelsInvestments can be achieved in several different ways.","category":"page"},{"location":"how-to/contribute/#how_to-con-bug_rep","page":"Contribute to EnergyModelsInvestments","title":"File a bug report","text":"","category":"section"},{"location":"how-to/contribute/","page":"Contribute to EnergyModelsInvestments","title":"Contribute to EnergyModelsInvestments","text":"Another approach to contributing to EnergyModelsInvestments is through filing a bug report as an issue when unexpected behaviour is occuring.","category":"page"},{"location":"how-to/contribute/","page":"Contribute to EnergyModelsInvestments","title":"Contribute to EnergyModelsInvestments","text":"When filing a bug report, please follow the following guidelines:","category":"page"},{"location":"how-to/contribute/","page":"Contribute to EnergyModelsInvestments","title":"Contribute to EnergyModelsInvestments","text":"Be certain that the bug is a bug and originating in EnergyModelsInvestments:\nIf the problem is within the results of the optimization problem, please check first that the nodes are correctly linked with each other. Frequently, missing links (or wrongly defined links) restrict the transport of energy/mass. If you are certain that all links are set correctly, it is most likely a bug in EnergyModelsInvestments and should be reported.\nIf the problem occurs in model construction, it is most likely a bug  in either EnergyModelsBase or EnergyModelsInvestments and should be reported in the respective package. The error message of Julia should provide you with the failing function and whether the failing function is located in EnergyModelsBase or EnergyModelsInvestments. It can occur, that the last shown failing function is within JuMP or MathOptInterface. In this case, it is best to trace the error to the last called EnergyModelsBase or EnergyModelsInvestments function.\nIf the problem is only appearing for specific solvers, it is most likely not a bug in EnergyModelsInvestments, but instead a problem of the solver wrapper for MathOptInterface. In this case, please contact the developers of the corresponding solver wrapper.\nLabel the issue as bug, and\nProvide a minimum working example of a case in which the bug occurs.","category":"page"},{"location":"how-to/contribute/","page":"Contribute to EnergyModelsInvestments","title":"Contribute to EnergyModelsInvestments","text":"note: Note\nWe are aware that certain design choices within EnergyModelsInvestments can lead to method ambiguities. Our aim is to extend the documentation to improve the description on how to best extend the base functionality as well as which caveats can occur.In order to improve the code, we welcome any reports of potential method ambiguities to help us improving the structure of the framework.","category":"page"},{"location":"how-to/contribute/#how_to-con-feat_req","page":"Contribute to EnergyModelsInvestments","title":"Feature requests","text":"","category":"section"},{"location":"how-to/contribute/","page":"Contribute to EnergyModelsInvestments","title":"Contribute to EnergyModelsInvestments","text":"EnergyModelsInvestments includes several Investment options and LifetimeModes. However, not all potential options are included. Hence, if you require a new investment or lifetime mode, it is best to provide a feature request.","category":"page"},{"location":"how-to/contribute/","page":"Contribute to EnergyModelsInvestments","title":"Contribute to EnergyModelsInvestments","text":"Feature requests for EnergyModelsInvestments should follow the guidelines developed for EnergyModelsBase.","category":"page"},{"location":"how-to/contribute/","page":"Contribute to EnergyModelsInvestments","title":"Contribute to EnergyModelsInvestments","text":"note: Note\nEnergyModelsInvestments is slightly different than EnergyModelsBase.Contrary to the other package, we consider that it is beneficial to have all potential features of investment decisions within EnergyModelsInvestments. Hence, requiring a new Investment mode or LifetimeMode should be addressed directly to EnergyModelsInvestments through creating an issue.","category":"page"},{"location":"manual/optimization-variables/#man-opt_var","page":"Optimization variables","title":"Optimization variables","text":"","category":"section"},{"location":"manual/optimization-variables/","page":"Optimization variables","title":"Optimization variables","text":"EnergyModelsInvestments requires that variables are declared by the package which uses it. These variables are required for being able to extend the model with the potential for investments and to follow a given nomenclature utilizing a prefix symbol.","category":"page"},{"location":"manual/optimization-variables/","page":"Optimization variables","title":"Optimization variables","text":"The individual variables can be differentiated in Cost variables, Capacity variables, and Auxiliary variables.","category":"page"},{"location":"manual/optimization-variables/#man-opt_var-gen","page":"Optimization variables","title":"General structure of variables","text":"","category":"section"},{"location":"manual/optimization-variables/","page":"Optimization variables","title":"Optimization variables","text":"As an example, consider the capex variables. The capex variables with a prefix :cap are given by textttcap_capexn_textttinv t_textttinv for Node n_textttinv with investments in investment period t_textttinv. They are extracted using the functions functions EMI.get_var_capex(m, prefix::Symbol) and EMI.get_var_capex(m, prefix::Symbol, element) in which m corresponds to the JuMP model, prefix to a prefix used in variable declaration (in this case :cap) and element to an instance of the element (in the previous example given as n_textttinv).","category":"page"},{"location":"manual/optimization-variables/","page":"Optimization variables","title":"Optimization variables","text":"They are not declared within EnergyModelsInvestments, but have to be declared within the model using EnergyModelsInvestments. This is illustrated in the EMIExt of EnergyModelsBase.","category":"page"},{"location":"manual/optimization-variables/#man-opt_var-cost","page":"Optimization variables","title":"Cost variables","text":"","category":"section"},{"location":"manual/optimization-variables/","page":"Optimization variables","title":"Optimization variables","text":"EnergyModelsInvestments requires the introduction of variables that help extracting the cost of investments in an element at each investment period. One example is given through EnergyModelsBase:","category":"page"},{"location":"manual/optimization-variables/","page":"Optimization variables","title":"Optimization variables","text":"textttcap_capexn_textttinv t_textttinv: Undiscounted total CAPEX of Node n_textttinv with investments in investment period t_textttinv.","category":"page"},{"location":"manual/optimization-variables/","page":"Optimization variables","title":"Optimization variables","text":"The total CAPEX takes into account the invested capacity to calculate the total costs as well as the end of horizon value of the individual technologies including discounting.","category":"page"},{"location":"manual/optimization-variables/","page":"Optimization variables","title":"Optimization variables","text":"The variable is extracted using the functions EMI.get_var_capex(m, prefix::Symbol) (for all variables) and EMI.get_var_capex(m, prefix::Symbol, element) (for only the variable from a given element instance) in which m corresponds to the JuMP model, and prefix to a prefix used in variable declaratio.","category":"page"},{"location":"manual/optimization-variables/","page":"Optimization variables","title":"Optimization variables","text":"tip: Units of cost variables\nCost variables provide the absolute costs within an investment period t_textttinv. An example unit would be € or $.","category":"page"},{"location":"manual/optimization-variables/#man-opt_var-cap","page":"Optimization variables","title":"Capacity variables","text":"","category":"section"},{"location":"manual/optimization-variables/","page":"Optimization variables","title":"Optimization variables","text":"Capacity variables are variables that manipulate the installed capacity. In general, we can differentiate in installed capacity variables and change of capacity variables. The installed capacity variables are:","category":"page"},{"location":"manual/optimization-variables/","page":"Optimization variables","title":"Optimization variables","text":"textttcap_instn t: Installed capacity of Node n with investments in operational period t and\ntextttcap_currentn_textttinv t_textttinv: Installed capacity of Node n_textttinv with investments in investment period t_textttinv.","category":"page"},{"location":"manual/optimization-variables/","page":"Optimization variables","title":"Optimization variables","text":"The approach is similar to the Cost variables as variables are created for each of the individual elements. They are extracted using the functions functions EMI.get_var_inst(m, prefix::Symbol) and EMI.get_var_inst(m, prefix::Symbol, element) as well as EMI.get_var_current(m, prefix::Symbol) and EMI.get_var_current(m, prefix::Symbol, element).","category":"page"},{"location":"manual/optimization-variables/","page":"Optimization variables","title":"Optimization variables","text":"info: Why two capacity variables\nThe variable textttcap_inst is slightly redundant in this design. It is indexed over operational periods t to allow for variations in the demand on an operational level within nodes without investments. This could have been also solved by using a profile, but it was decided to keep the current design. The introduction of a new variable through textttcap_current for the capacity at an investment period simplifies the indexing.If you do not have nodes without investments, you still have to create the variable. In this case, we suggest to not use this variable at all and link the capacity usage directly to textttcap_current","category":"page"},{"location":"manual/optimization-variables/","page":"Optimization variables","title":"Optimization variables","text":"In addition, we introduce variables for investments in an investment period as:","category":"page"},{"location":"manual/optimization-variables/","page":"Optimization variables","title":"Optimization variables","text":"textttcap_addn_textttinv t_textttinv: Added capacity of Node n_textttinv with investments in the beginning of investment period t_textttinv.","category":"page"},{"location":"manual/optimization-variables/","page":"Optimization variables","title":"Optimization variables","text":"The investments are available at the beginning of an investment period. They are extracted using the functions functions EMI.get_var_add(m, prefix::Symbol) and EMI.get_var_add(m, prefix::Symbol, element).","category":"page"},{"location":"manual/optimization-variables/","page":"Optimization variables","title":"Optimization variables","text":"The model can also choose to retire technologies at the end of each investment period through removal variables given as:","category":"page"},{"location":"manual/optimization-variables/","page":"Optimization variables","title":"Optimization variables","text":"textttcap_remn_textttinv t_textttinv: Retired capacity of Node n_textttinv with investments at the end of investment period t_textttinv.","category":"page"},{"location":"manual/optimization-variables/","page":"Optimization variables","title":"Optimization variables","text":"The retired capacity corresponds to removal of capacity, either due to the end of lifetime or due to lack of usage. Capacity removal has an impact on the objective function due to removal of the fixed OPEX. It can hence be beneficial for the model to remove unused capacity to avoid fixed OPEX when the technology is not used in the future. Early removal of a technology, that is before the end of its lifetime, does not provide a rest value to the objective function. The variables are extracted using the functions functions EMI.get_var_rem(m, prefix::Symbol) and EMI.get_var_rem(m, prefix::Symbol, element).","category":"page"},{"location":"manual/optimization-variables/","page":"Optimization variables","title":"Optimization variables","text":"tip: Units of capacity variables\nThe units of the capacity variables are defined by the user. Within EnergyModelsBase, we use both rates (normal nodes as well as charge and discharge capacity of Storage nodes) and energy/mass (level capacity of Storage nodes). Hence, it is important to consider the requirement of the model when deciding the unit.","category":"page"},{"location":"manual/optimization-variables/#man-opt_var-aux","page":"Optimization variables","title":"Auxiliary variables","text":"","category":"section"},{"location":"manual/optimization-variables/","page":"Optimization variables","title":"Optimization variables","text":"Auxiliary variables are variables that are required for certain investment modes. The model creates these variables only if the investment mode requires them. The meaning of the auxiliary variables changes depending on the investment mode.","category":"page"},{"location":"manual/optimization-variables/","page":"Optimization variables","title":"Optimization variables","text":"These variables are:","category":"page"},{"location":"manual/optimization-variables/","page":"Optimization variables","title":"Optimization variables","text":"textttcap_invest_bn_textttinv t_textttinv and\ntextttcap_remove_bn_textttinv t_textttinv,","category":"page"},{"location":"manual/optimization-variables/","page":"Optimization variables","title":"Optimization variables","text":"accessed through the functions EMI.get_var_invest_b(m, prefix::Symbol), EMI.get_var_invest_b(m, prefix::Symbol, element), EMI.get_var_remove_b(m, prefix::Symbol), and EMI.get_var_remove_b(m, prefix::Symbol, element).","category":"page"},{"location":"manual/optimization-variables/","page":"Optimization variables","title":"Optimization variables","text":"The auxiliary variables are only created if the investment mode requires them through the application SparseVariables.","category":"page"},{"location":"manual/optimization-variables/#[BinaryInvestment](@ref)","page":"Optimization variables","title":"BinaryInvestment","text":"","category":"section"},{"location":"manual/optimization-variables/","page":"Optimization variables","title":"Optimization variables","text":"The variable textttcap_invest_b is a binary and used in calculating the current capacity. The variable textttcap_remove_b is not included in any constraint.","category":"page"},{"location":"manual/optimization-variables/#[DiscreteInvestment](@ref)","page":"Optimization variables","title":"DiscreteInvestment","text":"","category":"section"},{"location":"manual/optimization-variables/","page":"Optimization variables","title":"Optimization variables","text":"The variable textttcap_invest_b is an integer and used in calculating the added capacity. The variable textttcap_remove_b is an integer and used in calculating the removed capacity.","category":"page"},{"location":"manual/optimization-variables/#[SemiContiInvestment](@ref)","page":"Optimization variables","title":"SemiContiInvestment","text":"","category":"section"},{"location":"manual/optimization-variables/","page":"Optimization variables","title":"Optimization variables","text":"The variable textttcap_invest_b is a binary and used in calculating the added capacity by providing a lower bound as well as in the CAPEX calculation in the case of SemiContinuousOffsetInvestment. The variable textttcap_remove_b is not included in any constraint.","category":"page"},{"location":"manual/optimization-variables/#[FixedInvestment](@ref)","page":"Optimization variables","title":"FixedInvestment","text":"","category":"section"},{"location":"manual/optimization-variables/","page":"Optimization variables","title":"Optimization variables","text":"The variable textttcap_invest_b is fixed to 1 and used in calculating the current capacity. The variable textttcap_remove_b is not included in any constraint.","category":"page"},{"location":"manual/simple-example/#man-exampl","page":"Example","title":"Examples","text":"","category":"section"},{"location":"manual/simple-example/","page":"Example","title":"Example","text":"EnergyModelsInvestments does not provide directly examples as it requires a host model for running the code. It is in itself not a model. The incorporation of EnergyModelsInvestments is explained on the page on How to use EnergyModelsInvestments. A potential application can be seen in EnergyModelsBase and EnergyModelsGeography in which the previous examples from EnergyModelsInvestments are moved.","category":"page"},{"location":"library/internals/#Internals","page":"Internals","title":"Internals","text":"","category":"section"},{"location":"library/internals/#Index","page":"Internals","title":"Index","text":"","category":"section"},{"location":"library/internals/","page":"Internals","title":"Internals","text":"Pages = [\"internals.md\"]","category":"page"},{"location":"library/internals/#Core-functions","page":"Internals","title":"Core functions","text":"","category":"section"},{"location":"library/internals/","page":"Internals","title":"Internals","text":"EnergyModelsInvestments.add_investment_constraints\nEnergyModelsInvestments.set_capacity_installation\nEnergyModelsInvestments.set_capacity_cost\nEnergyModelsInvestments.set_capex_value","category":"page"},{"location":"library/internals/#EnergyModelsInvestments.add_investment_constraints","page":"Internals","title":"EnergyModelsInvestments.add_investment_constraints","text":"add_investment_constraints(\n    m,\n    element,\n    inv_data::AbstractInvData,\n    cap,\n    prefix,\n    𝒯ᴵⁿᵛ::TS.AbstractStratPers,\n    disc_rate::Float64,\n)\n\nCore function for introducing constraints on the investments. The constraints include introducing bounds on the available capacities as well as the calculation of the CAPEX.\n\nThe function calls two additional subroutines, set_capacity_installation and set_capacity_cost which are used for introducing bounds on the investment variables and calculating the CAPEX contribution of each investments. The utilization of subroutines allows the introduction of dispatch for the individual investment and lifetime options.\n\nArguments\n\nm: the JuMP model instance.\nelement: the element for which investment constraints should be added. Any potential element can be used. In EnergyModelsBase, the individual element is either a Node or a TransmissionMode.\ninv_data::AbstractInvData: the investment data for the node and capacity cap.\nprefix: the prefix used for variables for this element. This argument is used for extracting the individual investment variables.\ncap: the field that is used if several capacities are provided.\n𝒯ᴵⁿᵛ::TS.AbstractStratPers: the strategic periods structure. It can be created from both a TwoLevel or TwoLevelTree structure.\ndisc_rate: the discount rate used in the lifetime calculation for reinvestment and end of life calculations.\n\n\n\n\n\n","category":"function"},{"location":"library/internals/#EnergyModelsInvestments.set_capacity_installation","page":"Internals","title":"EnergyModelsInvestments.set_capacity_installation","text":"set_capacity_installation(m, element, prefix, 𝒯ᴵⁿᵛ, inv_data, inv_mode)\n\nAdd constraints related to upper and lower bounds for investments depending on investment mode of type element.\n\nThese constraints differ dependent on the chosen Investment:\n\nInvestment results in provding a lower and upper bound to the variable var_add through the functions min_add and max_add. This approach is the default approach for all investment modes.\nBinaryInvestment results in setting the variable var_invest_b as binary variable. Furthermore, the variable var_current is only able to be 0 or a provided value through the function invest_capacity.\nDiscreteInvestment results in setting the variables var_invest_b and var_remove_bas positive integer variables. Furthermore, the variable var_current is only able to be equal to a multiple of a provided value through the function increment.\nSemiContiInvestment results in setting the variable var_invest_b as binary variable. Furthermore, the variable var_add is bound through the functions min_add and max_add or 0.\nFixedInvestment results in setting the variable var_invest_b as binary variable. Furthermore, the variable var_current is fixed to a provided value through the function invest_capacity. This allows to incorporate the cost for the correct value of the objective function.\n\ntip: Introducing new investment modes\nThis function can be extended with a new method if you introduce a new Investment. If not, you have to make certain that the functions min_add and max_add are applicable for your investment mode.\n\n\n\n\n\n","category":"function"},{"location":"library/internals/#EnergyModelsInvestments.set_capacity_cost","page":"Internals","title":"EnergyModelsInvestments.set_capacity_cost","text":"set_capacity_cost(m, element, inv_data, prefix, 𝒯ᴵⁿᵛ, disc_rate)\n\nFunction for creating constraints for the variable var_capex dependent on the chosen Investment and LifetimeMode.\n\nThe lifetime calculations are located within this function while the corresponding undiscounted CAPEX values are calculated in the function set_capex_value, depending on the chosen investment mode.\n\nIt implements different versions of the lifetime implementation:\n\nUnlimitedLife results in an unlimited investment. The investment costs do not consider any reinvestment or rest value.\nStudyLife results in the investment lasting for the whole study period with adequate reinvestments at end of lifetime and rest value.\nPeriodLife results in the investment lasting only for the investment period, independent of the duration of the investment period. The excess lifetime is considered in the calculation of the rest value.\nRollingLife results in the investment rolling to the next strategic periods. A capacity is retired at the end of its lifetime or the end of the previous strategic period if its lifetime ends between two strategic periods.\n\ntip: Introducing new lifetime modes\nThis function can be extended with a new method if you introduce a new LifetimeMode. If not, you have to make certain that the function lifetime is applicable for your lifetime mode.\n\n\n\n\n\n","category":"function"},{"location":"library/internals/#EnergyModelsInvestments.set_capex_value","page":"Internals","title":"EnergyModelsInvestments.set_capex_value","text":"set_capex_value(m, element, inv_data, prefix, 𝒯ᴵⁿᵛ)\n\nCalculate the cost value for the different investment modes of the investment data inv_data for element element.\n\nArguments\n\nm: the JuMP model instance.\nelement: the element type for which the absolute CAPEX should be calculated.\nr: the discount rate.\ninv_data: the investment data given as subtype of AbstractInvData.\nprefix: the prefix used for variables for this element.\n𝒯ᴵⁿᵛ: the strategic periods structure.\n\n\n\n\n\nset_capex_value(m, element, inv_data, prefix, 𝒯ᴵⁿᵛ, ::Investment)\n\nWhen no specialized method is defined for the investment mode, it calculates the capital cost based on the multiplication of the field capex in inv_data with the added capacity extracted from the model through the function get_var_add.\n\n\n\n\n\nset_capex_value(m, element, inv_data, prefix, 𝒯ᴵⁿᵛ, inv_mode::SemiContinuousOffsetInvestment)\n\nWhen the investment mode is given by SemiContinuousOffsetInvestment then there is an additional offset for the CAPEX.\n\n\n\n\n\n","category":"function"},{"location":"library/internals/#Variable-extraction-functions","page":"Internals","title":"Variable extraction functions","text":"","category":"section"},{"location":"library/internals/","page":"Internals","title":"Internals","text":"EnergyModelsInvestments.get_var_capex\nEnergyModelsInvestments.get_var_inst\nEnergyModelsInvestments.get_var_current\nEnergyModelsInvestments.get_var_rem\nEnergyModelsInvestments.get_var_add\nEnergyModelsInvestments.get_var_invest_b\nEnergyModelsInvestments.get_var_remove_b","category":"page"},{"location":"library/internals/#EnergyModelsInvestments.get_var_capex","page":"Internals","title":"EnergyModelsInvestments.get_var_capex","text":"get_var_capex(m, prefix::Symbol)\nget_var_capex(m, prefix::Symbol, element)\n\nExtracts the CAPEX variable with a given prefix from the model or only the variable for     the specified element.\n\n\n\n\n\n","category":"function"},{"location":"library/internals/#EnergyModelsInvestments.get_var_inst","page":"Internals","title":"EnergyModelsInvestments.get_var_inst","text":"get_var_inst(m, prefix::Symbol)\nget_var_inst(m, prefix::Symbol, element)\n\nExtracts the installed capacity variable with a given prefix from the model or only the variable for the specified element.\n\n\n\n\n\n","category":"function"},{"location":"library/internals/#EnergyModelsInvestments.get_var_current","page":"Internals","title":"EnergyModelsInvestments.get_var_current","text":"get_var_current(m, prefix::Symbol)\nget_var_current(m, prefix::Symbol, element)\n\nExtracts the current capacity variable with a given prefix from the model or only the variable for the specified element.\n\n\n\n\n\n","category":"function"},{"location":"library/internals/#EnergyModelsInvestments.get_var_rem","page":"Internals","title":"EnergyModelsInvestments.get_var_rem","text":"get_var_rem(m, prefix::Symbol)\nget_var_rem(m, prefix::Symbol, element)\n\nExtracts the retired capacity variable with a given prefix from the model or only the variable for the specified element.\n\n\n\n\n\n","category":"function"},{"location":"library/internals/#EnergyModelsInvestments.get_var_add","page":"Internals","title":"EnergyModelsInvestments.get_var_add","text":"get_var_add(m, prefix::Symbol)\nget_var_add(m, prefix::Symbol, element)\n\nExtracts the investment capacity variable with a given prefix from the model or only the variable for the specified element.\n\n\n\n\n\n","category":"function"},{"location":"library/internals/#EnergyModelsInvestments.get_var_invest_b","page":"Internals","title":"EnergyModelsInvestments.get_var_invest_b","text":"get_var_invest_b(m, prefix::Symbol)\nget_var_invest_b(m, prefix::Symbol, element)\n\nExtracts the binary investment variable with a given prefix from the model or only the variable for the specified element.\n\n\n\n\n\n","category":"function"},{"location":"library/internals/#EnergyModelsInvestments.get_var_remove_b","page":"Internals","title":"EnergyModelsInvestments.get_var_remove_b","text":"get_var_remove_b(m, prefix::Symbol)\nget_var_remove_b(m, prefix::Symbol, element)\n\nExtracts the binary retirement variable with a given prefix from the model or only the variable for the specified element.\n\n\n\n\n\n","category":"function"},{"location":"library/internals/#Functions-for-extracting-fields","page":"Internals","title":"Functions for extracting fields","text":"","category":"section"},{"location":"library/internals/","page":"Internals","title":"Internals","text":"EnergyModelsInvestments.capex\nEnergyModelsInvestments.max_installed\nEnergyModelsInvestments.min_add\nEnergyModelsInvestments.max_add\nEnergyModelsInvestments.capex_offset\nEnergyModelsInvestments.invest_capacity\nEnergyModelsInvestments.increment\nEnergyModelsInvestments.lifetime_mode\nEnergyModelsInvestments.lifetime","category":"page"},{"location":"library/internals/#EnergyModelsInvestments.capex","page":"Internals","title":"EnergyModelsInvestments.capex","text":"capex(inv_data::AbstractInvData)\ncapex(n::AbstractInvData, t_inv)\n\nReturns the CAPEX of the investment data inv_data as TimeProfile or in investment period t_inv.\n\n\n\n\n\n","category":"function"},{"location":"library/internals/#EnergyModelsInvestments.max_installed","page":"Internals","title":"EnergyModelsInvestments.max_installed","text":"max_installed(inv_data::AbstractInvData)\nmax_installed(inv_data::AbstractInvData, t_inv)\n\nReturns the maximum allowed installed capacity the investment data inv_data as TimeProfile or in investment period t_inv.\n\n\n\n\n\n","category":"function"},{"location":"library/internals/#EnergyModelsInvestments.min_add","page":"Internals","title":"EnergyModelsInvestments.min_add","text":"min_add(inv_mode::Investment)\nmin_add(inv_mode::Investment, t_inv)\n\nReturns the minimum allowed added capacity of the investment mode inv_mode as TimeProfile or in investment period t_inv.\n\n\n\n\n\nmin_add(inv_data::AbstractInvData)\nmin_add(inv_data::AbstractInvData, t_inv)\n\nReturns the minimum allowed added capacity of the investment data inv_data as TimeProfile or in investment period t_inv.\n\n\n\n\n\n","category":"function"},{"location":"library/internals/#EnergyModelsInvestments.max_add","page":"Internals","title":"EnergyModelsInvestments.max_add","text":"max_add(inv_mode::Investment)\nmax_add(inv_mode::Investment, t_inv)\n\nReturns the maximum allowed added capacity of the investment mode inv_mode as TimeProfile or in investment period t_inv.\n\n\n\n\n\nmax_add(inv_data::AbstractInvData)\nmax_add(inv_data::AbstractInvData, t_inv)\n\nReturns the maximum allowed added capacity of the investment data inv_data as TimeProfile or in investment period t_inv.\n\n\n\n\n\n","category":"function"},{"location":"library/internals/#EnergyModelsInvestments.capex_offset","page":"Internals","title":"EnergyModelsInvestments.capex_offset","text":"capex_offset(inv_mode::SemiContinuousOffsetInvestment)\ncapex_offset(inv_mode::SemiContinuousOffsetInvestment, t_inv)\n\nReturns the offset of the CAPEX of the investment mode inv_mode as TimeProfile or in investment period t_inv.\n\n\n\n\n\ncapex_offset(inv_data::AbstractInvData)\ncapex_offset(inv_data::AbstractInvData, t_inv)\n\nReturns the offset of the CAPEX of the investment data inv_data as TimeProfile or in investment period t_inv.\n\n\n\n\n\n","category":"function"},{"location":"library/internals/#EnergyModelsInvestments.invest_capacity","page":"Internals","title":"EnergyModelsInvestments.invest_capacity","text":"invest_capacity(inv_mode::Investment)\ninvest_capacity(inv_mode::Investment, t_inv)\n\nReturns the capacity investments of the investment mode inv_mode as TimeProfile or in investment period t_inv.\n\n\n\n\n\ninvest_capacity(inv_data::AbstractInvData)\ninvest_capacity(inv_data::AbstractInvData, t_inv)\n\nReturns the capacity investments of the investment data inv_data as TimeProfile or in investment period t_inv.\n\n\n\n\n\n","category":"function"},{"location":"library/internals/#EnergyModelsInvestments.increment","page":"Internals","title":"EnergyModelsInvestments.increment","text":"increment(inv_mode::Investment)\nincrement(inv_mode::Investment, t_inv)\n\nReturns the capacity increment of the investment mode inv_mode as TimeProfile or in investment period t_inv.\n\n\n\n\n\nincrement(inv_data::AbstractInvData)\nincrement(inv_data::AbstractInvData, t_inv)\n\nReturns the capacity increment of the investment data inv_data as TimeProfile or in investment period t_inv.\n\n\n\n\n\n","category":"function"},{"location":"library/internals/#EnergyModelsInvestments.lifetime_mode","page":"Internals","title":"EnergyModelsInvestments.lifetime_mode","text":"lifetime_mode(inv_data::AbstractInvData)\n\nReturn the lifetime mode of the investment data inv_data. By default, all investments are unlimited.\n\n\n\n\n\n","category":"function"},{"location":"library/internals/#EnergyModelsInvestments.lifetime","page":"Internals","title":"EnergyModelsInvestments.lifetime","text":"lifetime(lifetime_mode::LifetimeMode)\nlifetime(lifetime_mode::LifetimeMode, t_inv)\n\nReturn the lifetime of the lifetime mode lifetime_mode as TimeProfile or in investment period t_inv.\n\n\n\n\n\nlifetime(inv_data::AbstractInvData)\nlifetime(inv_data::AbstractInvData, t_inv)\n\nReturn the lifetime of the investment data inv_data as TimeProfile or in investment period t_inv.\n\n\n\n\n\n","category":"function"},{"location":"library/internals/#Utility-functions","page":"Internals","title":"Utility functions","text":"","category":"section"},{"location":"library/internals/","page":"Internals","title":"Internals","text":"EnergyModelsInvestments.set_capex_discounter\nEnergyModelsInvestments.start_cap","category":"page"},{"location":"library/internals/#EnergyModelsInvestments.set_capex_discounter","page":"Internals","title":"EnergyModelsInvestments.set_capex_discounter","text":"set_capex_discounter(years, lifetime, disc_rate)\n\nCalculate the discounted values used in the lifetime calculations, when the LifetimeMode is given by PeriodLife and StudyLife.\n\nArguments\n\nyears:: the remaining years for calculating the discounted value. The years are depending on the considered LifetimeMode, using remaining(t_inv, 𝒯) for StudyLife and duration(t_inv) for PeriodLife.\nlifetime: the lifetime of the element.\ndisc_rate: the discount rate.\n\n\n\n\n\n","category":"function"},{"location":"library/internals/#EnergyModelsInvestments.start_cap","page":"Internals","title":"EnergyModelsInvestments.start_cap","text":"start_cap(element, t_inv, inv_data::AbstractInvData, cap)\n\nReturns the starting capacity of the type element in investment period t_inv for capacity cap.\n\nIf NoStartInvData is used for the starting capacity, it requires the definition of a method for the corresponding element.\n\n\n\n\n\n","category":"function"},{"location":"manual/quick-start/#man-quick","page":"Quick Start","title":"Quick Start","text":"","category":"section"},{"location":"manual/quick-start/","page":"Quick Start","title":"Quick Start","text":"To start using the package, refer to the installation instructions on the README page from the git repository.","category":"page"},{"location":"manual/quick-start/","page":"Quick Start","title":"Quick Start","text":"Once the package is installed, you can start using the package. You can start by using an existing model from EnergyModelsBase and include investment options for the different technologies. To achieve this, the model type has to be changed from OperationalModel to InvestmentModel which requires the addition of a discount rate as parameter. New nodes can then be added including investment or investment can be added to existing nodes. To modify an existing node to an investment option, you must provide extra investment data in the field data of your node. This will take the form of an Array entry of SingleInvData or StorageInvData in case the technology is a Storage node.","category":"page"},{"location":"manual/quick-start/","page":"Quick Start","title":"Quick Start","text":"You can check out and run the provided examples to see simple cases including investment in technologies and transmission.","category":"page"},{"location":"how-to/update-models/#how_to-update","page":"Update models","title":"Update your model to the latest versions","text":"","category":"section"},{"location":"how-to/update-models/","page":"Update models","title":"Update models","text":"EnergyModelsInvestments is still in a pre-release version. Hence, there are frequently breaking changes occuring, although we plan to keep backwards compatibility. This document is designed to provide users with information regarding how they have to adjust their models to keep compatibility to the latest changes. We will as well implement information regarding the adjustment of extension packages, although this is more difficult due to the vast majority of potential changes.","category":"page"},{"location":"how-to/update-models/#how_to-update-05","page":"Update models","title":"Adjustments from 0.5.x","text":"","category":"section"},{"location":"how-to/update-models/","page":"Update models","title":"Update models","text":"The following changes obly affect older models using EnergyModelsBase and EnergyModelsGeography. They are not relevant if you do not use EnergyModelsBase.","category":"page"},{"location":"how-to/update-models/#how_to-update-05-key","page":"Update models","title":"Key changes for investment type descriptions","text":"","category":"section"},{"location":"how-to/update-models/","page":"Update models","title":"Update models","text":"Version 0.7 in EnergyModelsBase introduced the potential to have charge and discharge capacities through storage parameters. This required hence a rework of how we model investments into storage nodes. We decided to use this requirement as an approach for a full rework of the investment options, increasing the potential to make EnergyModelsInvestments independent of EnergyModelsBase.","category":"page"},{"location":"how-to/update-models/","page":"Update models","title":"Update models","text":"The key changes are:","category":"page"},{"location":"how-to/update-models/","page":"Update models","title":"Update models","text":"All parameters for investment or lifetime modes are incorporated in the respective investment or lifetime mode.\nThe previously used investment data, InvData, InvDataStorage, and TransInvData, are replaced by SingleInvData (for standard node and transmission mode investments) and StorageInvData (for storage investments).\nCAPEX cariables are renamed:\n:capex_cap is now :cap_capex,\n:capex_rate is now given by :stor_charge_capex and :stor_discharge_capex,\n:capex_stor is now given by :stor_level_capex, and\n:capex_trans is now given by :trans_cap_capex.","category":"page"},{"location":"how-to/update-models/","page":"Update models","title":"Update models","text":"note: Note\nThe legacy constructors for calls of the composite type of version 0.5 will be included at least until version 0.7. They are located within the extension from version 0.7 onwards.","category":"page"},{"location":"how-to/update-models/#how_to-update-05-inv_data","page":"Update models","title":"InvData and TransInvData","text":"","category":"section"},{"location":"how-to/update-models/","page":"Update models","title":"Update models","text":"The following changes are written down for InvData, but are equivalent for TransInvData. The previous description for nodal investments was given by:","category":"page"},{"location":"how-to/update-models/","page":"Update models","title":"Update models","text":"@kwdef struct InvData <: InvestmentData\n    capex_cap::TimeProfile\n    cap_max_inst::TimeProfile\n    cap_max_add::TimeProfile\n    cap_min_add::TimeProfile\n    inv_mode::Investment = ContinuousInvestment()\n    cap_start::Union{Real, Nothing} = nothing\n    cap_increment::TimeProfile = FixedProfile(0)\n    life_mode::LifetimeMode = UnlimitedLife()\n    lifetime::TimeProfile = FixedProfile(0)\nend","category":"page"},{"location":"how-to/update-models/","page":"Update models","title":"Update models","text":"while the new type for single investments is given as","category":"page"},{"location":"how-to/update-models/","page":"Update models","title":"Update models","text":"struct SingleInvData <: InvestmentData\n    cap::AbstractInvData\nend","category":"page"},{"location":"how-to/update-models/","page":"Update models","title":"Update models","text":"with a constructor allowing directly the creation without having to specify the intermediate type.","category":"page"},{"location":"how-to/update-models/","page":"Update models","title":"Update models","text":"The new type, AbstractInvData has at the time being two subtypes, NoStartInvData and StartInvData, given as:","category":"page"},{"location":"how-to/update-models/","page":"Update models","title":"Update models","text":"@kwdef struct NoStartInvData <: AbstractInvData\n    capex::TimeProfile       # Capex to install cap\n    max_inst::TimeProfile    # Max installable capacity in one period (in total)\n    inv_mode::Investment\n    life_mode::LifetimeMode\nend\n\n@kwdef struct StartInvData <: AbstractInvData\n    capex::TimeProfile      # Capex to install cap\n    max_inst::TimeProfile   # Max installable capacity in one period (in total)\n    initial::Real           # Initially installed capacity\n    inv_mode::Investment\n    life_mode::LifetimeMode\nend","category":"page"},{"location":"how-to/update-models/","page":"Update models","title":"Update models","text":"Hence, the original InvData type would be translated as","category":"page"},{"location":"how-to/update-models/","page":"Update models","title":"Update models","text":"# If no starting capacity was provided\nSingleInvData(\n    capex_cap,\n    cap_max_inst,\n    tmp_inv_mode,\n    tmp_life_mode,\n)\n\n# If a starting capacity was provided\nSingleInvData(\n    capex_cap,\n    cap_max_inst,\n    cap_start,\n    tmp_inv_mode,\n    tmp_life_mode,\n)\n","category":"page"},{"location":"how-to/update-models/","page":"Update models","title":"Update models","text":"The translation of the parameters cap_max_add, cap_min_add, and cap_increment is dependent on the chosen investment mode, see below. This makes the legacy constructor slightly more complex as it is necessary to check for the individual type.","category":"page"},{"location":"how-to/update-models/#InvDataStorage","page":"Update models","title":"InvDataStorage","text":"","category":"section"},{"location":"how-to/update-models/","page":"Update models","title":"Update models","text":"InvDataStorage was significantly reworked since version 0.5. The total rework is provided below.","category":"page"},{"location":"how-to/update-models/","page":"Update models","title":"Update models","text":"The previous description for storage investments was given by:","category":"page"},{"location":"how-to/update-models/","page":"Update models","title":"Update models","text":"@kwdef struct InvDataStorage <: InvestmentData\n    capex_rate::TimeProfile\n    rate_max_inst::TimeProfile\n    rate_max_add::TimeProfile\n    rate_min_add::TimeProfile\n    capex_stor::TimeProfile\n    stor_max_inst::TimeProfile\n    stor_max_add::TimeProfile\n    stor_min_add::TimeProfile\n    inv_mode::Investment = ContinuousInvestment()\n    rate_start::Union{Real, Nothing} = nothing\n    stor_start::Union{Real, Nothing} = nothing\n    rate_increment::TimeProfile = FixedProfile(0)\n    stor_increment::TimeProfile = FixedProfile(0)\n    life_mode::LifetimeMode = UnlimitedLife()\n    lifetime::TimeProfile = FixedProfile(0)\nend","category":"page"},{"location":"how-to/update-models/","page":"Update models","title":"Update models","text":"The new storage investment type is now layered, allowing for different options for the individual capacities given through the fields charge, level, and discharge:","category":"page"},{"location":"how-to/update-models/","page":"Update models","title":"Update models","text":"@kwdef struct StorageInvData <: InvestmentData\n    charge::Union{AbstractInvData, Nothing} = nothing\n    level::Union{AbstractInvData, Nothing} = nothing\n    discharge::Union{AbstractInvData, Nothing} = nothing\nend","category":"page"},{"location":"how-to/update-models/","page":"Update models","title":"Update models","text":"As outlined, AbstractInvData has at the time being two subtypes, NoStartInvData and StartInvData. Depending on whether you specified in your previous InvDataStorage instance the field rate_start and stor_start, you will have to use either NoStartInvData (not specified) or StartInvData (specified).","category":"page"},{"location":"how-to/update-models/","page":"Update models","title":"Update models","text":"In addition, if you used the rate variables previously for the charge or discharge rate, you have to adjust the investment data slightly. A RefStorage node from EnergyModelsBase would be given then as:","category":"page"},{"location":"how-to/update-models/","page":"Update models","title":"Update models","text":"StorageInvData(\n    charge = NoStartInvData(\n        capex = capex_rate,\n        max_inst = rate_max_inst,\n        inv_mode = inv_mode,\n        life_mode = life_mode,\n    ),\n    level = NoStartInvData(\n        capex = capex_stor,\n        max_inst = stor_max_inst,\n        inv_mode = inv_mode,\n        life_mode = life_mode,\n    ),\n)","category":"page"},{"location":"how-to/update-models/","page":"Update models","title":"Update models","text":"while a node HydroStor from EnergyModelsRenewableProducers, in which the rate was used for the discharge, would be then given as:","category":"page"},{"location":"how-to/update-models/","page":"Update models","title":"Update models","text":"StorageInvData(\n    level = NoStartInvData(\n        capex = capex_stor,\n        max_inst = stor_max_inst,\n        inv_mode = inv_mode,\n        life_mode = life_mode,\n    ),\n    discharge = NoStartInvData(\n        capex = capex_stor,\n        max_inst = stor_max_inst,\n        inv_mode = inv_mode,\n        life_mode = life_mode,\n    ),\n)","category":"page"},{"location":"how-to/update-models/","page":"Update models","title":"Update models","text":"The translation of the parameters rate_max_add, rate_min_add, rate_increment, stor_max_add, stor_min_add,  stor_increment is dependent on the chosen investment mode, see below. This makes the legacy constructor slightly more complex as it is necessary to check for the individual type.","category":"page"},{"location":"how-to/update-models/#how_to-update-05-inv_modes","page":"Update models","title":"Investment modes","text":"","category":"section"},{"location":"how-to/update-models/","page":"Update models","title":"Update models","text":"Investment modes include now the required data. This implies that the direct translation is now dependent on the individual investment mode. Below, you can find the approach for InvData legacy constructors, although the approach is the same for InvDataStorage and TransInvData.","category":"page"},{"location":"how-to/update-models/","page":"Update models","title":"Update models","text":"# DiscreteInvestment\ninv_mode = DiscreteInvestment(cap_increment)\n\n# ContinuousInvestment\ninv_mode = ContinuousInvestment(cap_min_add, cap_max_add)\n\n# SemiContinuousInvestment\ninv_mode = SemiContinuousInvestment(cap_min_add, cap_max_add)\n\n# SemiContinuousOffsetInvestment\ninv_mode = SemiContinuousOffsetInvestment(trans_min_add, trans_max_add, capex_trans_offset)","category":"page"},{"location":"how-to/update-models/","page":"Update models","title":"Update models","text":"warning: Warning\nWe do not provide any constructors for BinaryInvestment and FixedInvestment as it is not possible to deduce the capacity directly from the provided constructor. Instead, the model will throw an error.","category":"page"},{"location":"how-to/update-models/","page":"Update models","title":"Update models","text":"BinaryInvestment and FixedInvestment can be solved using the following approach, outlined for a Source node:","category":"page"},{"location":"how-to/update-models/","page":"Update models","title":"Update models","text":"# Consider the following Source node in which the investment_data_source used\n# BinaryInvestment or FixedInvestment\nsource = RefSource(\n    \"electricity source\",       # Node ID\n    StrategicProfile([10, 15]), # Capacity in MW\n    FixedProfile(10),           # Variable OPEX in EUR/MW\n    FixedProfile(5),            # Fixed OPEX in EUR/year\n    Dict(Power => 1),           # Output from the Node, in this gase, Power\n    [investment_data_source],   # Additional data used for adding the investment data\n)\n\n# The original investment data type was given as\ninvestment_data_source = InvData(\n    capex_cap = FixedProfile(300000),   # CAPEX [€/MW]\n    cap_max_inst = FixedProfile(30),    # max installed capacity [MW]\n    cap_max_add = FixedProfile(30),     # max added capactity per sp [MW]\n    cap_min_add = FixedProfile(0),      # min added capactity per sp [MW]\n    inv_mode = FixedInvestments(),      # investment mode\n    cap_start = 0,                      # initial capacity\n    life_mode = RollingLife(),          # Lifetime mode\n    lifetime = FixedProfile(15),        # Lifetime\n)\n\n# The new investment data type is then given as\ninvestment_data_source = SingleInvData(\n    FixedProfile(300*1e3),          # CAPEX [€/MW]\n    FixedProfile(30),               # max installed capacity [MW]\n    FixedProfile(0),                # max installed capacity [MW]\n    FixedInvestments(StrategicProfile([10, 15])),\n    # Line above: Investment mode with the following arguments:\n    # New capacity in the investment period, if invested in [MW]\n    RollingLife(FixedProfile(15)),  # Lifetime mode\n)","category":"page"},{"location":"how-to/update-models/#how_to-update-05-life_modes","page":"Update models","title":"Lifetime modes","text":"","category":"section"},{"location":"how-to/update-models/","page":"Update models","title":"Update models","text":"Lifetime modes now include the required lifetime. Below, you can find the approach for InvData legacy constructors, although the approach is the same for InvDataStorage and TransInvData.","category":"page"},{"location":"how-to/update-models/","page":"Update models","title":"Update models","text":"# StudyLife\nlife_mode = StudyLife(lifetime)\n\n# StudyLife\nlife_mode = PeriodLife(lifetime)\n\n# StudyLife\nlife_mode = RollingLife(lifetime)","category":"page"},{"location":"how-to/use-emi/#how_to-use_emi","page":"Use EMI","title":"Use EnergyModelsInvestments","text":"","category":"section"},{"location":"how-to/use-emi/","page":"Use EMI","title":"Use EMI","text":"EnergyModelsInvestments was initially designed as extension package for EnergyModelsBase. Hence, many design choices are impacted by the requirements of EnergyModelsBase. We realized however that it can be beneficial to make it independent of EnergyModelsBase to use the incorporated methods in other energy system optimization models that may be under development.","category":"page"},{"location":"how-to/use-emi/","page":"Use EMI","title":"Use EMI","text":"Using EnergyModelsInvestments requires the following implementations in your model.","category":"page"},{"location":"how-to/use-emi/","page":"Use EMI","title":"Use EMI","text":"tip: Implementation\nIf you are uncertain on how to best implement investment options, it can be beneficial to investigate the approaches chosen in EnergyModelsBase and EnergyModelsGeography.","category":"page"},{"location":"how-to/use-emi/#how_to-use_emi-aux_fun","page":"Use EMI","title":"Auxiliary functions","text":"","category":"section"},{"location":"how-to/use-emi/","page":"Use EMI","title":"Use EMI","text":"The are several additional functions which are specific for the individual types. This functions are either used as example for a simplified interface or alternatively required in EnergyModelsInvestments. The latter requires you to implement methods within your model through multiple dispatch as they are called within EnergyModelsInvestments.","category":"page"},{"location":"how-to/use-emi/#how_to-use_emi-aux_fun-req_met","page":"Use EMI","title":"Required methods","text":"","category":"section"},{"location":"how-to/use-emi/","page":"Use EMI","title":"Use EMI","text":"When you are using the type NoStartInvData, you have to specify the function","category":"page"},{"location":"how-to/use-emi/","page":"Use EMI","title":"Use EMI","text":"start_cap(element, t_inv, inv_data::NoStartInvData, cap)","category":"page"},{"location":"how-to/use-emi/","page":"Use EMI","title":"Use EMI","text":"for your type. The main reason is that in this case you do not specify the initial capacity in EnergyModelsInvestments, but instead deduce it from the provided initial capacity in your energiy system optimization model.","category":"page"},{"location":"how-to/use-emi/","page":"Use EMI","title":"Use EMI","text":"In the case of EnergyModelsBase, this is given through the methods","category":"page"},{"location":"how-to/use-emi/","page":"Use EMI","title":"Use EMI","text":"EMI.start_cap(n::EMB.Node, t_inv, inv_data::NoStartInvData, cap) =\n    capacity(n, t_inv)\nEMI.start_cap(n::Storage, t_inv, inv_data::NoStartInvData, cap) =\n    capacity(getproperty(n, cap), t_inv)","category":"page"},{"location":"how-to/use-emi/","page":"Use EMI","title":"Use EMI","text":"and the application of the internal function capacity().","category":"page"},{"location":"how-to/use-emi/#how_to-use_emi-aux_fun-sim_int","page":"Use EMI","title":"Simplified interface functions","text":"","category":"section"},{"location":"how-to/use-emi/","page":"Use EMI","title":"Use EMI","text":"EnergyModelsBase creates new types for the investment data instead of using NoStartInvData and StartInvData. The background for this approach is that we like to have the potential for multiple capacities within a node, e.g., charge, level, and discharge capacities in Storage nodes as well as the potential for investments in the individual capacities. Hence, we create new methods for the function investment_data() to directly access the individual fields of the new investment data types from the node level. In addition, we incorporate the function has_investment() to allow a limitation of investments to a subset of the nodes.","category":"page"},{"location":"how-to/use-emi/","page":"Use EMI","title":"Use EMI","text":"Both functions are not directly used in EnergyModelsInvestments in this context. Hence, it is not required to declare new methods for these functions. It can however be beneficial to create methods as it may simplify the subsequent structure.","category":"page"},{"location":"how-to/use-emi/#how_to-use_emi-var_dec","page":"Use EMI","title":"Variable declarations","text":"","category":"section"},{"location":"how-to/use-emi/","page":"Use EMI","title":"Use EMI","text":"As outlined in Optimization variables, we require that the user follows a given variable naming convention. The variables used within EnergyModelsInvestments are extracted with the help of the following functions:","category":"page"},{"location":"how-to/use-emi/","page":"Use EMI","title":"Use EMI","text":"EMI.get_var_capex for capital expenses variables, declared over strategic periods,\nEMI.get_var_inst for capacity variables, declared over operational periods,\nEMI.get_var_current for capacity variables, declared over strategic periods,\nEMI.get_var_add for capacity addtion variables, declared over strategic periods,\nEMI.get_var_rem for capacity removal variables, declared over strategic periods,\nEMI.get_var_invest_b for helper variables for investments, declared over strategic periods, and\nEMI.get_var_remove_b for helper variables for removals, declared over strategic periods.","category":"page"},{"location":"how-to/use-emi/","page":"Use EMI","title":"Use EMI","text":"The provided functions utilize a prefix::Symbol argument which is the corresponding prefix for all variables. Optimization variables explains the required names for the variables with prefix = :cap.","category":"page"},{"location":"how-to/use-emi/","page":"Use EMI","title":"Use EMI","text":"Although it is in general possible to provide dispatch on these functions for new types, we unfortunately require in the current implementation that the naming convention has to be followed at least for the Auxiliary variables as SparseVariables requires the extraction of all variables with a given name before the insertion.","category":"page"},{"location":"how-to/use-emi/","page":"Use EMI","title":"Use EMI","text":"Hence, it is best to declare all variables as, e.g. using the prefix :cap:","category":"page"},{"location":"how-to/use-emi/","page":"Use EMI","title":"Use EMI","text":"𝒯ᴵⁿᵛ = strategic_periods(𝒯)\n\n# Add investment variables for reference nodes for each investment period:\n@variable(m, cap_inst[𝒩ᴵⁿᵛ] >= 0)\n@variable(m, cap_capex[𝒩ᴵⁿᵛ, 𝒯ᴵⁿᵛ] >= 0)\n@variable(m, cap_current[𝒩ᴵⁿᵛ, 𝒯ᴵⁿᵛ] >= 0)\n@variable(m, cap_add[𝒩ᴵⁿᵛ, 𝒯ᴵⁿᵛ] >= 0)\n@variable(m, cap_rem[𝒩ᴵⁿᵛ, 𝒯ᴵⁿᵛ] >= 0)\n@variable(m, cap_invest_b[𝒩ᴵⁿᵛ, 𝒯ᴵⁿᵛ] >= 0; container = IndexedVarArray)\n@variable(m, cap_remove_b[𝒩ᴵⁿᵛ, 𝒯ᴵⁿᵛ] >= 0; container = IndexedVarArray)","category":"page"},{"location":"how-to/use-emi/","page":"Use EMI","title":"Use EMI","text":"with 𝒩ᴵⁿᵛ corresponding to nodes with investments.","category":"page"},{"location":"how-to/use-emi/#how_to-use_emi-inc_inv","page":"Use EMI","title":"Inclusion of investment constraints","text":"","category":"section"},{"location":"how-to/use-emi/","page":"Use EMI","title":"Use EMI","text":"Investment constraints are included through the function","category":"page"},{"location":"how-to/use-emi/","page":"Use EMI","title":"Use EMI","text":"function add_investment_constraints(\n    m,                          # JuMP model\n    element,                    # Element for which investments are added\n    inv_data::AbstractInvData,  # Investment data for the element\n    cap,                        # Capacity that has investments\n    prefix,                     # Used prefix in variable declaration\n    𝒯ᴵⁿᵛ::TS.AbstractStratPers, # Strategic periods\n    disc_rate::Float64,         # Discount rate in absolute values\n)","category":"page"},{"location":"how-to/use-emi/","page":"Use EMI","title":"Use EMI","text":"The individual input is as well described in the documentation.","category":"page"},{"location":"how-to/use-emi/","page":"Use EMI","title":"Use EMI","text":"This functions includes constraints on the capacity and calculates the capital expenses for each element. There are two main points one has to consider:","category":"page"},{"location":"how-to/use-emi/","page":"Use EMI","title":"Use EMI","text":"We add the investments constraints for each individual element. In the case of multiple elements, it is necessary to iterate through the vector of elements.\nWe add the investment constraints for each individual capacity cap. This argument is only relevant if an element has multiple capacities as it is the case for Storage nodes in EnergyModelsBase.","category":"page"},{"location":"how-to/use-emi/","page":"Use EMI","title":"Use EMI","text":"Consequently, you have to iterate through all elements and their capacities cap if you want to add investment constraints.","category":"page"},{"location":"how-to/use-emi/","page":"Use EMI","title":"Use EMI","text":"Given the example nodes above with single capacities, this would be given as:","category":"page"},{"location":"how-to/use-emi/","page":"Use EMI","title":"Use EMI","text":"for n ∈ 𝒩ᴵⁿᵛ\n    # Extract the investment data, the discount rate, and the strategic periods\n    disc_rate = discount_rate(modeltype)\n    inv_data = investment_data(n, :cap)\n    𝒯ᴵⁿᵛ = strategic_periods(𝒯)\n\n    # Add the investment constraints\n    EMI.add_investment_constraints(m, n, inv_data, :cap, :cap, 𝒯ᴵⁿᵛ, disc_rate)\nend","category":"page"},{"location":"how-to/use-emi/","page":"Use EMI","title":"Use EMI","text":"Note that we included in this example a method for investment_data() as outlined above.","category":"page"},{"location":"how-to/use-emi/#how_to-use_emi-up_obj","page":"Use EMI","title":"Updating the objective function","text":"","category":"section"},{"location":"how-to/use-emi/","page":"Use EMI","title":"Use EMI","text":"EnergyModelsInvestments does not change the objective function. This would require detailed knowledge regarding the individual contributing factors. Hence, we decided that it is beneficial to instead calculate the capital expense contributions in each investment period. As a consequence, when using EnergyModelsInvestments, you have to include the variable textttcap_capex (if you used prefix = :cap) for all elements with investments to your objective function.","category":"page"},{"location":"how-to/use-emi/","page":"Use EMI","title":"Use EMI","text":"An illustrative example is given in the function EMB.objective(m, 𝒩, 𝒯, 𝒫, modeltype::AbstractInvestmentModel) compared to the function objective(m, 𝒩, 𝒯, 𝒫, modeltype::EnergyModel) in EnergyModelsBase.","category":"page"},{"location":"manual/philosophy/#man-phil","page":"Philosophy","title":"Philosophy","text":"","category":"section"},{"location":"manual/philosophy/#man-phil-gen","page":"Philosophy","title":"General design philosophy","text":"","category":"section"},{"location":"manual/philosophy/","page":"Philosophy","title":"Philosophy","text":"EnergyModelsInvestments is a package that calculates the capital expenditures through investments in technologies. It cannot be used as a stand-alone package, but simplifies the incorporation of investment options into energy system models. The user still has to define several functions within their own package, as outlined in Use EnergyModelsInvestments.","category":"page"},{"location":"manual/philosophy/","page":"Philosophy","title":"Philosophy","text":"The aim in the package development is to provide the user with maximum flexibility on how to incorporate investment decisions. In the case of investments, the flexibility is required for selecting:","category":"page"},{"location":"manual/philosophy/","page":"Philosophy","title":"Philosophy","text":"the investment mode for a given technology in a given region and\nthe lifetime description for a given technology in a given region.","category":"page"},{"location":"manual/philosophy/","page":"Philosophy","title":"Philosophy","text":"The model is also compatible with EnergyModelsGeography to extend its concept to investment in TransmissionModes.","category":"page"},{"location":"manual/philosophy/#man-phil-inv_mode","page":"Philosophy","title":"Investment modes","text":"","category":"section"},{"location":"manual/philosophy/","page":"Philosophy","title":"Philosophy","text":"Investment modes are different approaches for implementing investments in technologies. They are explained in detail in Investment Types. EnergyModelsInvestments allows for different investment modes for technologies, both for different technologies, but also for the same technology implemented through different instances.","category":"page"},{"location":"manual/philosophy/","page":"Philosophy","title":"Philosophy","text":"Different technologies require different descriptions of the investments. Consider as an example a wind turbine within a model describing a country as single region. An onshore wind turbine has a maximum capacity of around 6 MW, depending on the available infrastructure for transporting the blades. If the total investments in wind turbines are in the GW scale, it is possible to model the wind turbines as continuous investments. A natural gas reforming plant with CCS behaves in this situation differently. Chemical processes experience in practice significant economy of scales up to a maximum capacity. Hence, it is in this situation beneficial to use discrete or semi-continuous investments for a natural gas reforming plant.","category":"page"},{"location":"manual/philosophy/","page":"Philosophy","title":"Philosophy","text":"It can however be also useful to use differing investment modes for the same technology in different regions. Consider again the wind turbine. If a second region allows as well for wind turbine investments, however at significantly reduced size, it can be beneficial in this region to apply discrete investments or alternatively, if the region corresponds to an offshore field, semi-continuous investments to account for economy of scales and minimum invested capacities.","category":"page"},{"location":"manual/philosophy/","page":"Philosophy","title":"Philosophy","text":"Allowing for differing investment modes results in a reduction in the computational demand while simultaneously allowing for improved description of certain technologies.","category":"page"},{"location":"manual/philosophy/#man-phil-life_mode","page":"Philosophy","title":"Lifetime modes","text":"","category":"section"},{"location":"manual/philosophy/","page":"Philosophy","title":"Philosophy","text":"Lifetime modes can be used for describing how the lifetime of a technology should be handled. In practice, models either do not consider the lifetime, include annualized costs for each year, or use the total costs with a potential final value, if the technology still has a remaining lifetime at the end of the optimizaztion horizon. EnergyModelsInvestments allows to choose as well differing lifetime modes for the individual technologies.","category":"page"},{"location":"manual/philosophy/#man-phil-EMB_ext","page":"Philosophy","title":"As extension to EnergyModelsBase","text":"","category":"section"},{"location":"manual/philosophy/","page":"Philosophy","title":"Philosophy","text":"An example on the application of EnergyModelsInvestments is given by the EMIEXt in EnergyModelsBase which provides an operational model with the potential for investments. The extension is achieved through providing a new InvestmentModel which is subsequently used for dispatching on several core functions within EnergyModelsBase. Hence, its application does not require any changes to the model itself. This corresponds to the 3ʳᵈ bullet point in the list of Extensions to the model.","category":"page"},{"location":"manual/philosophy/","page":"Philosophy","title":"Philosophy","text":"Specifically, the extensions provides three new functions to EnergyModelsBase:","category":"page"},{"location":"manual/philosophy/","page":"Philosophy","title":"Philosophy","text":"a new calculation of the objective function including the capital expenses,\na new method for the CAPEX variables which creates the required variables, and\na new method for provding the bounds on the installed capacities.","category":"page"},{"location":"manual/NEWS/#Release-notes","page":"Release notes","title":"Release notes","text":"","category":"section"},{"location":"manual/NEWS/#Version-0.8.1-(2024-10-24)","page":"Release notes","title":"Version 0.8.1 (2024-10-24)","text":"","category":"section"},{"location":"manual/NEWS/#Bugfix-RollingLife","page":"Release notes","title":"Bugfix RollingLife","text":"","category":"section"},{"location":"manual/NEWS/","page":"Release notes","title":"Release notes","text":"The lifetime mode RollingLife experienced problems in situations in which investments of multiple investment periods should be retired in the same investment period.\nIn this situation, we did not calculate the minimum removal correctly.\nThis is fixed and a test included to identify these problems in future iterations.","category":"page"},{"location":"manual/NEWS/#Version-0.8.0-(2024-10-16)","page":"Release notes","title":"Version 0.8.0 (2024-10-16)","text":"","category":"section"},{"location":"manual/NEWS/#Rework-of-initial-capacities","page":"Release notes","title":"Rework of initial capacities","text":"","category":"section"},{"location":"manual/NEWS/","page":"Release notes","title":"Release notes","text":"Implemented potential for decreasing initial capacities.\nThis resulted in changes for BinaryInvestment and FixedInvestment in which the provided capacity fields come in addition to the existing capacities. This allows for a reduction in the initial capacity.","category":"page"},{"location":"manual/NEWS/#Rework-of-tests","page":"Release notes","title":"Rework of tests","text":"","category":"section"},{"location":"manual/NEWS/","page":"Release notes","title":"Release notes","text":"The dependency of the tests from EnergyModelsBase was removed to avoid a hen-egg problem regarding registering.\nThe tests were furthermore reworked to test all potential combinations.","category":"page"},{"location":"manual/NEWS/#Bugfixes","page":"Release notes","title":"Bugfixes","text":"","category":"section"},{"location":"manual/NEWS/","page":"Release notes","title":"Release notes","text":"Fixed bugs when the lifetime of a RollingLife technology was shorter or equal to the duration of a strategic period.","category":"page"},{"location":"manual/NEWS/#Rework-of-documentation","page":"Release notes","title":"Rework of documentation","text":"","category":"section"},{"location":"manual/NEWS/","page":"Release notes","title":"Release notes","text":"Restructured both the public and internal libraries.\nUpdated the docstrings to simplify the understanding of the different functions.","category":"page"},{"location":"manual/NEWS/#Other","page":"Release notes","title":"Other","text":"","category":"section"},{"location":"manual/NEWS/","page":"Release notes","title":"Release notes","text":"Adjusted to changes in internal types of Version 0.9 of TimeStruct.","category":"page"},{"location":"manual/NEWS/#Version-0.7.1-(2024-08-26)","page":"Release notes","title":"Version 0.7.1 (2024-08-26)","text":"","category":"section"},{"location":"manual/NEWS/","page":"Release notes","title":"Release notes","text":"Bugfix in RollingLife in a situation, in which the duration of a strategic period equals the lifetime of the technology. A test was added to avoid this type of problem in the future","category":"page"},{"location":"manual/NEWS/#Version-0.7.0-(2024-08-20)","page":"Release notes","title":"Version 0.7.0 (2024-08-20)","text":"","category":"section"},{"location":"manual/NEWS/#Making-EnergyModelsInvestments-independent-of-EnergyModelsBase","page":"Release notes","title":"Making EnergyModelsInvestments independent of EnergyModelsBase","text":"","category":"section"},{"location":"manual/NEWS/","page":"Release notes","title":"Release notes","text":"Version 0.6 of EMI provided the base for making EMI independent of EMB.\nThis approach was now utilized for moving all EMB specific functions to an extension of EMB.\nIn the new version, EMI can be used in any model with investments, given that some functions are provided by the developer of said models.","category":"page"},{"location":"manual/NEWS/#Other-2","page":"Release notes","title":"Other","text":"","category":"section"},{"location":"manual/NEWS/","page":"Release notes","title":"Release notes","text":"Use dev version of EMI for examples when running as part of tests, similar to PR #33 of EMB.","category":"page"},{"location":"manual/NEWS/#Version-0.6.0-(2024-05-24)","page":"Release notes","title":"Version 0.6.0 (2024-05-24)","text":"","category":"section"},{"location":"manual/NEWS/#Changes-in-handling-of-investments","page":"Release notes","title":"Changes in handling of investments","text":"","category":"section"},{"location":"manual/NEWS/","page":"Release notes","title":"Release notes","text":"Allow investments in all Storage capacities introduced in EnergyModelsBase v0.6 through new type StorageInvData.\nChanged the structure of investment data to prepare for making EnergyModelsInvestments independent from EnergyModelsBase.\nUtilize now the same functions for investment in all type of Nodes and TransmissionModes.\nUtilize the same type (SingleInvData) for investment data in all type of Nodes (except Storage) and TransmissionModes.\nMoved parameters that are investment mode specific as fields to the investment mode.\nAllow for semi-continuous offset investments for Nodes.","category":"page"},{"location":"manual/NEWS/#Version-0.5.5-(2024-05-02)","page":"Release notes","title":"Version 0.5.5 (2024-05-02)","text":"","category":"section"},{"location":"manual/NEWS/#Bugfix","page":"Release notes","title":"Bugfix","text":"","category":"section"},{"location":"manual/NEWS/","page":"Release notes","title":"Release notes","text":"Fixed two bugs in the calculation of the OPEX contribution to the objective function for TransmissionMode:\nSwitched to average discounting and\nAdded the multiplication of the OPEX contribution with duration(t_inv) to account for varying lengths of strategic periods.","category":"page"},{"location":"manual/NEWS/#Miscellaneous","page":"Release notes","title":"Miscellaneous","text":"","category":"section"},{"location":"manual/NEWS/","page":"Release notes","title":"Release notes","text":"Updated a link in the documentation for the examples.\nProvided a contribution section in the documentation.","category":"page"},{"location":"manual/NEWS/#Version-0.5.4-(2024-03-21)","page":"Release notes","title":"Version 0.5.4 (2024-03-21)","text":"","category":"section"},{"location":"manual/NEWS/#Checks","page":"Release notes","title":"Checks","text":"","category":"section"},{"location":"manual/NEWS/","page":"Release notes","title":"Release notes","text":"Adjusted function EMB.check_node_data to changed method call in EnergyModelsBase.\nAllow for jumping over the check regarding the StrategicProfile structure in InvData and InvDataStorage with a conditional argument. The other checks regarding the profiles remain unchanged as a wrong TimeProfile there would lead to an error within TimeStruct.\nMoved the checks for strategic indexing to EnergyModelsBase.","category":"page"},{"location":"manual/NEWS/#Bugfix-2","page":"Release notes","title":"Bugfix","text":"","category":"section"},{"location":"manual/NEWS/","page":"Release notes","title":"Release notes","text":"Fixed a bug for the function start_cap in EMIGeoExt, where there could be ambiguity with the function start_cap in EnergyModelsInvestments.","category":"page"},{"location":"manual/NEWS/#Version-0.5.3-(2024-03-06)","page":"Release notes","title":"Version 0.5.3 (2024-03-06)","text":"","category":"section"},{"location":"manual/NEWS/#Examples","page":"Release notes","title":"Examples","text":"","category":"section"},{"location":"manual/NEWS/","page":"Release notes","title":"Release notes","text":"Fixed a bug when running the examples from a non-cloned version of EnergyModelsInvestments.\nThis was achieved through a separate Project.toml in the examples.","category":"page"},{"location":"manual/NEWS/#Bugfixes-2","page":"Release notes","title":"Bugfixes","text":"","category":"section"},{"location":"manual/NEWS/","page":"Release notes","title":"Release notes","text":"Fixed a bug for semi-continuous investments for Storage nodes. Now it is possible using this InvestmentMode to only invest in storage capacity or storage rate.\nFixed a bug for method ambiguity when Storage nodes use DiscreteInvestment.","category":"page"},{"location":"manual/NEWS/#Checks-2","page":"Release notes","title":"Checks","text":"","category":"section"},{"location":"manual/NEWS/","page":"Release notes","title":"Release notes","text":"Updated the check systems based on changes introduced in EnergyModelsBase v 0.6.6.\nIncluded tests for all checks to be certain that the checks are providing the required output.","category":"page"},{"location":"manual/NEWS/#Tests","page":"Release notes","title":"Tests","text":"","category":"section"},{"location":"manual/NEWS/","page":"Release notes","title":"Release notes","text":"Restructured the test folder and the individual tests.\nAdded tests for Storage investment.","category":"page"},{"location":"manual/NEWS/#Minor-changes","page":"Release notes","title":"Minor changes","text":"","category":"section"},{"location":"manual/NEWS/","page":"Release notes","title":"Release notes","text":"Moved EMIGeoExt to a separate folder within the extension folder.","category":"page"},{"location":"manual/NEWS/#Version-0.5.2-(2024-02-15)","page":"Release notes","title":"Version 0.5.2 (2024-02-15)","text":"","category":"section"},{"location":"manual/NEWS/#Bugfix-3","page":"Release notes","title":"Bugfix","text":"","category":"section"},{"location":"manual/NEWS/","page":"Release notes","title":"Release notes","text":"Fixed the function for extracting the field capex_trans_offset in TransInvData.","category":"page"},{"location":"manual/NEWS/#Version-0.5.1-(2024-01-17)","page":"Release notes","title":"Version 0.5.1 (2024-01-17)","text":"","category":"section"},{"location":"manual/NEWS/#Feature","page":"Release notes","title":"Feature","text":"","category":"section"},{"location":"manual/NEWS/","page":"Release notes","title":"Release notes","text":"Added the JuMP model m and modeltype as arguments to the start-capacity methods.","category":"page"},{"location":"manual/NEWS/#Version-0.5.0-(2023-12-19)","page":"Release notes","title":"Version 0.5.0 (2023-12-19)","text":"","category":"section"},{"location":"manual/NEWS/#Adjustment","page":"Release notes","title":"Adjustment","text":"","category":"section"},{"location":"manual/NEWS/","page":"Release notes","title":"Release notes","text":"Adjusted to changes in EnergyModelsBase v0.6. These changes are mainly:","category":"page"},{"location":"manual/NEWS/","page":"Release notes","title":"Release notes","text":"All fields of composite types are now lower case.\nAn extensive number of functions to access the individual fields were included, allowing for differing definitions of the individual nodes.","category":"page"},{"location":"manual/NEWS/","page":"Release notes","title":"Release notes","text":"In addition this version includes:","category":"page"},{"location":"manual/NEWS/","page":"Release notes","title":"Release notes","text":"A rewriting of the calculation of the objective function.","category":"page"},{"location":"manual/NEWS/#Version-0.4.6-(2023-11-23)","page":"Release notes","title":"Version 0.4.6 (2023-11-23)","text":"","category":"section"},{"location":"manual/NEWS/#Bugfix-4","page":"Release notes","title":"Bugfix","text":"","category":"section"},{"location":"manual/NEWS/","page":"Release notes","title":"Release notes","text":"Added investment period duration multiplication for emissions prices.","category":"page"},{"location":"manual/NEWS/#Version-0.4.5-(2023-10-24)","page":"Release notes","title":"Version 0.4.5 (2023-10-24)","text":"","category":"section"},{"location":"manual/NEWS/#Bugfix-5","page":"Release notes","title":"Bugfix","text":"","category":"section"},{"location":"manual/NEWS/","page":"Release notes","title":"Release notes","text":"Include opex for transmission modes without investments.","category":"page"},{"location":"manual/NEWS/#Version-0.4.4-(2023-09-15)","page":"Release notes","title":"Version 0.4.4 (2023-09-15)","text":"","category":"section"},{"location":"manual/NEWS/#Bugfix-6","page":"Release notes","title":"Bugfix","text":"","category":"section"},{"location":"manual/NEWS/","page":"Release notes","title":"Release notes","text":"Use correct index on parameter values.","category":"page"},{"location":"manual/NEWS/#Version-0.4.3-(2023-09-08)","page":"Release notes","title":"Version 0.4.3 (2023-09-08)","text":"","category":"section"},{"location":"manual/NEWS/#Bugfix-7","page":"Release notes","title":"Bugfix","text":"","category":"section"},{"location":"manual/NEWS/","page":"Release notes","title":"Release notes","text":"Bugfix from v0.4.1 RollingLife was reverted due to rebasing in v0.4.2. This was fixed.","category":"page"},{"location":"manual/NEWS/#Version-0.4.2-(2023-08-24)","page":"Release notes","title":"Version 0.4.2 (2023-08-24)","text":"","category":"section"},{"location":"manual/NEWS/#Changes-in-discounting","page":"Release notes","title":"Changes in discounting","text":"","category":"section"},{"location":"manual/NEWS/","page":"Release notes","title":"Release notes","text":"Previously, strategic periods were discounted using the start year for both OPEX and CAPEX.\nThis was changed for OPEX and emission cost calculations to account for longer strategic periods.","category":"page"},{"location":"manual/NEWS/#Version-0.4.1-(2023-08-02)","page":"Release notes","title":"Version 0.4.1 (2023-08-02)","text":"","category":"section"},{"location":"manual/NEWS/#Bugfix-8","page":"Release notes","title":"Bugfix","text":"","category":"section"},{"location":"manual/NEWS/","page":"Release notes","title":"Release notes","text":"Included calling of strategic_periods in ::RollingLife which was missing.","category":"page"},{"location":"manual/NEWS/#Version-0.4.0-(2023-06-06)","page":"Release notes","title":"Version 0.4.0 (2023-06-06)","text":"","category":"section"},{"location":"manual/NEWS/#Switch-to-TimeStruct.jl","page":"Release notes","title":"Switch to TimeStruct.jl","text":"","category":"section"},{"location":"manual/NEWS/","page":"Release notes","title":"Release notes","text":"Switched the time structure representation to TimeStruct\nTimeStruct is implemented with only the basis features that were available in TimeStructures, This implies that neither operational nor strategic uncertainty is included in the model.","category":"page"},{"location":"manual/NEWS/#Version-0.3.2-(2023-06-01)","page":"Release notes","title":"Version 0.3.2 (2023-06-01)","text":"","category":"section"},{"location":"manual/NEWS/","page":"Release notes","title":"Release notes","text":"Bugfix related to FixedInvestment.","category":"page"},{"location":"manual/NEWS/#Version-0.3.1-(2023-06-01)","page":"Release notes","title":"Version 0.3.1 (2023-06-01)","text":"","category":"section"},{"location":"manual/NEWS/","page":"Release notes","title":"Release notes","text":"Added dispatch on has_investment in the extension instead of defining a new, local function.","category":"page"},{"location":"manual/NEWS/#Version-0.3.0-(2023-05-xx)","page":"Release notes","title":"Version 0.3.0 (2023-05-xx)","text":"","category":"section"},{"location":"manual/NEWS/","page":"Release notes","title":"Release notes","text":"Adjustment to changes in EnergyModelsBase v0.4.0 and EnergyModelsGeography v 0.6.0.\nThe new filter method for data can be used as example for subsequent usage of Array{Data}.\nMigrate from Requires.jl to support for weak dependencies in julia v1.9.","category":"page"},{"location":"manual/NEWS/#Version-0.2.8-(2023-05-15)","page":"Release notes","title":"Version 0.2.8 (2023-05-15)","text":"","category":"section"},{"location":"manual/NEWS/","page":"Release notes","title":"Release notes","text":"Fixed a bug that could lead to method ambiguity errors when a subtype of Storage required additional variables. This solution results in significant changes regarding where and how variables and constraints are declared.","category":"page"},{"location":"manual/NEWS/#Version-0.2.7-(2023-04-27)","page":"Release notes","title":"Version 0.2.7 (2023-04-27)","text":"","category":"section"},{"location":"manual/NEWS/","page":"Release notes","title":"Release notes","text":"Requirements changed to ^0.5.0 for EnergyModelsGeography.","category":"page"},{"location":"manual/NEWS/#Version-0.2.6-(2023-04-24)","page":"Release notes","title":"Version 0.2.6 (2023-04-24)","text":"","category":"section"},{"location":"manual/NEWS/","page":"Release notes","title":"Release notes","text":"Introduction of abstract type InvestmentData as subtype of Data to dispatch specifically on data related to investments.\nChanges in the individual utility functions for improved utilization of the multiple dispatch.","category":"page"},{"location":"manual/NEWS/#Version-0.2.5-(2023-04-18)","page":"Release notes","title":"Version 0.2.5 (2023-04-18)","text":"","category":"section"},{"location":"manual/NEWS/","page":"Release notes","title":"Release notes","text":"Bugfix related to constraint on cap_use,  stor_rate_use, and stor_level:\nThe variables are constrained using the function constraints_capacity and in addition in constraints_capacity_invest and constraints_storage_invest with the latter constraint being inconsistent for Sink nodes.\nThe constraint in EnergyModelsInvestments was therefore removed.","category":"page"},{"location":"manual/NEWS/#Version-0.2.4-(2023-03-31)","page":"Release notes","title":"Version 0.2.4 (2023-03-31)","text":"","category":"section"},{"location":"manual/NEWS/","page":"Release notes","title":"Release notes","text":"Removal of type ContinuousFixedInvestment as this can be represented with ContinuousInvestment and Cap_max_add limited to a given period.\nIntroduction of abstract type SemiContiInvestment and composite type SemiContinuousOffsetInvestment to introduce semi-continuous investments in which the cost function has an offset. This is only included for Transmission in the first step.","category":"page"},{"location":"manual/NEWS/#Version-0.2.3-(2023-03-20)","page":"Release notes","title":"Version 0.2.3 (2023-03-20)","text":"","category":"section"},{"location":"manual/NEWS/","page":"Release notes","title":"Release notes","text":"Adjustments in tests and functions to changes introduced in EnergyModelsGeography version 0.4.0.","category":"page"},{"location":"manual/NEWS/#Version-0.2.2-(2023-02-17)","page":"Release notes","title":"Version 0.2.2 (2023-02-17)","text":"","category":"section"},{"location":"manual/NEWS/","page":"Release notes","title":"Release notes","text":"Adjustments in tests and functions to changes introduced in EnergyModelsGeography version 0.3.1.","category":"page"},{"location":"manual/NEWS/#Version-0.2.1-(2023-02-06)","page":"Release notes","title":"Version 0.2.1 (2023-02-06)","text":"","category":"section"},{"location":"manual/NEWS/","page":"Release notes","title":"Release notes","text":"Renaming of investment modes:\nRename DiscreteInvestment to BinaryInvestment.\nRename IntegerInvestment to DiscreteInvestment.","category":"page"},{"location":"manual/NEWS/#Version-0.2.0-(2023-02-03)","page":"Release notes","title":"Version 0.2.0 (2023-02-03)","text":"","category":"section"},{"location":"manual/NEWS/#Adjustmends-to-updates-in-EnergyModelsBase","page":"Release notes","title":"Adjustmends to updates in EnergyModelsBase","text":"","category":"section"},{"location":"manual/NEWS/","page":"Release notes","title":"Release notes","text":"Adjustment to version 0.3.0, namely:","category":"page"},{"location":"manual/NEWS/","page":"Release notes","title":"Release notes","text":"Changed type (Node) calls in tests to be consistent with version 0.3.0.\nChanged call of function for the creation of Storage variables.\nRemoval of the type GlobalData and replacement with fields in the type InvestmentModel in all tests.","category":"page"},{"location":"manual/NEWS/#Version-0.1.5-(2022-12-12)","page":"Release notes","title":"Version 0.1.5 (2022-12-12)","text":"","category":"section"},{"location":"manual/NEWS/#Internal-release","page":"Release notes","title":"Internal release","text":"","category":"section"},{"location":"manual/NEWS/","page":"Release notes","title":"Release notes","text":"Update Readme.","category":"page"},{"location":"manual/NEWS/#Version-0.1.4-(2022-12-09)","page":"Release notes","title":"Version 0.1.4 (2022-12-09)","text":"","category":"section"},{"location":"manual/NEWS/#Changes-in-naming","page":"Release notes","title":"Changes in naming","text":"","category":"section"},{"location":"manual/NEWS/","page":"Release notes","title":"Release notes","text":"Renamed dictionary keys from EnergyModelsInvestments to Investments.","category":"page"},{"location":"manual/NEWS/#Version-0.1.3-(2022-30-11)","page":"Release notes","title":"Version 0.1.3 (2022-30-11)","text":"","category":"section"},{"location":"manual/NEWS/#Renamed-to-EnergyModelsInvestments","page":"Release notes","title":"Renamed to EnergyModelsInvestments","text":"","category":"section"},{"location":"manual/NEWS/","page":"Release notes","title":"Release notes","text":"Renamed for more internally consistent package names.","category":"page"},{"location":"manual/NEWS/#Version-0.1.2-(2021-09-07)","page":"Release notes","title":"Version 0.1.2 (2021-09-07)","text":"","category":"section"},{"location":"manual/NEWS/#Changes-in-naming-2","page":"Release notes","title":"Changes in naming","text":"","category":"section"},{"location":"manual/NEWS/","page":"Release notes","title":"Release notes","text":"Major changes in both variable and parameter naming, check the commit message for an overview.","category":"page"},{"location":"manual/NEWS/#Version-0.1.1-(2021-08-20)","page":"Release notes","title":"Version 0.1.1 (2021-08-20)","text":"","category":"section"},{"location":"manual/NEWS/","page":"Release notes","title":"Release notes","text":"Inclusion for investment in storage (energy).\nChanges to the datastructures.","category":"page"},{"location":"manual/NEWS/#Version-0.1.0-(2021-07-06)","page":"Release notes","title":"Version 0.1.0 (2021-07-06)","text":"","category":"section"},{"location":"manual/NEWS/","page":"Release notes","title":"Release notes","text":"Initial version.\nInclusion of discounting.","category":"page"},{"location":"#EnergyModelsInvestments","page":"Home","title":"EnergyModelsInvestments","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"This Julia package provides the description of different investment options for energy system models. Initially, it was an extension package to the operational, multi carrier energy model EnergyModelsBase with an additional extension for geographical investments if EnergyModelsGeography was used.","category":"page"},{"location":"","page":"Home","title":"Home","text":"However, since Version 0.7, EnergyModelsInvestments can be used independently from EnergyModelsBase to provide different investment options to existing energy system models written in JuMP. In this case, EnergyModelsInvestments provides a mathematical formulation for both different investement modes (e.g., discrete investments or semi-continuous investments) and lifetime modes (e.g., for the whole study period or only for a limitid number of years). A detailed description on how you can use EnergyModelsInvestments can be found in Use EnergyModelsInvestments.","category":"page"},{"location":"","page":"Home","title":"Home","text":"info: Info\nThe documentation is currently in the transition from the case in which EnergyModelsInvestments was an extension of EnergyModelsBase. Hence, we do not provide as many links to the individual types and how to apply EnergyModelsInvestments as we plan for in the near future.","category":"page"},{"location":"","page":"Home","title":"Home","text":"EnergyModelsInvestments","category":"page"},{"location":"#EnergyModelsInvestments","page":"Home","title":"EnergyModelsInvestments","text":"Main module for EnergyModelsInvestments.\n\nThis module implements functionalities allowing to run investment analysis for EnergyModelsX system optimization models.\n\nEnergyModelsInvestments cannot be used as stand-alone model. Instead, it extends existing models and simplifies the incorporation of investment decisions. It can be used to any JuMP model as long as certain functions are declared. One example is given by EnergyModelsBase.\n\n\n\n\n\n","category":"module"},{"location":"","page":"Home","title":"Home","text":"EnergyModelsInvestments follows the same philosophy with respect to extendibility as EnergyModelsBase. Its aim is to allow the user to come up with new ideas to include investments without major changes to the core structure.","category":"page"},{"location":"#Manual-outline","page":"Home","title":"Manual outline","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Pages = [\n    \"manual/quick-start.md\",\n    \"manual/philosophy.md\",\n    \"manual/optimization-variables.md\",\n    \"manual/simple-example.md\",\n]\nDepth = 1","category":"page"},{"location":"#How-to-guides","page":"Home","title":"How to guides","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Pages = [\n    \"how-to/update-models.md\",\n    \"how-to/use-emi.md\",\n    \"how-to/contribute.md\",\n]\nDepth = 1","category":"page"},{"location":"#Library-outline","page":"Home","title":"Library outline","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Pages = [\n    \"library/public.md\",\n    \"library/internals.md\"\n]\nDepth = 1","category":"page"},{"location":"library/public/#lib-pub","page":"Public","title":"Public interface","text":"","category":"section"},{"location":"library/public/#lib-pub-data","page":"Public","title":"Additional Data for Investments","text":"","category":"section"},{"location":"library/public/#lib-pub-data-abstract","page":"Public","title":"General type structure","text":"","category":"section"},{"location":"library/public/","page":"Public","title":"Public","text":"Additional data for investment is specified when creating the nodes through subtypes of the type AbstractInvData.","category":"page"},{"location":"library/public/","page":"Public","title":"Public","text":"AbstractInvData","category":"page"},{"location":"library/public/#EnergyModelsInvestments.AbstractInvData","page":"Public","title":"EnergyModelsInvestments.AbstractInvData","text":"AbstractInvData\n\nSupertype for investment data for nodal investments.\n\n\n\n\n\n","category":"type"},{"location":"library/public/","page":"Public","title":"Public","text":"This additional data is node specific, not technology specific. It is hence possible to provide different values for the same technology through different instances of said technology. EnergyModelsInvestments provides two subtypes for AbstractInvData, NoStartInvData and StartInvData as explained in the following subsection.","category":"page"},{"location":"library/public/","page":"Public","title":"Public","text":"It is also possible to create new subtypes with changing parameters.","category":"page"},{"location":"library/public/","page":"Public","title":"Public","text":"warning: Introducing new subtypes\nIf you introduce new subtypes to AbstractInvData, it is necessary that you either incorporate the fields outlined in the following subsection with the same names, or alternatively declare methods for the functions investment_mode, EMI.lifetime_mode, EMI.lifetime, EMI.max_installed, EMI.capex, and EMI.capex_offset for the new type.","category":"page"},{"location":"library/public/#lib-pub-data-conc","page":"Public","title":"AbstractInvData subtypes","text":"","category":"section"},{"location":"library/public/","page":"Public","title":"Public","text":"AbstractInvData subtypes area used to add the required investment data to the individual technology capacities.","category":"page"},{"location":"library/public/","page":"Public","title":"Public","text":"The following fields have to be added for all provided types:","category":"page"},{"location":"library/public/","page":"Public","title":"Public","text":"capex::TimeProfile: Capital expenditures (CAPEX) of the Node. The capital expenditures are relative to the capacity. Hence, it is important to consider the unit for both costs and the energy of the technology. The total contribution to the objective function y is then given through the equation y = textttcapex times x where x corresponds to the invested capacity.\nmax_inst::TimeProfile: Maximum installed capacity of the Node. The maximum installed capacity is limiting the total installed capacity of the Node. It is possible to have different values for different Nodes representing the same technology. This can be useful for, e.g., the potential for wind power in different regions.\ninv_mode::Investment: Investment mode of the Node. The individual investment modes are explained in detail in Investment types.\nlife_mode::LifetimeMode: Lifetime mode of the Node. The lifetime mode is describing how the lifetime of the node is implemented. This includes as well final values and retiring of the individual technologies. The default value is UnlimitedLife. More information can be found in LifetimeMode.","category":"page"},{"location":"library/public/","page":"Public","title":"Public","text":"The type StartInvData allows in addition for providing the initial capacity in the first year through:","category":"page"},{"location":"library/public/","page":"Public","title":"Public","text":"initial::Real: Starting capacity of the technology in the first investment period. The starting capacity is only valid for the first investment period. This capacity will remain present in the simulation horizon, except if retiring is desired by the model. It is not possible to provide a reducing capacity over time for the initial capacity.","category":"page"},{"location":"library/public/","page":"Public","title":"Public","text":"while it utilizes the capacity of the technology if the value is not provided through the function EMI.start_cap.","category":"page"},{"location":"library/public/","page":"Public","title":"Public","text":"warning: Warning\nIf you do not use StartInvData, you have to provide the function EMI.start_cap for your type. Otherwise, EnergyModelsInvestments is not able to deduce the starting capcity.","category":"page"},{"location":"library/public/","page":"Public","title":"Public","text":"AbstractInvData types have constructors that allow omitting the last field, life_mode.","category":"page"},{"location":"library/public/","page":"Public","title":"Public","text":"warning: Warning\nAll fields that are provided as TimeProfile are accessed in strategic periods. This implies that the provided TimeProfiles are not allowed to have any variations below strategic periods through, e.g. the application of OperationalProfile or RepresentativeProfile. EnergyModelsBase provides explicit checks for the time profiles which is a beneficial approach if you use EnergyModelsInvestments without EnergyModelsBase.","category":"page"},{"location":"library/public/","page":"Public","title":"Public","text":"NoStartInvData\nStartInvData","category":"page"},{"location":"library/public/#EnergyModelsInvestments.NoStartInvData","page":"Public","title":"EnergyModelsInvestments.NoStartInvData","text":"NoStartInvData <: AbstractInvData\n\nInvestment data in which the initial capacity is not specified in the AbstractInvData. Instead, the initial capacity is inferred  from the capacity of the technology through the function start_cap(element, t_inv, inv_data::AbstractInvData, cap).\n\nFields\n\ncapex::TimeProfile is the capital costs for investing in a capacity. The value is relative to the added capacity.\nmax_inst::TimeProfile is the maximum installed capacity in an investment period.\ninv_mode::Investment is the chosen investment mode for the technology. The following investment modes are currently available: BinaryInvestment, DiscreteInvestment, ContinuousInvestment, SemiContinuousInvestment or FixedInvestment.\nlife_mode::LifetimeMode is type of handling the lifetime. Several different alternatives can be used: UnlimitedLife, StudyLife, PeriodLife or RollingLife.\n\n\n\n\n\n","category":"type"},{"location":"library/public/#EnergyModelsInvestments.StartInvData","page":"Public","title":"EnergyModelsInvestments.StartInvData","text":"StartInvData <: AbstractInvData\n\nInvestment data in which the initial capacity is specified in the AbstractInvData. The structure is similiar to NoStartInvData with the addition of the field initial::TimeProfile, see below.\n\nFields in addition to NoStartInvData\n\ninitial::TimeProfile is the initial capacity as TimeProfile. Retirement of the initial capacity can be achieved through a decreasing capacity.\n\n\n\n\n\n","category":"type"},{"location":"library/public/#lib-pub-data-func","page":"Public","title":"Additional functions","text":"","category":"section"},{"location":"library/public/","page":"Public","title":"Public","text":"EnergyModelsInvestments provides additional functions for extracting field informations from the investment data:","category":"page"},{"location":"library/public/","page":"Public","title":"Public","text":"investment_mode","category":"page"},{"location":"library/public/#EnergyModelsInvestments.investment_mode","page":"Public","title":"EnergyModelsInvestments.investment_mode","text":"investment_mode(inv_data::AbstractInvData)\n\nReturn the investment mode of the investment data inv_data. By default, all investments are continuous.\n\n\n\n\n\n","category":"function"},{"location":"library/public/","page":"Public","title":"Public","text":"In addition, it provides shell functions that can be used by the user for identifying nodes with investments or extracting the investments from a given element:","category":"page"},{"location":"library/public/","page":"Public","title":"Public","text":"has_investment\ninvestment_data","category":"page"},{"location":"library/public/#EnergyModelsInvestments.has_investment","page":"Public","title":"EnergyModelsInvestments.has_investment","text":"has_investment(element)\n\nReturn boolean indicating whether an element shall have variables and constraints constructed for investments.\n\nThe default implementation does not have an associated method. Instead, it is only used for dispatch in other packages.\n\n\n\n\n\n","category":"function"},{"location":"library/public/#EnergyModelsInvestments.investment_data","page":"Public","title":"EnergyModelsInvestments.investment_data","text":"investment_data(element)\n\nReturn the investment data of the element.\n\nThe default implementation results in an error as this function requires an additional method for the individual elements.\n\n\n\n\n\n","category":"function"},{"location":"library/public/","page":"Public","title":"Public","text":"These shell functions are not directly used by EnergyModelsInvestments, but can be useful.","category":"page"},{"location":"library/public/#lib-pub-inv_mode","page":"Public","title":"Investment modes","text":"","category":"section"},{"location":"library/public/","page":"Public","title":"Public","text":"Different investment modes are available to help represent different situations. The investment mode is included in the field inv_mode in NoStartInvData and StartInvData. The investment mode determines how the model can invest and which constraints are imposed on the investments.","category":"page"},{"location":"library/public/#lib-pub-inv_mode-fields","page":"Public","title":"Potential fields in investment modes","text":"","category":"section"},{"location":"library/public/","page":"Public","title":"Public","text":"Investment modes are including the required fields. These fields are given below with a detailed description in the individual subsections.","category":"page"},{"location":"library/public/","page":"Public","title":"Public","text":"max_add::TimeProfile: The maximum added capacity in an investment period. The maximum added capacity is providing the limit on how fast we can expend a given technology in a investment period. In general, this value is dependent on the potential construction time and how fast it is possible to build a technology. It is introduced for ContinuousInvestment and SemiContiInvestment modes.\nmin_add::TimeProfile: The minimum added capacity in an investment period. The minimum added capacity is providing the lower limit on investments in an investment period. Its meaning changes, dependent on the chosen investment mode. It is introduced for ContinuousInvestment and SemiContiInvestment modes.\ncapex_offset::TimeProfile: CAPEX offset for the SemiContinuousOffsetInvestment mode. The offset can be best described with the equation y = textttcapex times x + textttcapex_offset where x corresponds to the invested capacity and y to the total capital cost.\ncap_increment::TimeProfile: Increment in the case of DiscreteInvestment. The increment corresponds to the potential increase in the case of DiscreteInvestment.","category":"page"},{"location":"library/public/#Investment","page":"Public","title":"Investment","text":"","category":"section"},{"location":"library/public/","page":"Public","title":"Public","text":"Investment is the abstract supertype for all investment modes. It is used to allow for a simple extension of the potential investment modes. It is also possible for the user to define new investment modes without major changes to the core structure through specifying a new subtype of Investment.","category":"page"},{"location":"library/public/","page":"Public","title":"Public","text":"Investment","category":"page"},{"location":"library/public/#EnergyModelsInvestments.Investment","page":"Public","title":"EnergyModelsInvestments.Investment","text":"Investment\n\nInvestment type traits for nodes. The investment type corresponds to the chosen investment mode and includes the required input.\n\n\n\n\n\n","category":"type"},{"location":"library/public/#ContinuousInvestment","page":"Public","title":"ContinuousInvestment","text":"","category":"section"},{"location":"library/public/","page":"Public","title":"Public","text":"ContinuousInvestment is the default investment option for all investments, if no alternative is chosen. Continuous investments implies that you can invest in any capacity specified between min_add and max_add. This implies as well that, if min_add is specified, it is necessary to invest in every investment period in at least this capacity. This approach is the standard approach in large energy system models as it avoids binary variables. However, it may lead to nonsensical solutions, e.g., investments into a 10~MW nuclear power plant.","category":"page"},{"location":"library/public/","page":"Public","title":"Public","text":"warning: Warning\nDefining min_add::TimeProfile for this mode of investment will lead to a forced investment of at least min_add in each period.","category":"page"},{"location":"library/public/","page":"Public","title":"Public","text":"ContinuousInvestment","category":"page"},{"location":"library/public/#EnergyModelsInvestments.ContinuousInvestment","page":"Public","title":"EnergyModelsInvestments.ContinuousInvestment","text":"ContinuousInvestment <: Investment\n\nContinuous investment between a lower and upper bound.\n\nFields\n\nmin_add::TimeProfile is the minimum added capacity in an investment period. In the case of ContinuousInvestment, this implies that the model must invest at least in this capacity in each investment period.\nmax_add::TimeProfile is the maximum added capacity in an investment period.\n\n\n\n\n\n","category":"type"},{"location":"library/public/#BinaryInvestment","page":"Public","title":"BinaryInvestment","text":"","category":"section"},{"location":"library/public/","page":"Public","title":"Public","text":"BinaryInvestment implies that one can choose to invest to achieve the specified capacity in the given investment period, or not. The capacity of the investment cannot be adjusted by the optimization.","category":"page"},{"location":"library/public/","page":"Public","title":"Public","text":"warning: Warning\nThis investment type leads to the addition of binary variables. The number of binary variables is equal to the number of strategic periods times the number of Nodes with the BinaryInvestment mode.","category":"page"},{"location":"library/public/","page":"Public","title":"Public","text":"BinaryInvestment","category":"page"},{"location":"library/public/#EnergyModelsInvestments.BinaryInvestment","page":"Public","title":"EnergyModelsInvestments.BinaryInvestment","text":"BinaryInvestment <: Investment\n\nBinary investment in a given capacity with binary variables. The chosen capacity within an investment period is given by the field cap.\n\nBinary investments introduce one binary variable for each investment period.\n\nFields\n\ncap::TimeProfile is the capacity used for the binary investments. These investments come in addition to the existing capacity.\n\n\n\n\n\n","category":"type"},{"location":"library/public/#DiscreteInvestment","page":"Public","title":"DiscreteInvestment","text":"","category":"section"},{"location":"library/public/","page":"Public","title":"Public","text":"DiscreteInvestment allow for only a discrete increase in the capacity. This increase is specified through the field increment. Hence, it can be also dependent on the investment period.","category":"page"},{"location":"library/public/","page":"Public","title":"Public","text":"DiscreteInvestment can for example be used to represent investment in modular technologies that can be scaled by adding several modules together. In addition, it is beneficial to include for technologies that experience significant economy of scale. In this situation, several instances with different increment and capex can be used","category":"page"},{"location":"library/public/","page":"Public","title":"Public","text":"note: Note\nThis investment type leads to the addition of integer variables. The number of integer variables is equal to the number of strategic periods times the number of Nodes with the DiscreteInvestment mode.","category":"page"},{"location":"library/public/","page":"Public","title":"Public","text":"DiscreteInvestment","category":"page"},{"location":"library/public/#EnergyModelsInvestments.DiscreteInvestment","page":"Public","title":"EnergyModelsInvestments.DiscreteInvestment","text":"DiscreteInvestment <: Investment\n\nDiscrete investment with integer variables using an increment. The increment for the discrete investment can be different for the individual strategic periods.\n\nDiscrete investments introduce one integer variable for each investment period.\n\nFields\n\nincrement::TimeProfile is the used increment.\n\n\n\n\n\n","category":"type"},{"location":"library/public/#SemiContiInvestment","page":"Public","title":"SemiContiInvestment","text":"","category":"section"},{"location":"library/public/","page":"Public","title":"Public","text":"SemiContiInvestment is an abstract type used for two investment modes:","category":"page"},{"location":"library/public/","page":"Public","title":"Public","text":"SemiContinuousInvestment and\nSemiContinuousOffsetInvestment.","category":"page"},{"location":"library/public/","page":"Public","title":"Public","text":"These investment modes are similar with respect to how you can increase the capacity. They differ however on how the overall cost is calculated. Both investment modes are in general similar to ContinuousInvestment, but the investment is either 0 or between a minimum and maximum value. This means you can define the field min_add::TimeProfile without forcing investment in the technology. Instead, the value determines that if the model decides to invest, then it has to at least invest in the value provided through min_add. This can be also described as:","category":"page"},{"location":"library/public/","page":"Public","title":"Public","text":"x = 0 lor textttmin_add leq x leq textttmax_add","category":"page"},{"location":"library/public/","page":"Public","title":"Public","text":"with x corresponding to the invested capacity","category":"page"},{"location":"library/public/","page":"Public","title":"Public","text":"SemiContiInvestment","category":"page"},{"location":"library/public/#EnergyModelsInvestments.SemiContiInvestment","page":"Public","title":"EnergyModelsInvestments.SemiContiInvestment","text":"SemiContiInvestment <: Investment\n\nSupertype for semi-continuous investments, that is the added capacity is either zero or between a minimum and a maximum value.\n\nSemi-continuous investments introduce one binary variable for each investment period.\n\n\n\n\n\n","category":"type"},{"location":"library/public/","page":"Public","title":"Public","text":"note: Note\nThese investment modes leads to the addition of binary variables. The number of binary variables is equal to the number of strategic periods times the number of Nodes with the SemiContinuousInvestment and SemiContinuousOffsetInvestment mode.","category":"page"},{"location":"library/public/#SemiContinuousInvestment","page":"Public","title":"SemiContinuousInvestment","text":"","category":"section"},{"location":"library/public/","page":"Public","title":"Public","text":"The cost function in SemiContinuousInvestment is calculated in the same way as in ContinuousInvestment. The total contribution of invested capacity x to the objective function y is given through the equation","category":"page"},{"location":"library/public/","page":"Public","title":"Public","text":"y = textttcapex times x.","category":"page"},{"location":"library/public/","page":"Public","title":"Public","text":"SemiContinuousInvestment","category":"page"},{"location":"library/public/#EnergyModelsInvestments.SemiContinuousInvestment","page":"Public","title":"EnergyModelsInvestments.SemiContinuousInvestment","text":"SemiContinuousInvestment <: Investment\n\nSemi-continuous investments, that is the added capacity is either zero or between a minimum and a maximum value. In this subtype, the cost is crossing the origin, that is the CAPEX is still linear dependent on the\n\nSemi-continuous investments introduce one binary variable for each investment period.\n\nFields\n\nmin_add::TimeProfile is the minimum added capacity in an investment period. In the case of SemiContinuousInvestment, this implies that the model must invest at least in this capacity in each investment period. in this capacity in each investment period where the model decides to invest. The model can also choose not too invest at all.\nmax_add::TimeProfile is the maximum added capacity in an investment period.\n\n\n\n\n\n","category":"type"},{"location":"library/public/#SemiContinuousOffsetInvestment","page":"Public","title":"SemiContinuousOffsetInvestment","text":"","category":"section"},{"location":"library/public/","page":"Public","title":"Public","text":"SemiContinuousOffsetInvestment is a type of investment similar to SemiContinuousInvestment and implemented for investments in transmission infrastructure. It does differ with respect to how the costs are calculated. A SemiContinuousOffsetInvestment has an offset in the cost implemented through the the field capex_offset. This offset corresponds to the theoretical cost at an invested capacity of 0.","category":"page"},{"location":"library/public/","page":"Public","title":"Public","text":"While  SemiContinuousInvestmentutilizes the same relative cost, even if a lower limit is specified, SemiContinuousOffsetInvestment allows for the specification of an offset in the cost through the field capex_offset. This offset is an absolute cost. It corresponds to the theoretical cost at an invested capacity of 0. This changes the contribution to the cost function from","category":"page"},{"location":"library/public/","page":"Public","title":"Public","text":"y = textttcapex times x","category":"page"},{"location":"library/public/","page":"Public","title":"Public","text":"to","category":"page"},{"location":"library/public/","page":"Public","title":"Public","text":"y = textttcapex times x + textttcapex_offset","category":"page"},{"location":"library/public/","page":"Public","title":"Public","text":"where x corresponds to the invested capacity and y to the total capital cost.","category":"page"},{"location":"library/public/","page":"Public","title":"Public","text":"SemiContinuousOffsetInvestment","category":"page"},{"location":"library/public/#EnergyModelsInvestments.SemiContinuousOffsetInvestment","page":"Public","title":"EnergyModelsInvestments.SemiContinuousOffsetInvestment","text":"SemiContinuousOffsetInvestment <: Investment\n\nSemi-continuous investments, that is the added capacity is either zero or between a minimum and a maximum value. In this subtype, the cost is not crossing the origin. Instead, there is an offset (y- intercept) in the variable capex_cap, that is its value is larger or smaller than 0 at an invested capacity of 0 given by the field capex_offset. This allows to the user to use different slopes, and hence, account for economy of scales.\n\nSemi-continuous investments introduce one binary variable for each investment period.\n\nFields\n\nmax_add::TimeProfile is the maximum added capacity in an investment period.\nmin_add::TimeProfile is the minimum added capacity in an investment period. In the case of SemiContinuousOffsetInvestment, this implies that the model must invest at least in this capacity in each investment period. in this capacity in each investment period where the model decides to invest. The model can also choose not too invest at all.\ncapex_offset::TimeProfile is offset for the CAPEX in an investment period.\n\n\n\n\n\n","category":"type"},{"location":"library/public/#FixedInvestment","page":"Public","title":"FixedInvestment","text":"","category":"section"},{"location":"library/public/","page":"Public","title":"Public","text":"FixedInvestment is a type of investment where an investment in the given capacity is forced. It allows to account for the investment cost of known investments. In practice, there is however not too much use in including the fixed investment, except if one is interested in the values of the dual variables.","category":"page"},{"location":"library/public/","page":"Public","title":"Public","text":"The fields cap_min_add, cap_max_add, and cap_increment do not have a meaning when using FixedInvestment.","category":"page"},{"location":"library/public/","page":"Public","title":"Public","text":"FixedInvestment","category":"page"},{"location":"library/public/#EnergyModelsInvestments.FixedInvestment","page":"Public","title":"EnergyModelsInvestments.FixedInvestment","text":"FixedInvestment <: Investment\n\nFixed investment in a given capacity. The model is forced to invest in the capacity provided by the field cap.\n\nFields\n\ncap::TimeProfile is capacity used for the fixed investments. These investments come in addition to the existing capacity.\n\n\n\n\n\n","category":"type"},{"location":"library/public/#lib-pub-life_mode","page":"Public","title":"LifetimeMode","text":"","category":"section"},{"location":"library/public/","page":"Public","title":"Public","text":"EnergyModelsInvestments allows for differing descriptions for the lifetime of a technology. A key problem is when the lifetime of a technology is not equal to the duration of strategic periods. To this end, several ways to define the lifetime of a technology are available in the package and presented below.","category":"page"},{"location":"library/public/","page":"Public","title":"Public","text":"It is also possible for the user to define new LifetimeModes. In practice, this requires only the introduction of a new subtype to LifetimeMode as well as a single function.","category":"page"},{"location":"library/public/","page":"Public","title":"Public","text":"LifetimeMode","category":"page"},{"location":"library/public/#EnergyModelsInvestments.LifetimeMode","page":"Public","title":"EnergyModelsInvestments.LifetimeMode","text":"LifetimeMode\n\nSupertype for the lifetime mode.\n\n\n\n\n\n","category":"type"},{"location":"library/public/","page":"Public","title":"Public","text":"warning: Existing capacity and lifetime\nThe current implementation does not provide a lifetime for the existing capacity, independently if you use NoStartInvData or StartInvData. This is caused by the background of development of EnergyModelsInvestments. However, we are aware of this situation and look into potential approaches for including it. One such approach is outlined in Issue 30.","category":"page"},{"location":"library/public/#UnlimitedLife","page":"Public","title":"UnlimitedLife","text":"","category":"section"},{"location":"library/public/","page":"Public","title":"Public","text":"This LifetimeMode is used when the lifetime of a Node is not limited. No reinvestment is considered by the optimization and there is also no salvage value (or rest value) at the end of the last investment period. Hence, the costs are the same, independent of if the investments in the Node are happening in the first investment period (and the technology is used for, e.g, 25 years) or the last investment period (with a usage of, e.g., 5 years) when excluding discounting effects.","category":"page"},{"location":"library/public/","page":"Public","title":"Public","text":"UnlimitedLife is the default lifetime mode, if no other mode is specified.","category":"page"},{"location":"library/public/","page":"Public","title":"Public","text":"UnlimitedLife","category":"page"},{"location":"library/public/#EnergyModelsInvestments.UnlimitedLife","page":"Public","title":"EnergyModelsInvestments.UnlimitedLife","text":"UnlimitedLife <: LifetimeMode\n\nThe investment's life is not limited. The investment costs do not consider any reinvestment or rest value.\n\n\n\n\n\n","category":"type"},{"location":"library/public/#StudyLife","page":"Public","title":"StudyLife","text":"","category":"section"},{"location":"library/public/","page":"Public","title":"Public","text":"StudyLife includes the technology for the full investigated horizon. If the Lifetime is shorter than the remaining horizon, reinvestments are considered. These reinvestments are included in the costs of the investment investment period, but discounted to their actual value.","category":"page"},{"location":"library/public/","page":"Public","title":"Public","text":"As an example, consider investments with a lifetime of 20 years in 2030, while the study horizon ends in 2055. In this situation, reinvestments are required in 2050 to allow for operation in the last 5 years. The CAPEX are then correspondingly adjusted to account for both discounted reinvestments and final value in 2055.","category":"page"},{"location":"library/public/","page":"Public","title":"Public","text":"StudyLife","category":"page"},{"location":"library/public/#EnergyModelsInvestments.StudyLife","page":"Public","title":"EnergyModelsInvestments.StudyLife","text":"StudyLife <: LifetimeMode\n\nThe investment lasts for the whole study period with adequate reinvestments at the end of the lifetime and considering the rest value.\n\nFields\n\nlifetime::TimeProfile is the chosen lifetime of the technology.\n\n\n\n\n\n","category":"type"},{"location":"library/public/#PeriodLife","page":"Public","title":"PeriodLife","text":"","category":"section"},{"location":"library/public/","page":"Public","title":"Public","text":"PeriodLife is used to define that the investment is only lasting for the investment period in which it happens. Additional year of lifetime are counted as a rest value. Reinvestment inside the strategic periods are also considered in case the lifetime is shorter than the length of the investment period.","category":"page"},{"location":"library/public/","page":"Public","title":"Public","text":"PeriodLife","category":"page"},{"location":"library/public/#EnergyModelsInvestments.PeriodLife","page":"Public","title":"EnergyModelsInvestments.PeriodLife","text":"PeriodLife <: LifetimeMode\n\nThe investment is considered to last only for the investment period. The excess lifetime is considered in the rest value. If the lifetime is lower than the length of the period, reinvestment is considered as well.\n\nFields\n\nlifetime::TimeProfile is the chosen lifetime of the technology.\n\n\n\n\n\n","category":"type"},{"location":"library/public/#RollingLife","page":"Public","title":"RollingLife","text":"","category":"section"},{"location":"library/public/","page":"Public","title":"Public","text":"RollingLife corresponds to the classical roll-over of investments from one investment period to the next until the end of life is reached. In general, three different cases can be differentiated:","category":"page"},{"location":"library/public/","page":"Public","title":"Public","text":"The lifetime is shorter than the duration of the investment period. In this situation, a PeriodLife is assumed.\nThe lifetime equals the duration of the investment period. In this situation, the capacity is retired at the end of the investment period\nThe lifetime is longer than the duration of the investment period. This leaves however a problem if the lifetime does fall in-between two strategic periods, as it would be the case for a lifetime of, e.g., 8 years and two strategic periods of, e.g, 5 years. In this case, the technology would only be available for the first 3 years of the second investment period leaving the question on how to handle this situation. EnergyModelsInvestments retires the technology at the last full investment period and calculates the remaining value for the technology.","category":"page"},{"location":"library/public/","page":"Public","title":"Public","text":"RollingLife","category":"page"},{"location":"library/public/#EnergyModelsInvestments.RollingLife","page":"Public","title":"EnergyModelsInvestments.RollingLife","text":"RollingLife <: LifetimeMode\n\nThe investment is rolling to the next strategic periods and it is retired at the end of its lifetime or the end of the previous investment period if its lifetime ends between two periods.\n\nFields\n\nlifetime::TimeProfile is the chosen lifetime of the technology.\n\n\n\n\n\n","category":"type"}]
}
